{"ast":null,"code":"function mod(n, x) {\n  return (n % x + x) % x;\n}\nfunction absFloor(num) {\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\nfunction isString(str) {\n  return typeof str === 'string';\n}\nfunction isDate(value) {\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\nfunction isBoolean(value) {\n  return value === true || value === false;\n}\nfunction isDateValid(date) {\n  return date && date.getTime && !isNaN(date.getTime());\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isFunction(fn) {\n  return fn instanceof Function || Object.prototype.toString.call(fn) === '[object Function]';\n}\nfunction isNumber(value) {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\nfunction isArray(input) {\n  return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\nfunction hasOwnProp(a /*object*/, b) {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\nfunction isObject(input /*object*/) {\n  // IE8 will treat undefined and null as object if it wasn't for\n  // input != null\n  return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\nfunction isObjectEmpty(obj) {\n  if (Object.getOwnPropertyNames) {\n    return Object.getOwnPropertyNames(obj).length === 0;\n  }\n  let k;\n  for (k in obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (obj.hasOwnProperty(k)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isUndefined(input) {\n  return input === void 0;\n}\nfunction toInt(argumentForCoercion) {\n  const coercedNumber = +argumentForCoercion;\n  let value = 0;\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n    value = absFloor(coercedNumber);\n  }\n  return value;\n}\nconst aliases = {};\nconst _mapUnits = {\n  date: 'day',\n  hour: 'hours',\n  minute: 'minutes',\n  second: 'seconds',\n  millisecond: 'milliseconds'\n};\nfunction addUnitAlias(unit, shorthand) {\n  const lowerCase = unit.toLowerCase();\n  let _unit = unit;\n  if (lowerCase in _mapUnits) {\n    _unit = _mapUnits[lowerCase];\n  }\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\nfunction normalizeUnits(units) {\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\nfunction normalizeObjectUnits(inputObject) {\n  const normalizedInput = {};\n  let normalizedProp;\n  let prop;\n  for (prop in inputObject) {\n    if (hasOwnProp(inputObject, prop)) {\n      normalizedProp = normalizeUnits(prop);\n      if (normalizedProp) {\n        normalizedInput[normalizedProp] = inputObject[prop];\n      }\n    }\n  }\n  return normalizedInput;\n}\n\n// place in new Date([array])\nconst YEAR = 0;\nconst MONTH = 1;\nconst DATE = 2;\nconst HOUR = 3;\nconst MINUTE = 4;\nconst SECOND = 5;\nconst MILLISECOND = 6;\nconst WEEK = 7;\nconst WEEKDAY = 8;\nfunction zeroFill(num, targetLength, forceSign) {\n  const absNumber = `${Math.abs(num)}`;\n  const zerosToFill = targetLength - absNumber.length;\n  const sign = num >= 0;\n  const _sign = sign ? forceSign ? '+' : '' : '-';\n  // todo: this is crazy slow\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n  return _sign + _zeros + absNumber;\n}\nconst formatFunctions = {};\nconst formatTokenFunctions = {};\nconst formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken(token, padded, ordinal, callback) {\n  if (token) {\n    formatTokenFunctions[token] = callback;\n  }\n  if (padded) {\n    formatTokenFunctions[padded[0]] = function () {\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n    };\n  }\n  if (ordinal) {\n    formatTokenFunctions[ordinal] = function (date, opts) {\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\n    };\n  }\n}\nfunction makeFormatFunction(format) {\n  const array = format.match(formattingTokens);\n  const length = array.length;\n  const formatArr = new Array(length);\n  for (let i = 0; i < length; i++) {\n    formatArr[i] = formatTokenFunctions[array[i]] ? formatTokenFunctions[array[i]] : removeFormattingTokens(array[i]);\n  }\n  return function (date, locale, isUTC, offset = 0) {\n    let output = '';\n    for (let j = 0; j < length; j++) {\n      output += isFunction(formatArr[j]) ? formatArr[j].call(null, date, {\n        format,\n        locale,\n        isUTC,\n        offset\n      }) : formatArr[j];\n    }\n    return output;\n  };\n}\nfunction removeFormattingTokens(input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n  return input.replace(/\\\\/g, '');\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction createUTCDate(y, m, d) {\n  // eslint-disable-next-line prefer-rest-params\n  const date = new Date(Date.UTC.apply(null, arguments));\n  // the Date.UTC function remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n    date.setUTCFullYear(y);\n  }\n  return date;\n}\nfunction createDate(y, m = 0, d = 1, h = 0, M = 0, s = 0, ms = 0) {\n  const date = new Date(y, m, d, h, M, s, ms);\n  // the date constructor remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n    date.setFullYear(y);\n  }\n  return date;\n}\nfunction getHours(date, isUTC = false) {\n  return isUTC ? date.getUTCHours() : date.getHours();\n}\nfunction getMinutes(date, isUTC = false) {\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\nfunction getSeconds(date, isUTC = false) {\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\nfunction getMilliseconds(date, isUTC = false) {\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\nfunction getTime(date) {\n  return date.getTime();\n}\nfunction getDay(date, isUTC = false) {\n  return isUTC ? date.getUTCDay() : date.getDay();\n}\nfunction getDate(date, isUTC = false) {\n  return isUTC ? date.getUTCDate() : date.getDate();\n}\nfunction getMonth(date, isUTC = false) {\n  return isUTC ? date.getUTCMonth() : date.getMonth();\n}\nfunction getFullYear(date, isUTC = false) {\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\nfunction getUnixTime(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\nfunction unix(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\nfunction getFirstDayOfMonth(date) {\n  return createDate(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds());\n}\nfunction daysInMonth$1(date) {\n  return _daysInMonth(date.getFullYear(), date.getMonth());\n}\nfunction _daysInMonth(year, month) {\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\nfunction isFirstDayOfWeek(date, firstDayOfWeek) {\n  return date.getDay() === Number(firstDayOfWeek);\n}\nfunction isSameMonth(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\nfunction isSameYear(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n  return getFullYear(date1) === getFullYear(date2);\n}\nfunction isSameDay$1(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n  return isSameYear(date1, date2) && isSameMonth(date1, date2) && getDate(date1) === getDate(date2);\n}\nconst match1 = /\\d/; //       0 - 9\nconst match2 = /\\d\\d/; //      00 - 99\nconst match3 = /\\d{3}/; //     000 - 999\nconst match4 = /\\d{4}/; //    0000 - 9999\nconst match6 = /[+-]?\\d{6}/; // -999999 - 999999\nconst match1to2 = /\\d\\d?/; //       0 - 99\nconst match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\nconst match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nconst match1to3 = /\\d{1,3}/; //       0 - 999\nconst match1to4 = /\\d{1,4}/; //       0 - 9999\nconst match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\nconst matchUnsigned = /\\d+/; //       0 - inf\nconst matchSigned = /[+-]?\\d+/; //    -inf - inf\nconst matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nconst matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\nconst matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nconst matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\nconst regexes = {};\nfunction addRegexToken(token, regex, strictRegex) {\n  if (isFunction(regex)) {\n    regexes[token] = regex;\n    return;\n  }\n  regexes[token] = function (isStrict, locale) {\n    return isStrict && strictRegex ? strictRegex : regex;\n  };\n}\nfunction getParseRegexForToken(token, locale) {\n  const _strict = false;\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n  return regexes[token](_strict, locale);\n}\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(str) {\n  return regexEscape(str.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4));\n}\nfunction regexEscape(str) {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\nconst tokens = {};\nfunction addParseToken(token, callback) {\n  const _token = isString(token) ? [token] : token;\n  let func = callback;\n  if (isNumber(callback)) {\n    func = function (input, array, config) {\n      array[callback] = toInt(input);\n      return config;\n    };\n  }\n  if (isArray(_token) && isFunction(func)) {\n    let i;\n    for (i = 0; i < _token.length; i++) {\n      tokens[_token[i]] = func;\n    }\n  }\n}\nfunction addWeekParseToken(token, callback) {\n  addParseToken(token, function (input, array, config, _token) {\n    config._w = config._w || {};\n    return callback(input, config._w, config, _token);\n  });\n}\nfunction addTimeToArrayFromToken(token, input, config) {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n  return config;\n}\nconst priorities = {};\nfunction addUnitPriority(unit, priority) {\n  priorities[unit] = priority;\n}\n/*\nexport function getPrioritizedUnits(unitsObj) {\n  const units = [];\n  let unit;\n  for (unit in unitsObj) {\n    if (unitsObj.hasOwnProperty(unit)) {\n      units.push({ unit, priority: priorities[unit] });\n    }\n  }\n  units.sort(function (a, b) {\n    return a.priority - b.priority;\n  });\n\n  return units;\n}\n*/\n\nfunction initDayOfMonth() {\n  // FORMATTING\n  addFormatToken('D', ['DD', 2, false], 'Do', function (date, opts) {\n    return getDate(date, opts.isUTC).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('date', 'D');\n  // PRIOROITY\n  addUnitPriority('date', 9);\n  // PARSING\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array, config) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n    return config;\n  });\n}\nfunction defaultParsingFlags() {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\nfunction getParsingFlags(config) {\n  if (config._pf == null) {\n    config._pf = defaultParsingFlags();\n  }\n  return config._pf;\n}\n\n// FORMATTING\nfunction getYear(date, opts) {\n  if (opts.locale.getFullYear) {\n    return opts.locale.getFullYear(date, opts.isUTC).toString();\n  }\n  return getFullYear(date, opts.isUTC).toString();\n}\nfunction initYear() {\n  addFormatToken('Y', null, null, function (date, opts) {\n    const y = getFullYear(date, opts.isUTC);\n    return y <= 9999 ? y.toString(10) : `+${y}`;\n  });\n  addFormatToken(null, ['YY', 2, false], null, function (date, opts) {\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\n  });\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n  // ALIASES\n  addUnitAlias('year', 'y');\n  // PRIORITIES\n  addUnitPriority('year', 1);\n  // PARSING\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array, config) {\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n    return config;\n  });\n  addParseToken('YY', function (input, array, config) {\n    array[YEAR] = parseTwoDigitYear(input);\n    return config;\n  });\n  addParseToken('Y', function (input, array, config) {\n    array[YEAR] = parseInt(input, 10);\n    return config;\n  });\n}\nfunction parseTwoDigitYear(input) {\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\nfunction daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\nfunction isLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n// todo: this is duplicate, source in date-getters.ts\nfunction daysInMonth(year, month) {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n  const modMonth = mod(month, 12);\n  const _year = year + (month - modMonth) / 12;\n  return modMonth === 1 ? isLeapYear(_year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n}\nfunction initMonth() {\n  // FORMATTING\n  addFormatToken('M', ['MM', 2, false], 'Mo', function (date, opts) {\n    return (getMonth(date, opts.isUTC) + 1).toString(10);\n  });\n  addFormatToken('MMM', null, null, function (date, opts) {\n    return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('MMMM', null, null, function (date, opts) {\n    return opts.locale.months(date, opts.format, opts.isUTC);\n  });\n  // ALIASES\n  addUnitAlias('month', 'M');\n  // PRIORITY\n  addUnitPriority('month', 8);\n  // PARSING\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array, config) {\n    array[MONTH] = toInt(input) - 1;\n    return config;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    const month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = !!input;\n    }\n    return config;\n  });\n}\nconst defaultTimeUnit = {\n  year: 0,\n  month: 0,\n  day: 0,\n  hour: 0,\n  minute: 0,\n  seconds: 0\n};\nfunction shiftDate(date, unit) {\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\n  const year = date.getFullYear() + (_unit.year || 0);\n  const month = date.getMonth() + (_unit.month || 0);\n  let day = date.getDate() + (_unit.day || 0);\n  if (_unit.month && !_unit.day) {\n    day = Math.min(day, daysInMonth(year, month));\n  }\n  return createDate(year, month, day, date.getHours() + (_unit.hour || 0), date.getMinutes() + (_unit.minute || 0), date.getSeconds() + (_unit.seconds || 0));\n}\nfunction setFullDate(date, unit) {\n  return createDate(getNum(date.getFullYear(), unit.year), getNum(date.getMonth(), unit.month), 1,\n  // day, to avoid issue with wrong months selection at the end of current month (#5371)\n  getNum(date.getHours(), unit.hour), getNum(date.getMinutes(), unit.minute), getNum(date.getSeconds(), unit.seconds), getNum(date.getMilliseconds(), unit.milliseconds));\n}\nfunction getNum(def, num) {\n  return isNumber(num) ? num : def;\n}\nfunction setFullYear(date, value, isUTC) {\n  const _month = getMonth(date, isUTC);\n  const _date = getDate(date, isUTC);\n  const _year = getFullYear(date, isUTC);\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\n    const _daysInMonth = daysInMonth(value, _month);\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n  }\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n  return date;\n}\nfunction setMonth(date, value, isUTC) {\n  const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n  return date;\n}\nfunction setDay(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\nfunction setHours(date, value, isUTC) {\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\n  return date;\n}\nfunction setMinutes(date, value, isUTC) {\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n  return date;\n}\nfunction setSeconds(date, value, isUTC) {\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n  return date;\n}\nfunction setMilliseconds(date, value, isUTC) {\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n  return date;\n}\nfunction setDate(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\nfunction setTime(date, value) {\n  date.setTime(value);\n  return date;\n}\n\n// fastest way to clone date\n// https://jsperf.com/clone-date-object2\nfunction cloneDate(date) {\n  return new Date(date.getTime());\n}\nfunction startOf(date, unit, isUTC) {\n  const _date = cloneDate(date);\n  // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n    /* falls through */\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n    /* falls through */\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n    /* falls through */\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n    /* falls through */\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n    /* falls through */\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  }\n  // weeks are a special case\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {\n      isUTC\n    });\n  }\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  }\n  // quarters are also special\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n  return _date;\n}\nfunction endOf(date, unit, isUTC) {\n  let _unit = unit;\n  // 'date' is an alias for 'day', so it should be considered as such.\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n  const start = startOf(date, _unit, isUTC);\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\n  return res;\n}\nfunction initDayOfYear() {\n  // FORMATTING\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo', function (date) {\n    return getDayOfYear(date).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('dayOfYear', 'DDD');\n  // PRIORITY\n  addUnitPriority('dayOfYear', 4);\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n    return config;\n  });\n}\nfunction getDayOfYear(date, isUTC) {\n  const date1 = +startOf(date, 'day', isUTC);\n  const date2 = +startOf(date, 'year', isUTC);\n  const someDate = date1 - date2;\n  const oneDay = 1000 * 60 * 60 * 24;\n  return Math.round(someDate / oneDay) + 1;\n}\nfunction setDayOfYear(date, input) {\n  const dayOfYear = getDayOfYear(date);\n  return add(date, input - dayOfYear, 'day');\n}\n\n/**\n *\n * @param {number} year\n * @param {number} dow - start-of-first-week\n * @param {number} doy - start-of-year\n * @returns {number}\n */\nfunction firstWeekOffset(year, dow, doy) {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  const fwd = dow - doy + 7;\n  // first-week day local weekday -- which local weekday is fwd\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n  return -fwdlw + fwd - 1;\n}\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n  const localWeekday = (7 + weekday - dow) % 7;\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  let resYear;\n  let resDayOfYear;\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\nfunction weekOfYear(date, dow, doy, isUTC) {\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n  let resWeek;\n  let resYear;\n  if (week < 1) {\n    resYear = getFullYear(date, isUTC) - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n    resYear = getFullYear(date, isUTC) + 1;\n  } else {\n    resYear = getFullYear(date, isUTC);\n    resWeek = week;\n  }\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\nfunction weeksInYear(year, dow, doy) {\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nconst defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nconst defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nconst defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nconst defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nconst defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nconst defaultLongDateFormat = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\nconst defaultOrdinal = '%d';\nconst defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\nconst defaultMonthsShortRegex = matchWord;\nconst defaultMonthsRegex = matchWord;\nclass Locale {\n  constructor(config) {\n    if (config) {\n      this.set(config);\n    }\n  }\n  set(config) {\n    let confKey;\n    for (confKey in config) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (!config.hasOwnProperty(confKey)) {\n        continue;\n      }\n      const prop = config[confKey];\n      const key = isFunction(prop) ? confKey : `_${confKey}`;\n      this[key] = prop;\n    }\n    this._config = config;\n  }\n  calendar(key, date, now) {\n    const output = this._calendar[key] || this._calendar[\"sameElse\"];\n    return isFunction(output) ? output.call(null, date, now) : output;\n  }\n  longDateFormat(key) {\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n    if (format || !formatUpper) {\n      return format;\n    }\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n  get invalidDate() {\n    return this._invalidDate;\n  }\n  set invalidDate(val) {\n    this._invalidDate = val;\n  }\n  ordinal(num, token) {\n    return this._ordinal.replace('%d', num.toString(10));\n  }\n  preparse(str, format) {\n    return str;\n  }\n  getFullYear(date, isUTC = false) {\n    return getFullYear(date, isUTC);\n  }\n  postformat(str) {\n    return str;\n  }\n  relativeTime(num, withoutSuffix, str, isFuture) {\n    const output = this._relativeTime[str];\n    return isFunction(output) ? output(num, withoutSuffix, str, isFuture) : output.replace(/%d/i, num.toString(10));\n  }\n  pastFuture(diff, output) {\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n  months(date, format, isUTC = false) {\n    if (!date) {\n      return isArray(this._months) ? this._months : this._months.standalone;\n    }\n    if (isArray(this._months)) {\n      return this._months[getMonth(date, isUTC)];\n    }\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone';\n    return this._months[key][getMonth(date, isUTC)];\n  }\n  monthsShort(date, format, isUTC = false) {\n    if (!date) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;\n    }\n    if (isArray(this._monthsShort)) {\n      return this._monthsShort[getMonth(date, isUTC)];\n    }\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n    return this._monthsShort[key][getMonth(date, isUTC)];\n  }\n  monthsParse(monthName, format, strict) {\n    let date;\n    let regex;\n    if (this._monthsParseExact) {\n      return this.handleMonthStrictParse(monthName, format, strict);\n    }\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(Date.UTC(2000, i));\n      if (strict && !this._longMonthsParse[i]) {\n        const _months = this.months(date, '', true).replace('.', '');\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // testing the regex\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      }\n      if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      }\n      if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n  monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      }\n      return this._monthsRegex;\n    }\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n  }\n  monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      }\n      return this._monthsShortRegex;\n    }\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n  }\n  /** Week */\n  week(date, isUTC) {\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n  }\n  firstDayOfWeek() {\n    return this._week.dow;\n  }\n  firstDayOfYear() {\n    return this._week.doy;\n  }\n  weekdays(date, format, isUTC) {\n    if (!date) {\n      return isArray(this._weekdays) ? this._weekdays : this._weekdays.standalone;\n    }\n    if (isArray(this._weekdays)) {\n      return this._weekdays[getDay(date, isUTC)];\n    }\n    const _key = this._weekdays.isFormat.test(format) ? 'format' : 'standalone';\n    return this._weekdays[_key][getDay(date, isUTC)];\n  }\n  weekdaysMin(date, format, isUTC) {\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n  }\n  weekdaysShort(date, format, isUTC) {\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n  }\n  // proto.weekdaysParse  =        localeWeekdaysParse;\n  weekdaysParse(weekdayName, format, strict) {\n    let i;\n    let regex;\n    if (this._weekdaysParseExact) {\n      return this.handleWeekStrictParse(weekdayName, format, strict);\n    }\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // fix: here is the issue\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      if (!isArray(this._fullWeekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse) || !isArray(this._weekdaysParse)) {\n        return;\n      }\n      // testing the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }\n  // proto.weekdaysRegex       =        weekdaysRegex;\n  weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = matchWord;\n      }\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n  // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n  weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = matchWord;\n      }\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n  weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = matchWord;\n      }\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n  isPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return input.toLowerCase().charAt(0) === 'p';\n  }\n  meridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    }\n    return isLower ? 'am' : 'AM';\n  }\n  formatLongDate(key) {\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n    if (format || !formatUpper) {\n      return format;\n    }\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, val => {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n  handleMonthStrictParse(monthName, format, strict) {\n    const llc = monthName.toLocaleLowerCase();\n    let i;\n    let ii;\n    let mom;\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = new Date(2000, i);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n    if (strict) {\n      if (format === 'MMM') {\n        ii = this._shortMonthsParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n      ii = this._longMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n    if (format === 'MMM') {\n      ii = this._shortMonthsParse.indexOf(llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = this._longMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n    ii = this._longMonthsParse.indexOf(llc);\n    if (ii !== -1) {\n      return ii;\n    }\n    ii = this._shortMonthsParse.indexOf(llc);\n    return ii !== -1 ? ii : null;\n  }\n  handleWeekStrictParse(weekdayName, format, strict) {\n    let ii;\n    const llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n      let i;\n      for (i = 0; i < 7; ++i) {\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n      }\n    }\n    if (!isArray(this._weekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse)) {\n      return;\n    }\n    if (strict) {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n  computeMonthsParse() {\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n    let date;\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(2000, i);\n      shortPieces.push(this.monthsShort(date, ''));\n      longPieces.push(this.months(date, ''));\n      mixedPieces.push(this.months(date, ''));\n      mixedPieces.push(this.monthsShort(date, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n  }\n  computeWeekdaysParse() {\n    const minPieces = [];\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n    let i;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // let mom = createUTC([2000, 1]).day(i);\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      const minp = this.weekdaysMin(date);\n      const shortp = this.weekdaysShort(date);\n      const longp = this.weekdays(date);\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n  }\n}\nfunction cmpLenRev(a, b) {\n  return b.length - a.length;\n}\nconst defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\nconst defaultInvalidDate = 'Invalid date';\nconst defaultLocaleWeek = {\n  dow: 0,\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\n\nconst defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nconst defaultRelativeTime = {\n  future: 'in %s',\n  past: '%s ago',\n  s: 'a few seconds',\n  ss: '%d seconds',\n  m: 'a minute',\n  mm: '%d minutes',\n  h: 'an hour',\n  hh: '%d hours',\n  d: 'a day',\n  dd: '%d days',\n  M: 'a month',\n  MM: '%d months',\n  y: 'a year',\n  yy: '%d years'\n};\nconst baseConfig = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n  week: defaultLocaleWeek,\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n  meridiemParse: defaultLocaleMeridiemParse\n};\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n  const len = Math.min(array1.length, array2.length);\n  const lengthDiff = Math.abs(array1.length - array2.length);\n  let diffs = 0;\n  let i;\n  for (i = 0; i < len; i++) {\n    if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n      diffs++;\n    }\n  }\n  return diffs + lengthDiff;\n}\n\n// FORMATTING\nfunction initWeek() {\n  addFormatToken('w', ['ww', 2, false], 'wo', function (date, opts) {\n    return getWeek(date, opts.locale).toString(10);\n  });\n  addFormatToken('W', ['WW', 2, false], 'Wo', function (date) {\n    return getISOWeek(date).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W');\n  // PRIORITIES\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5);\n  // PARSING\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n    return config;\n  });\n  // export function getSetWeek (input) {\n  //   var week = this.localeData().week(this);\n  //   return input == null ? week : this.add((input - week) * 7, 'd');\n  // }\n}\n\nfunction setWeek(date, input, locale = getLocale()) {\n  const week = getWeek(date, locale);\n  return add(date, (input - week) * 7, 'day');\n}\nfunction getWeek(date, locale = getLocale(), isUTC) {\n  return locale.week(date, isUTC);\n}\n// export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\nfunction setISOWeek(date, input) {\n  const week = getISOWeek(date);\n  return add(date, (input - week) * 7, 'day');\n}\nfunction getISOWeek(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).week;\n}\n\n// FORMATTING\nfunction initWeekYear() {\n  addFormatToken(null, ['gg', 2, false], null, function (date, opts) {\n    // return this.weekYear() % 100;\n    return (getWeekYear(date, opts.locale) % 100).toString();\n  });\n  addFormatToken(null, ['GG', 2, false], null, function (date) {\n    // return this.isoWeekYear() % 100;\n    return (getISOWeekYear(date) % 100).toString();\n  });\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\n  // ALIASES\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG');\n  // PRIORITY\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1);\n  // PARSING\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n    return config;\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = parseTwoDigitYear(input);\n    return config;\n  });\n}\nfunction addWeekYearFormatToken(token, getter) {\n  addFormatToken(null, [token, token.length, false], null, getter);\n}\nfunction _getWeekYearFormatCb(date, opts) {\n  return getWeekYear(date, opts.locale).toString();\n}\nfunction _getISOWeekYearFormatCb(date) {\n  return getISOWeekYear(date).toString();\n}\n// MOMENTS\nfunction getSetWeekYear(date, input, locale = getLocale(), isUTC) {\n  return getSetWeekYearHelper(date, input,\n  // this.week(),\n  getWeek(date, locale, isUTC),\n  // this.weekday(),\n  getLocaleDayOfWeek(date, locale, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC);\n}\nfunction getWeekYear(date, locale = getLocale(), isUTC) {\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\nfunction getSetISOWeekYear(date, input, isUTC) {\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\nfunction getISOWeekYear(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).year;\n}\nfunction getISOWeeksInYear(date, isUTC) {\n  return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\nfunction getWeeksInYear(date, isUTC, locale = getLocale()) {\n  return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\nfunction getSetWeekYearHelper(date, input, week, weekday, dow, doy, isUTC) {\n  if (!input) {\n    return getWeekYear(date, void 0, isUTC);\n  }\n  const weeksTarget = weeksInYear(input, dow, doy);\n  const _week = week > weeksTarget ? weeksTarget : week;\n  return setWeekAll(date, input, _week, weekday, dow, doy);\n}\nfunction setWeekAll(date, weekYear, week, weekday, dow, doy) {\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n  const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n  setFullYear(date, getFullYear(_date, true), true);\n  setMonth(date, getMonth(_date, true), true);\n  setDate(date, getDate(_date, true), true);\n  return date;\n}\n\n// todo: add support for timezones\nfunction initTimezone() {\n  // FORMATTING\n  addFormatToken('z', null, null, function (date, opts) {\n    return opts.isUTC ? 'UTC' : '';\n  });\n  addFormatToken('zz', null, null, function (date, opts) {\n    return opts.isUTC ? 'Coordinated Universal Time' : '';\n  });\n}\n// MOMENTS\nfunction getZoneAbbr(isUTC) {\n  return isUTC ? 'UTC' : '';\n}\nfunction getZoneName(isUTC) {\n  return isUTC ? 'Coordinated Universal Time' : '';\n}\nfunction initTimestamp() {\n  // FORMATTING\n  addFormatToken('X', null, null, function (date) {\n    return unix(date).toString(10);\n  });\n  addFormatToken('x', null, null, function (date) {\n    return date.valueOf().toString(10);\n  });\n  // PARSING\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n    return config;\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n    return config;\n  });\n}\nfunction initSecond() {\n  // FORMATTING\n  addFormatToken('s', ['ss', 2, false], null, function (date, opts) {\n    return getSeconds(date, opts.isUTC).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('second', 's');\n  // PRIORITY\n  addUnitPriority('second', 15);\n  // PARSING\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n}\nfunction initQuarter() {\n  // FORMATTING\n  addFormatToken('Q', null, 'Qo', function (date, opts) {\n    return getQuarter(date, opts.isUTC).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('quarter', 'Q');\n  // PRIORITY\n  addUnitPriority('quarter', 7);\n  // PARSING\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array, config) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n    return config;\n  });\n}\n// MOMENTS\nfunction getQuarter(date, isUTC = false) {\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\nfunction setQuarter(date, quarter, isUTC) {\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n// export function getSetQuarter(input) {\n//   return input == null\n//     ? Math.ceil((this.month() + 1) / 3)\n//     : this.month((input - 1) * 3 + this.month() % 3);\n// }\n\n// FORMATTING\nfunction addOffsetFormatToken(token, separator) {\n  addFormatToken(token, null, null, function (date, config) {\n    let offset = getUTCOffset(date, {\n      _isUTC: config.isUTC,\n      _offset: config.offset\n    });\n    let sign = '+';\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n  });\n}\nfunction initOffset() {\n  addOffsetFormatToken('Z', ':');\n  addOffsetFormatToken('ZZ', '');\n  // PARSING\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n    return config;\n  });\n}\n// HELPERS\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\nfunction offsetFromString(matcher, str) {\n  const matches = (str || '').match(matcher);\n  if (matches === null) {\n    return null;\n  }\n  const chunk = matches[matches.length - 1];\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n  const _min = parts[0] === '+' ? minutes : -minutes;\n  return minutes === 0 ? 0 : _min;\n}\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, date, config = {}) {\n  if (!config._isUTC) {\n    return input;\n  }\n  const res = cloneDate(date);\n  // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n  const offsetDiff = (config._offset || 0) * 60000;\n  const diff = input.valueOf() - res.valueOf() + offsetDiff;\n  // Use low-level api, because this fn is low-level api.\n  res.setTime(res.valueOf() + diff);\n  // todo: add timezone handling\n  // hooks.updateOffset(res, false);\n  return res;\n}\nfunction getDateOffset(date) {\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n  // https://github.com/moment/moment/pull/1871\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n// HOOKS\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n// MOMENTS\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getUTCOffset(date, config = {}) {\n  const _offset = config._offset || 0;\n  return config._isUTC ? _offset : getDateOffset(date);\n}\nfunction setUTCOffset(date, input, keepLocalTime, keepMinutes, config = {}) {\n  const offset = config._offset || 0;\n  let localAdjust;\n  let _input = input;\n  let _date = date;\n  if (isString(_input)) {\n    _input = offsetFromString(matchShortOffset, _input);\n    if (_input === null) {\n      return _date;\n    }\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n    _input = _input * 60;\n  }\n  if (!config._isUTC && keepLocalTime) {\n    localAdjust = getDateOffset(_date);\n  }\n  config._offset = _input;\n  config._isUTC = true;\n  if (localAdjust != null) {\n    _date = add(_date, localAdjust, 'minutes');\n  }\n  if (offset !== _input) {\n    if (!keepLocalTime || config._changeInProgress) {\n      _date = add(_date, _input - offset, 'minutes', config._isUTC);\n      // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n    } else if (!config._changeInProgress) {\n      config._changeInProgress = true;\n      // todo: add timezone handling\n      // hooks.updateOffset(this, true);\n      config._changeInProgress = null;\n    }\n  }\n  return _date;\n}\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\nfunction setOffsetToUTC(date, keepLocalTime) {\n  return setUTCOffset(date, 0, keepLocalTime);\n}\nfunction isDaylightSavingTime(date) {\n  return getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0)) || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5));\n}\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\nfunction setOffsetToParsedOffset(date, input, config = {}) {\n  if (config._tzm != null) {\n    return setUTCOffset(date, config._tzm, false, true, config);\n  }\n  if (isString(input)) {\n    const tZone = offsetFromString(matchOffset, input);\n    if (tZone != null) {\n      return setUTCOffset(date, tZone, false, false, config);\n    }\n    return setUTCOffset(date, 0, true, false, config);\n  }\n  return date;\n}\nfunction hasAlignedHourOffset(date, input) {\n  const _input = input ? getUTCOffset(input, {\n    _isUTC: false\n  }) : 0;\n  return (getUTCOffset(date) - _input) % 60 === 0;\n}\n// DEPRECATED\n/*export function isDaylightSavingTimeShifted() {\n  if (!isUndefined(this._isDSTShifted)) {\n    return this._isDSTShifted;\n  }\n\n  const c = {};\n\n  copyConfig(c, this);\n  c = prepareConfig(c);\n\n  if (c._a) {\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n    this._isDSTShifted = this.isValid() &&\n      compareArrays(c._a, other.toArray()) > 0;\n  } else {\n    this._isDSTShifted = false;\n  }\n\n  return this._isDSTShifted;\n}*/\n// in Khronos\n/*export function isLocal() {\n  return this.isValid() ? !this._isUTC : false;\n}\n\nexport function isUtcOffset() {\n  return this.isValid() ? this._isUTC : false;\n}\n\nexport function isUtc() {\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}*/\n\nfunction initMinute() {\n  // FORMATTING\n  addFormatToken('m', ['mm', 2, false], null, function (date, opts) {\n    return getMinutes(date, opts.isUTC).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('minute', 'm');\n  // PRIORITY\n  addUnitPriority('minute', 14);\n  // PARSING\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n}\n\n// FORMATTING\nfunction initMillisecond() {\n  addFormatToken('S', null, null, function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n  });\n  addFormatToken(null, ['SS', 2, false], null, function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n  });\n  addFormatToken(null, ['SSS', 3, false], null, function (date, opts) {\n    return getMilliseconds(date, opts.isUTC).toString(10);\n  });\n  addFormatToken(null, ['SSSS', 4, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n  });\n  addFormatToken(null, ['SSSSS', 5, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n  });\n  addFormatToken(null, ['SSSSSS', 6, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSS', 7, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSS', 8, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('millisecond', 'ms');\n  // PRIORITY\n  addUnitPriority('millisecond', 16);\n  // PARSING\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  let token;\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n  function parseMs(input, array, config) {\n    array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n    return config;\n  }\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  }\n  // MOMENTS\n}\n\nfunction initHour() {\n  // FORMATTING\n  function hFormat(date, isUTC) {\n    return getHours(date, isUTC) % 12 || 12;\n  }\n  function kFormat(date, isUTC) {\n    return getHours(date, isUTC) || 24;\n  }\n  addFormatToken('H', ['HH', 2, false], null, function (date, opts) {\n    return getHours(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('h', ['hh', 2, false], null, function (date, opts) {\n    return hFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('k', ['kk', 2, false], null, function (date, opts) {\n    return kFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('hmm', null, null, function (date, opts) {\n    const _h = hFormat(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    return `${_h}${_mm}`;\n  });\n  addFormatToken('hmmss', null, null, function (date, opts) {\n    const _h = hFormat(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n    return `${_h}${_mm}${_ss}`;\n  });\n  addFormatToken('Hmm', null, null, function (date, opts) {\n    const _H = getHours(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    return `${_H}${_mm}`;\n  });\n  addFormatToken('Hmmss', null, null, function (date, opts) {\n    const _H = getHours(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n    return `${_H}${_mm}${_ss}`;\n  });\n  function meridiem(token, lowercase) {\n    addFormatToken(token, null, null, function (date, opts) {\n      return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n    });\n  }\n  meridiem('a', true);\n  meridiem('A', false);\n  // ALIASES\n  addUnitAlias('hour', 'h');\n  // PRIORITY\n  addUnitPriority('hour', 13);\n  // PARSING\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    const kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n    return config;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n    return config;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    return config;\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    return config;\n  });\n}\n\n// internal storage for locale config files\nconst locales = {};\nconst localeFamilies = {};\nlet globalLocale;\nfunction normalizeLocale(key) {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n}\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n  let next;\n  let locale;\n  let i = 0;\n  while (i < names.length) {\n    const split = normalizeLocale(names[i]).split('-');\n    let j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n      if (locale) {\n        return locale;\n      }\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        // the next array item is better than a shallower substring of this one\n        break;\n      }\n      j--;\n    }\n    i++;\n  }\n  return null;\n}\nfunction mergeConfigs(parentConfig, childConfig) {\n  const res = Object.assign({}, parentConfig);\n  for (const childProp in childConfig) {\n    if (!hasOwnProp(childConfig, childProp)) {\n      continue;\n    }\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n      res[childProp] = {};\n      Object.assign(res[childProp], parentConfig[childProp]);\n      Object.assign(res[childProp], childConfig[childProp]);\n    } else if (childConfig[childProp] != null) {\n      res[childProp] = childConfig[childProp];\n    } else {\n      delete res[childProp];\n    }\n  }\n  for (const parentProp in parentConfig) {\n    if (hasOwnProp(parentConfig, parentProp) && !hasOwnProp(childConfig, parentProp) && isObject(parentConfig[parentProp])) {\n      // make sure changes to properties don't modify parent config\n      res[parentProp] = Object.assign({}, res[parentProp]);\n    }\n  }\n  return res;\n}\nfunction loadLocale(name) {\n  // no way!\n  /* var oldLocale = null;\n   // TODO: Find a better way to register and load all the locales in Node\n   if (!locales[name] && (typeof module !== 'undefined') &&\n     module && module.exports) {\n     try {\n       oldLocale = globalLocale._abbr;\n       var aliasedRequire = require;\n       aliasedRequire('./locale/' + name);\n       getSetGlobalLocale(oldLocale);\n     } catch (e) {}\n   }*/\n  if (!locales[name]) {\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\n    // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n  }\n\n  return locales[name];\n}\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale(key, values) {\n  let data;\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else if (isString(key)) {\n      data = defineLocale(key, values);\n    }\n    if (data) {\n      globalLocale = data;\n    }\n  }\n  return globalLocale && globalLocale._abbr;\n}\nfunction defineLocale(name, config) {\n  if (config === null) {\n    // useful for testing\n    delete locales[name];\n    globalLocale = getLocale('en');\n    return null;\n  }\n  if (!config) {\n    return;\n  }\n  let parentConfig = baseConfig;\n  config.abbr = name;\n  if (config.parentLocale != null) {\n    if (locales[config.parentLocale] != null) {\n      parentConfig = locales[config.parentLocale]._config;\n    } else {\n      if (!localeFamilies[config.parentLocale]) {\n        localeFamilies[config.parentLocale] = [];\n      }\n      localeFamilies[config.parentLocale].push({\n        name,\n        config\n      });\n      return null;\n    }\n  }\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\n  if (localeFamilies[name]) {\n    localeFamilies[name].forEach(function (x) {\n      defineLocale(x.name, x.config);\n    });\n  }\n  // backwards compat for now: also set the locale\n  // make sure we set the locale AFTER all child locales have been\n  // created, so we won't end up with the child locale set.\n  getSetGlobalLocale(name);\n  return locales[name];\n}\nfunction updateLocale(name, config) {\n  let _config = config;\n  if (_config != null) {\n    let parentConfig = baseConfig;\n    // MERGE\n    const tmpLocale = loadLocale(name);\n    if (tmpLocale != null) {\n      parentConfig = tmpLocale._config;\n    }\n    _config = mergeConfigs(parentConfig, _config);\n    const locale = new Locale(_config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale;\n    // backwards compat for now: also set the locale\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n  return locales[name];\n}\n// returns locale data\nfunction getLocale(key) {\n  setDefaultLocale();\n  if (!key) {\n    return globalLocale;\n  }\n  // let locale;\n  const _key = isArray(key) ? key : [key];\n  return chooseLocale(_key);\n}\nfunction listLocales() {\n  return Object.keys(locales);\n}\nfunction setDefaultLocale() {\n  if (locales[`en`]) {\n    return undefined;\n  }\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal(num) {\n      const b = num % 10;\n      const output = toInt(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return num + output;\n    }\n  });\n  initWeek();\n  initWeekYear();\n  initYear();\n  initTimezone();\n  initTimestamp();\n  initSecond();\n  initQuarter();\n  initOffset();\n  initMonth();\n  initMinute();\n  initMillisecond();\n  initHour();\n  initDayOfYear();\n  initDayOfWeek();\n  initDayOfMonth();\n}\nconst ordering = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\nconst orderingHash = ordering.reduce((mem, order) => {\n  mem[order] = true;\n  return mem;\n}, {});\nfunction isDurationValid(duration) {\n  const durationKeys = Object.keys(duration);\n  if (durationKeys.some(key => {\n    return key in orderingHash && duration[key] === null || isNaN(duration[key]);\n  })) {\n    return false;\n  }\n  // for (let key in duration) {\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n  //     return false;\n  //   }\n  // }\n  let unitHasDecimal = false;\n  for (let i = 0; i < ordering.length; ++i) {\n    if (duration[ordering[i]]) {\n      // only allow non-integers for smallest unit\n      if (unitHasDecimal) {\n        return false;\n      }\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n        unitHasDecimal = true;\n      }\n    }\n  }\n  return true;\n}\n// export function isValid() {\n//   return this._isValid;\n// }\n//\n// export function createInvalid(): Duration {\n//   return createDuration(NaN);\n// }\n\nfunction absCeil(number) {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\nfunction bubble(dur) {\n  let milliseconds = dur._milliseconds;\n  let days = dur._days;\n  let months = dur._months;\n  const data = dur._data;\n  // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n  if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  }\n  // The following code bubbles up values, see the tests for\n  // examples of what that means.\n  data.milliseconds = milliseconds % 1000;\n  const seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n  const minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n  const hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n  days += absFloor(hours / 24);\n  // convert days to months\n  const monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays));\n  // 12 months -> 1 year\n  const years = absFloor(months / 12);\n  months %= 12;\n  data.day = days;\n  data.month = months;\n  data.year = years;\n  return dur;\n}\nfunction daysToMonths(day) {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return day * 4800 / 146097;\n}\nfunction monthsToDays(month) {\n  // the reverse of daysToMonths\n  return month * 146097 / 4800;\n}\nlet round = Math.round;\nconst thresholds = {\n  ss: 44,\n  s: 45,\n  m: 45,\n  h: 22,\n  d: 26,\n  M: 11 // months to year\n};\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(str, num, withoutSuffix, isFuture, locale) {\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n  const duration = createDuration(posNegDuration).abs();\n  const seconds = round(duration.as('s'));\n  const minutes = round(duration.as('m'));\n  const hours = round(duration.as('h'));\n  const days = round(duration.as('d'));\n  const months = round(duration.as('M'));\n  const years = round(duration.as('y'));\n  const a = seconds <= thresholds[\"ss\"] && ['s', seconds] || seconds < thresholds[\"s\"] && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds[\"m\"] && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds[\"h\"] && ['hh', hours] || days <= 1 && ['d'] || days < thresholds[\"d\"] && ['dd', days] || months <= 1 && ['M'] || months < thresholds[\"M\"] && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n  const b = [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\n  // a[2] = withoutSuffix;\n  // a[3] = +posNegDuration > 0;\n  // a[4] = locale;\n  return substituteTimeAgo.apply(null, b);\n}\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding(roundingFunction) {\n  if (roundingFunction === undefined) {\n    return round;\n  }\n  if (typeof roundingFunction === 'function') {\n    round = roundingFunction;\n    return true;\n  }\n  return false;\n}\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold(threshold, limit) {\n  if (thresholds[threshold] === undefined) {\n    return false;\n  }\n  if (limit === undefined) {\n    return thresholds[threshold];\n  }\n  thresholds[threshold] = limit;\n  if (threshold === 's') {\n    thresholds[\"ss\"] = limit - 1;\n  }\n  return true;\n}\n// export function humanize(withSuffix) {\n//   if (!this.isValid()) {\n//     return this.localeData().invalidDate();\n//   }\n//\n//   const locale = this.localeData();\n//   let output = relativeTime(this, !withSuffix, locale);\n//\n//   if (withSuffix) {\n//     output = locale.pastFuture(+this, output);\n//   }\n//\n//   return locale.postformat(output);\n// }\n\nclass Duration {\n  constructor(duration, config = {}) {\n    this._data = {};\n    this._locale = getLocale();\n    this._locale = config && config._locale || getLocale();\n    // const normalizedInput = normalizeObjectUnits(duration);\n    const normalizedInput = duration;\n    const years = normalizedInput.year || 0;\n    const quarters = normalizedInput.quarter || 0;\n    const months = normalizedInput.month || 0;\n    const weeks = normalizedInput.week || 0;\n    const days = normalizedInput.day || 0;\n    const hours = normalizedInput.hours || 0;\n    const minutes = normalizedInput.minutes || 0;\n    const seconds = normalizedInput.seconds || 0;\n    const milliseconds = normalizedInput.milliseconds || 0;\n    this._isValid = isDurationValid(normalizedInput);\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds + seconds * 1000 + minutes * 60 * 1000 +\n    // 1000 * 60\n    hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days + weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months + quarters * 3 + years * 12;\n    // this._data = {};\n    // this._locale = getLocale();\n    // this._bubble();\n    return bubble(this);\n  }\n  isValid() {\n    return this._isValid;\n  }\n  humanize(withSuffix) {\n    // throw new Error(`TODO: implement`);\n    if (!this.isValid()) {\n      return this.localeData().invalidDate;\n    }\n    const locale = this.localeData();\n    let output = relativeTime(this, !withSuffix, locale);\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n    return locale.postformat(output);\n  }\n  localeData() {\n    return this._locale;\n  }\n  locale(localeKey) {\n    if (!localeKey) {\n      return this._locale._abbr;\n    }\n    this._locale = getLocale(localeKey) || this._locale;\n    return this;\n  }\n  abs() {\n    const mathAbs = Math.abs;\n    const data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.month = mathAbs(data.month);\n    data.year = mathAbs(data.year);\n    return this;\n  }\n  as(_units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    let days;\n    let months;\n    const milliseconds = this._milliseconds;\n    const units = normalizeUnits(_units);\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      return units === 'month' ? months : months / 12;\n    }\n    // handle milliseconds separately because of floating point math errors (issue #1867)\n    days = this._days + Math.round(monthsToDays(this._months));\n    switch (units) {\n      case 'week':\n        return days / 7 + milliseconds / 6048e5;\n      case 'day':\n        return days + milliseconds / 864e5;\n      case 'hours':\n        return days * 24 + milliseconds / 36e5;\n      case 'minutes':\n        return days * 1440 + milliseconds / 6e4;\n      case 'seconds':\n        return days * 86400 + milliseconds / 1000;\n      // Math.floor prevents floating point math errors here\n      case 'milliseconds':\n        return Math.floor(days * 864e5) + milliseconds;\n      default:\n        throw new Error(`Unknown unit ${units}`);\n    }\n  }\n  valueOf() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n}\nfunction isDuration(obj) {\n  return obj instanceof Duration;\n}\nfunction isValid(config) {\n  if (config._isValid == null) {\n    const flags = getParsingFlags(config);\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i) {\n      return i != null;\n    });\n    let isNowValid = !isNaN(config._d && config._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n    if (config._strict) {\n      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n    }\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\n      config._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n  return config._isValid;\n}\nfunction createInvalid(config, flags) {\n  config._d = new Date(NaN);\n  Object.assign(getParsingFlags(config), flags || {\n    userInvalidated: true\n  });\n  return config;\n}\nfunction markInvalid(config) {\n  config._isValid = false;\n  return config;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\nconst isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/, true], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/, true], ['YYYYMMDD', /\\d{8}/, true],\n// YYYYMM is NOT allowed by the standard\n['GGGG[W]WWE', /\\d{4}W\\d{3}/, true], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/, true]];\n// iso time formats and regexes\nconst isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\nconst obsOffsets = {\n  UT: 0,\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n};\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n// date from iso format\nfunction configFromISO(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  const input = config._i;\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n  let allowTime;\n  let dateFormat;\n  let timeFormat;\n  let tzFormat;\n  if (!match) {\n    config._isValid = false;\n    return config;\n  }\n  // getParsingFlags(config).iso = true;\n  let i;\n  let l;\n  for (i = 0, l = isoDates.length; i < l; i++) {\n    if (isoDates[i][1].exec(match[1])) {\n      dateFormat = isoDates[i][0];\n      allowTime = isoDates[i][2] !== false;\n      break;\n    }\n  }\n  if (dateFormat == null) {\n    config._isValid = false;\n    return config;\n  }\n  if (match[3]) {\n    for (i = 0, l = isoTimes.length; i < l; i++) {\n      if (isoTimes[i][1].exec(match[3])) {\n        // match[2] should be 'T' or space\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n        break;\n      }\n    }\n    if (timeFormat == null) {\n      config._isValid = false;\n      return config;\n    }\n  }\n  if (!allowTime && timeFormat != null) {\n    config._isValid = false;\n    return config;\n  }\n  if (match[4]) {\n    if (tzRegex.exec(match[4])) {\n      tzFormat = 'Z';\n    } else {\n      config._isValid = false;\n      return config;\n    }\n  }\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n  return configFromStringAndFormat(config);\n}\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  const result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n  if (secondStr) {\n    result.push(parseInt(secondStr, 10));\n  }\n  return result;\n}\nfunction untruncateYear(yearStr) {\n  const year = parseInt(yearStr, 10);\n  return year <= 49 ? year + 2000 : year;\n}\nfunction preprocessRFC2822(str) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return str.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n  if (weekdayStr) {\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n    if (weekdayProvided !== weekdayActual) {\n      getParsingFlags(config).weekdayMismatch = true;\n      config._isValid = false;\n      return false;\n    }\n  }\n  return true;\n}\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n  if (obsOffset) {\n    return obsOffsets[obsOffset];\n  } else if (militaryOffset) {\n    // the only allowed military tz is Z\n    return 0;\n  } else {\n    const hm = parseInt(numOffset, 10);\n    const m = hm % 100;\n    const h = (hm - m) / 100;\n    return h * 60 + m;\n  }\n}\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\n  if (!match) {\n    return markInvalid(config);\n  }\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n  if (!checkWeekday(match[1], parsedArray, config)) {\n    return config;\n  }\n  config._a = parsedArray;\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\n  config._d = createUTCDate.apply(null, config._a);\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  getParsingFlags(config).rfc2822 = true;\n  return config;\n}\n// date from iso format or fallback\nfunction configFromString(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  const matched = aspNetJsonRegex.exec(config._i);\n  if (matched !== null) {\n    config._d = new Date(+matched[1]);\n    return config;\n  }\n  // todo: update logic processing\n  // isISO -> configFromISO\n  // isRFC -> configFromRFC\n  configFromISO(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n  configFromRFC2822(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n  // Final attempt, use Input Fallback\n  // hooks.createFromInputFallback(config);\n  return createInvalid(config);\n}\n// hooks.createFromInputFallback = deprecate(\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n//     function (config) {\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n//     }\n// );\n\n// moment.js\n// version : 2.18.1\n// authors : Tim Wood, Iskren Chernev, Moment.js contributors\n// license : MIT\n// momentjs.com\nfunction formatDate(date, format, locale, isUTC, offset = 0) {\n  const _locale = getLocale(locale || 'en');\n  if (!_locale) {\n    throw new Error(`Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`);\n  }\n  const _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\n  if (!output) {\n    return output;\n  }\n  return _locale.postformat(output);\n}\n// format date using native date object\nfunction formatMoment(date, _format, locale, isUTC, offset = 0) {\n  if (!isDateValid(date)) {\n    return locale.invalidDate;\n  }\n  const format = expandFormat(_format, locale);\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n  return formatFunctions[format](date, locale, isUTC, offset);\n}\nfunction expandFormat(_format, locale) {\n  let format = _format;\n  let i = 5;\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  const replaceLongDateFormatTokens = input => {\n    return locale.formatLongDate(input) || input;\n  };\n  localFormattingTokens.lastIndex = 0;\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n  return format;\n}\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n  if (a != null) {\n    return a;\n  }\n  if (b != null) {\n    return b;\n  }\n  return c;\n}\nfunction currentDateArray(config) {\n  const nowValue = new Date();\n  if (config._useUTC) {\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n  }\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray(config) {\n  const input = [];\n  let i;\n  let date;\n  let yearToUse;\n  if (config._d) {\n    return config;\n  }\n  const currentDate = currentDateArray(config);\n  // compute day of the year from weeks and weekdays\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n    dayOfYearFromWeekInfo(config);\n  }\n  // if the day of the year is set, figure out what it is\n  if (config._dayOfYear != null) {\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n      getParsingFlags(config)._overflowDayOfYear = true;\n    }\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n    config._a[MONTH] = date.getUTCMonth();\n    config._a[DATE] = date.getUTCDate();\n  }\n  // Default to current date.\n  // * if no year, month, day of month are given, default to today\n  // * if day of month is given, default month and year\n  // * if month is given, default only year\n  // * if year is given, don't default anything\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\n    config._a[i] = input[i] = currentDate[i];\n  }\n  // Zero out whatever was not defaulted, including time\n  for (; i < 7; i++) {\n    config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n  }\n  // Check for 24:00:00.000\n  if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n    config._nextDay = true;\n    config._a[HOUR] = 0;\n  }\n  // eslint-disable-next-line prefer-spread\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n  const expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n  // Apply timezone offset from input. The actual utcOffset can be changed\n  // with parseZone.\n  if (config._tzm != null) {\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  }\n  if (config._nextDay) {\n    config._a[HOUR] = 24;\n  }\n  // check for mismatching day of week\n  if (config._w && typeof config._w[\"d\"] !== 'undefined' && config._w[\"d\"] !== expectedWeekday) {\n    getParsingFlags(config).weekdayMismatch = true;\n  }\n  return config;\n}\nfunction dayOfYearFromWeekInfo(config) {\n  let weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n  const w = config._w;\n  if (w[\"GG\"] != null || w[\"W\"] != null || w[\"E\"] != null) {\n    dow = 1;\n    doy = 4;\n    // TODO: We need to take the current isoWeekYear, but that depends on\n    // how we interpret now (local, utc, fixed offset). So create\n    // a now version of current config (take local/utc/offset flags, and\n    // create now).\n    weekYear = defaults(w[\"GG\"], config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n    week = defaults(w[\"W\"], 1);\n    weekday = defaults(w[\"E\"], 1);\n    if (weekday < 1 || weekday > 7) {\n      weekdayOverflow = true;\n    }\n  } else {\n    dow = config._locale._week.dow;\n    doy = config._locale._week.doy;\n    const curWeek = weekOfYear(new Date(), dow, doy);\n    weekYear = defaults(w[\"gg\"], config._a[YEAR], curWeek.year);\n    // Default to current week.\n    week = defaults(w[\"w\"], curWeek.week);\n    if (w[\"d\"] != null) {\n      // weekday -- low day numbers are considered next week\n      weekday = w[\"d\"];\n      if (weekday < 0 || weekday > 6) {\n        weekdayOverflow = true;\n      }\n    } else if (w[\"e\"] != null) {\n      // local weekday -- counting starts from beginning of week\n      weekday = w[\"e\"] + dow;\n      if (w[\"e\"] < 0 || w[\"e\"] > 6) {\n        weekdayOverflow = true;\n      }\n    } else {\n      // default to beginning of week\n      weekday = dow;\n    }\n  }\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n    getParsingFlags(config)._overflowWeeks = true;\n  } else if (weekdayOverflow != null) {\n    getParsingFlags(config)._overflowWeekday = true;\n  } else {\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  }\n  return config;\n}\nfunction checkOverflow(config) {\n  let overflow;\n  const a = config._a;\n  if (a && getParsingFlags(config).overflow === -2) {\n    // todo: fix this sh*t\n    overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n      overflow = DATE;\n    }\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n      overflow = WEEK;\n    }\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n      overflow = WEEKDAY;\n    }\n    getParsingFlags(config).overflow = overflow;\n  }\n  return config;\n}\n\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\nconst ISO_8601 = 'ISO_8601';\n// constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\nconst RFC_2822 = 'RFC_2822';\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n  // TODO: Move this to another part of the creation flow to prevent circular deps\n  if (config._f === ISO_8601) {\n    return configFromISO(config);\n  }\n  if (config._f === RFC_2822) {\n    return configFromRFC2822(config);\n  }\n  config._a = [];\n  getParsingFlags(config).empty = true;\n  if (isArray(config._f) || !config._i && config._i !== 0) {\n    return config;\n  }\n  // This array is used to make a Date, either with `new Date` or `Date.UTC`\n  let input = config._i.toString();\n  let totalParsedInputLength = 0;\n  const inputLength = input.length;\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n  let i;\n  let token;\n  let parsedInput;\n  let skipped;\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n    if (parsedInput) {\n      skipped = input.substr(0, input.indexOf(parsedInput));\n      if (skipped.length > 0) {\n        getParsingFlags(config).unusedInput.push(skipped);\n      }\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n      totalParsedInputLength += parsedInput.length;\n    }\n    // don't parse if it's not a known token\n    if (formatTokenFunctions[token]) {\n      if (parsedInput) {\n        getParsingFlags(config).empty = false;\n      } else {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n      addTimeToArrayFromToken(token, parsedInput, config);\n    } else if (config._strict && !parsedInput) {\n      getParsingFlags(config).unusedTokens.push(token);\n    }\n  }\n  // add remaining unparsed input length to the string\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n  if (input.length > 0) {\n    getParsingFlags(config).unusedInput.push(input);\n  }\n  // clear _12h flag if hour is <= 12\n  if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n    getParsingFlags(config).bigHour = void 0;\n  }\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\n  getParsingFlags(config).meridiem = config._meridiem;\n  // handle meridiem\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n  configFromArray(config);\n  return checkOverflow(config);\n}\nfunction meridiemFixWrap(locale, _hour, meridiem) {\n  let hour = _hour;\n  if (meridiem == null) {\n    // nothing to do\n    return hour;\n  }\n  if (locale.meridiemHour != null) {\n    return locale.meridiemHour(hour, meridiem);\n  }\n  if (locale.isPM == null) {\n    // this is not supposed to happen\n    return hour;\n  }\n  // Fallback\n  const isPm = locale.isPM(meridiem);\n  if (isPm && hour < 12) {\n    hour += 12;\n  }\n  if (!isPm && hour === 12) {\n    hour = 0;\n  }\n  return hour;\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n  let tempConfig;\n  let bestMoment;\n  let scoreToBeat;\n  let currentScore;\n  if (!config._f || config._f.length === 0) {\n    getParsingFlags(config).invalidFormat = true;\n    return createInvalid(config);\n  }\n  let i;\n  for (i = 0; i < config._f.length; i++) {\n    currentScore = 0;\n    tempConfig = Object.assign({}, config);\n    if (config._useUTC != null) {\n      tempConfig._useUTC = config._useUTC;\n    }\n    tempConfig._f = config._f[i];\n    configFromStringAndFormat(tempConfig);\n    if (!isValid(tempConfig)) {\n      continue;\n    }\n    // if there is any input that was not parsed add a penalty for that format\n    currentScore += getParsingFlags(tempConfig).charsLeftOver;\n    // or tokens\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n    getParsingFlags(tempConfig).score = currentScore;\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\n      scoreToBeat = currentScore;\n      bestMoment = tempConfig;\n    }\n  }\n  return Object.assign(config, bestMoment || tempConfig);\n}\nfunction configFromObject(config) {\n  if (config._d) {\n    return config;\n  }\n  const input = config._i;\n  if (isObject(input)) {\n    const i = normalizeObjectUnits(input);\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\n    // todo: obsolete -> remove it\n    .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n  }\n  return configFromArray(config);\n}\nfunction createFromConfig(config) {\n  const res = checkOverflow(prepareConfig(config));\n  // todo: remove, in moment.js it's never called cuz of moment constructor\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n  if (!isValid(Object.assign({}, res, {\n    _isValid: null\n  }))) {\n    res._d = new Date(NaN);\n  }\n  // todo: update offset\n  /*if (res._nextDay) {\n    // Adding is smart enough around DST\n    res._d = add(res._d, 1, 'day');\n    res._nextDay = undefined;\n  }*/\n  return res;\n}\nfunction prepareConfig(config) {\n  let input = config._i;\n  const format = config._f;\n  config._locale = config._locale || getLocale(config._l);\n  if (input === null || format === undefined && input === '') {\n    return createInvalid(config, {\n      nullInput: true\n    });\n  }\n  if (isString(input)) {\n    config._i = input = config._locale.preparse(input, format);\n  }\n  if (isDate(input)) {\n    config._d = cloneDate(input);\n    return config;\n  }\n  // todo: add check for recursion\n  if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n  if (!isValid(config)) {\n    config._d = null;\n  }\n  return config;\n}\nfunction configFromInput(config) {\n  const input = config._i;\n  if (isUndefined(input)) {\n    config._d = new Date();\n  } else if (isDate(input)) {\n    config._d = cloneDate(input);\n  } else if (isString(input)) {\n    configFromString(config);\n  } else if (isArray(input) && input.length) {\n    const _arr = input.slice(0);\n    config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    //   hooks.createFromInputFallback(config);\n    return createInvalid(config);\n  }\n  return config;\n}\nfunction createLocalOrUTC(input, format, localeKey, strict, isUTC) {\n  const config = {};\n  let _input = input;\n  // params switch -> skip; testing it well\n  // if (localeKey === true || localeKey === false) {\n  //     strict = localeKey;\n  //     localeKey = undefined;\n  // }\n  // todo: fail fast and return not valid date\n  if (isObject(_input) && isObjectEmpty(_input) || isArray(_input) && _input.length === 0) {\n    _input = undefined;\n  }\n  // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  // config._isAMomentObject = true;\n  config._useUTC = config._isUTC = isUTC;\n  config._l = localeKey;\n  config._i = _input;\n  config._f = format;\n  config._strict = strict;\n  return createFromConfig(config);\n}\nfunction parseDate(input, format, localeKey, strict, isUTC) {\n  if (isDate(input)) {\n    return input;\n  }\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n  return config._d;\n}\nfunction utcAsLocal(date) {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n  return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n}\nfunction absRound(num) {\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\nfunction isAfter(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n  if (units === 'milliseconds') {\n    return date1.valueOf() > date2.valueOf();\n  }\n  return date2.valueOf() < startOf(date1, units).valueOf();\n}\nfunction isBefore(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n  if (units === 'milliseconds') {\n    return date1.valueOf() < date2.valueOf();\n  }\n  return endOf(date1, units).valueOf() < date2.valueOf();\n}\nfunction isDisabledDay(date, daysDisabled) {\n  if (typeof daysDisabled === 'undefined' || !daysDisabled || !daysDisabled.length) {\n    return false;\n  }\n  return daysDisabled.some(day => day === date.getDay());\n}\nfunction isBetween(date, from, to, units, inclusivity = '()') {\n  const leftBound = inclusivity[0] === '(' ? isAfter(date, from, units) : !isBefore(date, from, units);\n  const rightBound = inclusivity[1] === ')' ? isBefore(date, to, units) : !isAfter(date, to, units);\n  return leftBound && rightBound;\n}\nfunction isSame(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n  if (units === 'milliseconds') {\n    return date1.valueOf() === date2.valueOf();\n  }\n  const inputMs = date2.valueOf();\n  return startOf(date1, units).valueOf() <= inputMs && inputMs <= endOf(date1, units).valueOf();\n}\nfunction isSameDay(date1, date2) {\n  return date1.getDay() == date2.getDay();\n}\nfunction isSameOrAfter(date1, date2, units) {\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\nfunction isSameOrBefore(date1, date2, units) {\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n\n// ASP.NET json date format regex\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\nfunction createDuration(input, key, config = {}) {\n  const duration = convertDuration(input, key);\n  // matching against regexp is expensive, do it on demand\n  return new Duration(duration, config);\n}\nfunction convertDuration(input, key) {\n  // checks for null or undefined\n  if (input == null) {\n    return {};\n  }\n  if (isDuration(input)) {\n    return {\n      milliseconds: input._milliseconds,\n      day: input._days,\n      month: input._months\n    };\n  }\n  if (isNumber(input)) {\n    // duration = {};\n    return key ? {\n      [key]: input\n    } : {\n      milliseconds: input\n    };\n  }\n  if (isString(input)) {\n    let match = aspNetRegex.exec(input);\n    if (match) {\n      const sign = match[1] === '-' ? -1 : 1;\n      return {\n        year: 0,\n        day: toInt(match[DATE]) * sign,\n        hours: toInt(match[HOUR]) * sign,\n        minutes: toInt(match[MINUTE]) * sign,\n        seconds: toInt(match[SECOND]) * sign,\n        // the millisecond decimal point is included in the match\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n      };\n    }\n    match = isoRegex.exec(input);\n    if (match) {\n      const sign = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;\n      return {\n        year: parseIso(match[2], sign),\n        month: parseIso(match[3], sign),\n        week: parseIso(match[4], sign),\n        day: parseIso(match[5], sign),\n        hours: parseIso(match[6], sign),\n        minutes: parseIso(match[7], sign),\n        seconds: parseIso(match[8], sign)\n      };\n    }\n  }\n  if (isObject(input) && ('from' in input || 'to' in input)) {\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n    return {\n      milliseconds: diffRes.milliseconds,\n      month: diffRes.months\n    };\n  }\n  return input;\n}\n// createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\nfunction parseIso(inp, sign) {\n  // We'd normally use ~~inp for this, but unfortunately it also\n  // converts floats to ints.\n  // inp may be undefined, so careful calling replace on it.\n  const res = inp && parseFloat(inp.replace(',', '.'));\n  // apply sign while we're at it\n  return (isNaN(res) ? 0 : res) * sign;\n}\nfunction positiveMomentsDifference(base, other) {\n  const res = {\n    milliseconds: 0,\n    months: 0\n  };\n  res.months = getMonth(other) - getMonth(base) + (getFullYear(other) - getFullYear(base)) * 12;\n  const _basePlus = add(cloneDate(base), res.months, 'month');\n  if (isAfter(_basePlus, other)) {\n    --res.months;\n  }\n  res.milliseconds = +other - +add(cloneDate(base), res.months, 'month');\n  return res;\n}\nfunction momentsDifference(base, other) {\n  if (!(isDateValid(base) && isDateValid(other))) {\n    return {\n      milliseconds: 0,\n      months: 0\n    };\n  }\n  let res;\n  const _other = cloneWithOffset(other, base, {\n    _offset: base.getTimezoneOffset()\n  });\n  if (isBefore(base, _other)) {\n    res = positiveMomentsDifference(base, _other);\n  } else {\n    res = positiveMomentsDifference(_other, base);\n    res.milliseconds = -res.milliseconds;\n    res.months = -res.months;\n  }\n  return res;\n}\nfunction add(date, val, period, isUTC) {\n  const dur = createDuration(val, period);\n  return addSubtract(date, dur, 1, isUTC);\n}\nfunction subtract(date, val, period, isUTC) {\n  const dur = createDuration(val, period);\n  return addSubtract(date, dur, -1, isUTC);\n}\nfunction addSubtract(date, duration, isAdding, isUTC) {\n  const milliseconds = duration._milliseconds;\n  const days = absRound(duration._days);\n  const months = absRound(duration._months);\n  // todo: add timezones support\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\n  if (months) {\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n  }\n  if (days) {\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n  }\n  if (milliseconds) {\n    setTime(date, getTime(date) + milliseconds * isAdding);\n  }\n  return cloneDate(date);\n  // todo: add timezones support\n  // if (_updateOffset) {\n  //   hooks.updateOffset(date, days || months);\n  // }\n}\n\nfunction initDayOfWeek() {\n  // FORMATTING\n  addFormatToken('d', null, 'do', function (date, opts) {\n    return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('dd', null, null, function (date, opts) {\n    return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('ddd', null, null, function (date, opts) {\n    return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('dddd', null, null, function (date, opts) {\n    return opts.locale.weekdays(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('e', null, null, function (date, opts) {\n    return getLocaleDayOfWeek(date, opts.locale, opts.isUTC).toString(10);\n    // return getDay(date, opts.isUTC).toString(10);\n  });\n\n  addFormatToken('E', null, null, function (date, opts) {\n    return getISODayOfWeek(date, opts.isUTC).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E');\n  // PRIORITY\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11);\n  // PARSING\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    const weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n      week[\"d\"] = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = !!input;\n    }\n    return config;\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n    return config;\n  });\n}\n// HELPERS\nfunction parseWeekday(input, locale) {\n  if (!isString(input)) {\n    return input;\n  }\n  const _num = parseInt(input, 10);\n  if (!isNaN(_num)) {\n    return _num;\n  }\n  const _weekDay = locale.weekdaysParse(input);\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n  return null;\n}\nfunction parseIsoWeekday(input, locale = getLocale()) {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n  return isNumber(input) && isNaN(input) ? null : input;\n}\n// MOMENTS\nfunction getSetDayOfWeek(date, input, opts) {\n  if (!input) {\n    return getDayOfWeek(date, opts.isUTC);\n  }\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\nfunction setDayOfWeek(date, input, locale = getLocale(), isUTC) {\n  const day = getDay(date, isUTC);\n  const _input = parseWeekday(input, locale);\n  return add(date, _input - day, 'day');\n}\nfunction getDayOfWeek(date, isUTC) {\n  return getDay(date, isUTC);\n}\n/********************************************/\n// todo: utc\n// getSetLocaleDayOfWeek\nfunction getLocaleDayOfWeek(date, locale = getLocale(), isUTC) {\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\nfunction setLocaleDayOfWeek(date, input, opts = {}) {\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n  return add(date, input - weekday, 'day');\n}\n// getSetISODayOfWeek\nfunction getISODayOfWeek(date, isUTC) {\n  return getDay(date, isUTC) || 7;\n}\nfunction setISODayOfWeek(date, input, opts = {}) {\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n  const weekday = parseIsoWeekday(input, opts.locale);\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\nconst symbolMap$1 = {\n  1: '١',\n  2: '٢',\n  3: '٣',\n  4: '٤',\n  5: '٥',\n  6: '٦',\n  7: '٧',\n  8: '٨',\n  9: '٩',\n  0: '٠'\n};\nconst numberMap$1 = {\n  '١': '1',\n  '٢': '2',\n  '٣': '3',\n  '٤': '4',\n  '٥': '5',\n  '٦': '6',\n  '٧': '7',\n  '٨': '8',\n  '٩': '9',\n  '٠': '0'\n};\nconst pluralForm = function (num) {\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\nconst plurals = {\n  s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n  m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n  h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n  d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n  M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n  y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\nconst pluralize = function (u) {\n  return function (num, withoutSuffix) {\n    const f = pluralForm(num);\n    let str = plurals[u][pluralForm(num)];\n    if (f === 2) {\n      str = str[withoutSuffix ? 0 : 1];\n    }\n    return str.replace(/%d/i, num.toString());\n  };\n};\nconst months$2 = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\nconst arLocale = {\n  abbr: 'ar',\n  months: months$2,\n  monthsShort: months$2,\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /ص|م/,\n  isPM(input) {\n    return 'م' === input;\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ص';\n    } else {\n      return 'م';\n    }\n  },\n  calendar: {\n    sameDay: '[اليوم عند الساعة] LT',\n    nextDay: '[غدًا عند الساعة] LT',\n    nextWeek: 'dddd [عند الساعة] LT',\n    lastDay: '[أمس عند الساعة] LT',\n    lastWeek: 'dddd [عند الساعة] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'بعد %s',\n    past: 'منذ %s',\n    s: pluralize('s'),\n    ss: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y')\n  },\n  preparse(str) {\n    return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n      return numberMap$1[match];\n    }).replace(/،/g, ',');\n  },\n  postformat(str) {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap$1[match];\n    }).replace(/,/g, '،');\n  },\n  week: {\n    dow: 6,\n    doy: 12 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\nconst bgLocale = {\n  abbr: 'bg',\n  months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n  monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n  weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n  weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Днес в] LT',\n    nextDay: '[Утре в] LT',\n    nextWeek: 'dddd [в] LT',\n    lastDay: '[Вчера в] LT',\n    lastWeek: function (d) {\n      switch (d) {\n        case 0:\n        case 3:\n        case 6:\n          return '[В изминалата] dddd [в] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[В изминалия] dddd [в] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'след %s',\n    past: 'преди %s',\n    s: 'няколко секунди',\n    ss: '%d секунди',\n    m: 'минута',\n    mm: '%d минути',\n    h: 'час',\n    hh: '%d часа',\n    d: 'ден',\n    dd: '%d дни',\n    M: 'месец',\n    MM: '%d месеца',\n    y: 'година',\n    yy: '%d години'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n  ordinal: function (_num) {\n    const number = Number(_num);\n    let lastDigit = number % 10,\n      last2Digits = number % 100;\n    if (number === 0) {\n      return number + '-ев';\n    } else if (last2Digits === 0) {\n      return number + '-ен';\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return number + '-ти';\n    } else if (lastDigit === 1) {\n      return number + '-ви';\n    } else if (lastDigit === 2) {\n      return number + '-ри';\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return number + '-ми';\n    } else {\n      return number + '-ти';\n    }\n  },\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\nlet monthsShortDot$5 = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_'),\n  monthsShort$7 = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\nlet monthsParse$6 = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\nlet monthsRegex$5 = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\nconst caLocale = {\n  abbr: 'ca',\n  months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$5;\n    }\n    if (/-MMM-/.test(format)) {\n      return monthsShort$7[getMonth(date, isUTC)];\n    }\n    return monthsShortDot$5[getMonth(date, isUTC)];\n  },\n  monthsRegex: monthsRegex$5,\n  monthsShortRegex: monthsRegex$5,\n  monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n  monthsParse: monthsParse$6,\n  longMonthsParse: monthsParse$6,\n  shortMonthsParse: monthsParse$6,\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fa %s',\n    s: 'uns segons',\n    ss: '%d segons',\n    m: 'un minut',\n    mm: '%d minuts',\n    h: 'una hora',\n    hh: '%d hores',\n    d: 'un dia',\n    dd: '%d dies',\n    M: 'un mes',\n    MM: '%d mesos',\n    y: 'un any',\n    yy: '%d anys'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    const output = num > 4 ? 'é' : num === 1 || num === 3 ? 'r' : num === 2 ? 'n' : num === 4 ? 't' : 'é';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\nconst months$1 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\nconst monthsShort$6 = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\nfunction plural$4(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\nfunction translate$6(num, withoutSuffix, key, isFuture) {\n  const result = num + ' ';\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n    // break;\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'den' : 'dnem';\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'dny' : 'dní');\n      } else {\n        return result + 'dny';\n      }\n    // break;\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'měsíce' : 'měsíců');\n      } else {\n        return result + 'měsíci';\n      }\n    // break;\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokem';\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n    // break;\n  }\n}\n\nconst csLocale = {\n  abbr: 'cs',\n  months: months$1,\n  monthsShort: monthsShort$6,\n  monthsParse: function (months, monthsShort) {\n    let i,\n      _monthsParse = [];\n    for (i = 0; i < 12; i++) {\n      // use custom parser to solve problem with July (červenec)\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n    }\n    return _monthsParse;\n  }(months$1, monthsShort$6),\n  shortMonthsParse: function (monthsShort) {\n    let i,\n      _shortMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n    }\n    return _shortMonthsParse;\n  }(monthsShort$6),\n  longMonthsParse: function (months) {\n    let i,\n      _longMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n    }\n    return _longMonthsParse;\n  }(months$1),\n  weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n  weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zítra v] LT',\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v neděli v] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n        case 3:\n          return '[ve středu v] LT';\n        case 4:\n          return '[ve čtvrtek v] LT';\n        case 5:\n          return '[v pátek v] LT';\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n    lastDay: '[včera v] LT',\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulou neděli v] LT';\n        case 1:\n        case 2:\n          return '[minulé] dddd [v] LT';\n        case 3:\n          return '[minulou středu v] LT';\n        case 4:\n        case 5:\n          return '[minulý] dddd [v] LT';\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'před %s',\n    s: translate$6,\n    ss: translate$6,\n    m: translate$6,\n    mm: translate$6,\n    h: translate$6,\n    hh: translate$6,\n    d: translate$6,\n    dd: translate$6,\n    M: translate$6,\n    MM: translate$6,\n    y: translate$6,\n    yy: translate$6\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\nconst daLocale = {\n  abbr: 'da',\n  months: 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n  weekdaysShort: 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n  weekdaysMin: 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'på dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[i] dddd[s kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'få sekunder',\n    m: 'et minut',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dage',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'et år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\nfunction processRelativeTime$2(num, withoutSuffix, key, isFuture) {\n  const format = {\n    'm': ['eine Minute', 'einer Minute'],\n    'h': ['eine Stunde', 'einer Stunde'],\n    'd': ['ein Tag', 'einem Tag'],\n    'dd': [num + ' Tage', num + ' Tagen'],\n    'M': ['ein Monat', 'einem Monat'],\n    'MM': [num + ' Monate', num + ' Monaten'],\n    'y': ['ein Jahr', 'einem Jahr'],\n    'yy': [num + ' Jahre', num + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\nconst deLocale = {\n  abbr: 'de',\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    ss: '%d Sekunden',\n    m: processRelativeTime$2,\n    mm: '%d Minuten',\n    h: processRelativeTime$2,\n    hh: '%d Stunden',\n    d: processRelativeTime$2,\n    dd: processRelativeTime$2,\n    M: processRelativeTime$2,\n    MM: processRelativeTime$2,\n    y: processRelativeTime$2,\n    yy: processRelativeTime$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\nconst enGbLocale = {\n  abbr: 'en-gb',\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    const b = num % 10,\n      output = ~~(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\nlet monthsShortDot$4 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort$5 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nlet monthsParse$5 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex$4 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\nconst esDoLocale = {\n  abbr: 'es-do',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$4;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$5[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$4[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex: monthsRegex$4,\n  monthsShortRegex: monthsRegex$4,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$5,\n  longMonthsParse: monthsParse$5,\n  shortMonthsParse: monthsParse$5,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\nlet monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nlet monthsParse$4 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex$3 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\nconst esLocale = {\n  abbr: 'es',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$3;\n    }\n    if (/-MMM-/.test(format)) {\n      return monthsShort$4[getMonth(date, isUTC)];\n    }\n    return monthsShortDot$3[getMonth(date, isUTC)];\n  },\n  monthsRegex: monthsRegex$3,\n  monthsShortRegex: monthsRegex$3,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$4,\n  longMonthsParse: monthsParse$4,\n  shortMonthsParse: monthsParse$4,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (Puerto Rico) [es-pr]\nlet monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nconst esPrLocale = {\n  abbr: 'es-pr',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$2;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$3[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$2[getMonth(date, isUTC)];\n    }\n  },\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0,\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\nlet monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nconst esUsLocale = {\n  abbr: 'es-us',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$2[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$1[getMonth(date, isUTC)];\n    }\n  },\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0,\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\nconst processRelativeTime$1 = function (num, withoutSuffix, key, isFuture) {\n  const format = {\n    s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n    ss: [num + 'sekundi', num + 'sekundit'],\n    m: ['ühe minuti', 'üks minut'],\n    mm: [num + ' minuti', num + ' minutit'],\n    h: ['ühe tunni', 'tund aega', 'üks tund'],\n    hh: [num + ' tunni', num + ' tundi'],\n    d: ['ühe päeva', 'üks päev'],\n    M: ['kuu aja', 'kuu aega', 'üks kuu'],\n    MM: [num + ' kuu', num + ' kuud'],\n    y: ['ühe aasta', 'aasta', 'üks aasta'],\n    yy: [num + ' aasta', num + ' aastat']\n  };\n  if (withoutSuffix) {\n    return format[key][2] ? format[key][2] : format[key][1];\n  }\n  return isFuture ? format[key][0] : format[key][1];\n};\nconst etLocale = {\n  abbr: 'et',\n  months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n  monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n  weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n  weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n  weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Täna,] LT',\n    nextDay: '[Homme,] LT',\n    nextWeek: '[Järgmine] dddd LT',\n    lastDay: '[Eile,] LT',\n    lastWeek: '[Eelmine] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s pärast',\n    past: '%s tagasi',\n    s: processRelativeTime$1,\n    ss: processRelativeTime$1,\n    m: processRelativeTime$1,\n    mm: processRelativeTime$1,\n    h: processRelativeTime$1,\n    hh: processRelativeTime$1,\n    d: processRelativeTime$1,\n    dd: '%d päeva',\n    M: processRelativeTime$1,\n    MM: processRelativeTime$1,\n    y: processRelativeTime$1,\n    yy: processRelativeTime$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n  numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];\nfunction translate$5(num, withoutSuffix, key, isFuture) {\n  var result = '';\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n    case 'ss':\n      return isFuture ? 'sekunnin' : 'sekuntia';\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n    case 'd':\n      return isFuture ? 'päivän' : 'päivä';\n    case 'dd':\n      result = isFuture ? 'päivän' : 'päivää';\n      break;\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n  result = verbalNumber(num, isFuture) + ' ' + result;\n  return result;\n}\nfunction verbalNumber(num, isFuture) {\n  return num < 10 ? isFuture ? numbersFuture[num] : numbersPast[num] : num;\n}\nconst fiLocale = {\n  abbr: 'fi',\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n  },\n  calendar: {\n    sameDay: '[tänään] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s päästä',\n    past: '%s sitten',\n    s: translate$5,\n    ss: translate$5,\n    m: translate$5,\n    mm: translate$5,\n    h: translate$5,\n    hh: translate$5,\n    d: translate$5,\n    dd: translate$5,\n    M: translate$5,\n    MM: translate$5,\n    y: translate$5,\n    yy: translate$5\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\nconst frLocale = {\n  abbr: 'fr',\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n  ordinal(_num, period) {\n    const num = Number(_num);\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return num + (num === 1 ? 'er' : '');\n      // Words with masculine grammatical gender: mois, trimestre, jour\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return num + (num === 1 ? 'er' : 'e');\n      // Words with feminine grammatical gender: semaine\n      case 'w':\n      case 'W':\n        return num + (num === 1 ? 're' : 'e');\n    }\n  },\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n  monthsShort$1 = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\nlet monthsParse$3 = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\nlet monthsRegex$2 = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\nconst glLocale = {\n  abbr: 'gl',\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot;\n    }\n    if (/-MMM-/.test(format)) {\n      return monthsShort$1[getMonth(date, isUTC)];\n    }\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex: monthsRegex$2,\n  monthsShortRegex: monthsRegex$2,\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$3,\n  longMonthsParse: monthsParse$3,\n  shortMonthsParse: monthsParse$3,\n  weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoxe á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[mañan á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[onte á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[o] dddd [pasado á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fai %s',\n    s: 'uns segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\nconst heLocale = {\n  abbr: 'he',\n  months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n  monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n  weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n  weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n  weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [ב]MMMM YYYY',\n    LLL: 'D [ב]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[היום ב־]LT',\n    nextDay: '[מחר ב־]LT',\n    nextWeek: 'dddd [בשעה] LT',\n    lastDay: '[אתמול ב־]LT',\n    lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'בעוד %s',\n    past: 'לפני %s',\n    s: 'מספר שניות',\n    ss: '%d שניות',\n    m: 'דקה',\n    mm: '%d דקות',\n    h: 'שעה',\n    hh(num) {\n      if (num === 2) {\n        return 'שעתיים';\n      }\n      return num + ' שעות';\n    },\n    d: 'יום',\n    dd(num) {\n      if (num === 2) {\n        return 'יומיים';\n      }\n      return num + ' ימים';\n    },\n    M: 'חודש',\n    MM(num) {\n      if (num === 2) {\n        return 'חודשיים';\n      }\n      return num + ' חודשים';\n    },\n    y: 'שנה',\n    yy(num) {\n      if (num === 2) {\n        return 'שנתיים';\n      } else if (num % 10 === 0 && num !== 10) {\n        return num + ' שנה';\n      }\n      return num + ' שנים';\n    }\n  },\n  meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n  isPM(input) {\n    return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return 'לפנות בוקר';\n    } else if (hour < 10) {\n      return 'בבוקר';\n    } else if (hour < 12) {\n      return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n    } else if (hour < 18) {\n      return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n    } else {\n      return 'בערב';\n    }\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\nlet symbolMap = {\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n    0: '०'\n  },\n  numberMap = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n  };\nconst hiLocale = {\n  abbr: 'hi',\n  months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n  monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n  weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n  weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm बजे',\n    LTS: 'A h:mm:ss बजे',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm बजे',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n  },\n  calendar: {\n    sameDay: '[आज] LT',\n    nextDay: '[कल] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[कल] LT',\n    lastWeek: '[पिछले] dddd, LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s में',\n    past: '%s पहले',\n    s: 'कुछ ही क्षण',\n    ss: '%d सेकंड',\n    m: 'एक मिनट',\n    mm: '%d मिनट',\n    h: 'एक घंटा',\n    hh: '%d घंटे',\n    d: 'एक दिन',\n    dd: '%d दिन',\n    M: 'एक महीने',\n    MM: '%d महीने',\n    y: 'एक वर्ष',\n    yy: '%d वर्ष'\n  },\n  preparse(str) {\n    return str.replace(/[१२३४५६७८९०]/g, function (match) {\n      return numberMap[match];\n    });\n  },\n  postformat(str) {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    });\n  },\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /रात|सुबह|दोपहर|शाम/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'रात') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'सुबह') {\n      return hour;\n    } else if (meridiem === 'दोपहर') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'शाम') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'रात';\n    } else if (hour < 10) {\n      return 'सुबह';\n    } else if (hour < 17) {\n      return 'दोपहर';\n    } else if (hour < 20) {\n      return 'शाम';\n    } else {\n      return 'रात';\n    }\n  },\n  week: {\n    dow: 0,\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\nfunction translate$4(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';\n    case 'ss':\n      return num + (isFuture || withoutSuffix ? ' másodperc' : ' másodperce');\n    case 'm':\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'h':\n      return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n    case 'd':\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'M':\n      return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n    case 'y':\n      return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n  }\n  return '';\n}\nfunction week(date, isFuture) {\n  return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\nconst huLocale = {\n  abbr: 'hu',\n  months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n  monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n  weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n  weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'YYYY.MM.DD.',\n    LL: 'YYYY. MMMM D.',\n    LLL: 'YYYY. MMMM D. H:mm',\n    LLLL: 'YYYY. MMMM D., dddd H:mm'\n  },\n  meridiemParse: /de|du/i,\n  isPM(input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    } else {\n      return isLower === true ? 'du' : 'DU';\n    }\n  },\n  calendar: {\n    sameDay: '[ma] LT[-kor]',\n    nextDay: '[holnap] LT[-kor]',\n    nextWeek(date) {\n      return week(date, true);\n    },\n    lastDay: '[tegnap] LT[-kor]',\n    lastWeek(date) {\n      return week(date, false);\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s múlva',\n    past: '%s',\n    s: translate$4,\n    ss: translate$4,\n    m: translate$4,\n    mm: translate$4,\n    h: translate$4,\n    hh: translate$4,\n    d: translate$4,\n    dd: translate$4,\n    M: translate$4,\n    MM: translate$4,\n    y: translate$4,\n    yy: translate$4\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\nconst hrLocale = {\n  abbr: 'hr',\n  months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n  monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n  weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n  weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n  weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Danas u] LT',\n    nextDay: '[Sutra u] LT',\n    nextWeek: 'dddd [u] LT',\n    lastDay: '[Jučer u] LT',\n    lastWeek: '[Zadnji] dddd [u] LT',\n    sameElse: 'L'\n  },\n  invalidDate: 'Neispravan datum',\n  relativeTime: {\n    future: 'za %s',\n    past: '%s prije',\n    s: 'nekoliko sekundi',\n    ss: '%d sekundi',\n    m: 'minuta',\n    mm: '%d minuta',\n    h: 'sat',\n    hh: '%d sati',\n    d: 'dan',\n    dd: '%d dana',\n    M: 'mjesec',\n    MM: '%d mjeseci',\n    y: 'godina',\n    yy: '%d godina'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    const b = num % 10,\n      output = ~~(num % 100 / 10) === 1 ? '.' : b === 1 ? '.' : b === 2 ? '.' : b === 3 ? '.' : '.';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\nconst idLocale = {\n  abbr: 'id',\n  months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [pukul] HH.mm',\n    LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    } else {\n      return 'malam';\n    }\n  },\n  calendar: {\n    sameDay: '[Hari ini pukul] LT',\n    nextDay: '[Besok pukul] LT',\n    nextWeek: 'dddd [pukul] LT',\n    lastDay: '[Kemarin pukul] LT',\n    lastWeek: 'dddd [lalu pukul] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dalam %s',\n    past: '%s yang lalu',\n    s: 'beberapa detik',\n    ss: '%d detik',\n    m: 'semenit',\n    mm: '%d menit',\n    h: 'sejam',\n    hh: '%d jam',\n    d: 'sehari',\n    dd: '%d hari',\n    M: 'sebulan',\n    MM: '%d bulan',\n    y: 'setahun',\n    yy: '%d tahun'\n  },\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\nconst itLocale = {\n  abbr: 'it',\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future(num) {\n      return (/^[0-9].+$/.test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n    },\n    past: '%s fa',\n    s: 'alcuni secondi',\n    ss: '%d secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\nconst jaLocale = {\n  abbr: 'ja',\n  months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n  weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n  weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日 HH:mm',\n    LLLL: 'YYYY年M月D日 HH:mm dddd',\n    l: 'YYYY/MM/DD',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日 HH:mm dddd'\n  },\n  meridiemParse: /午前|午後/i,\n  isPM(input) {\n    return input === '午後';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return '午前';\n    } else {\n      return '午後';\n    }\n  },\n  calendar: {\n    sameDay: '[今日] LT',\n    nextDay: '[明日] LT',\n    nextWeek: '[来週]dddd LT',\n    lastDay: '[昨日] LT',\n    lastWeek: '[前週]dddd LT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}日/,\n  ordinal(num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n      default:\n        return num.toString(10);\n    }\n  },\n  relativeTime: {\n    future: '%s後',\n    past: '%s前',\n    s: '数秒',\n    ss: '%d秒',\n    m: '1分',\n    mm: '%d分',\n    h: '1時間',\n    hh: '%d時間',\n    d: '1日',\n    dd: '%d日',\n    M: '1ヶ月',\n    MM: '%dヶ月',\n    y: '1年',\n    yy: '%d年'\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\nconst kaLocale = {\n  abbr: 'ka',\n  months: {\n    format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n    standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\n  },\n  monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n  weekdays: {\n    standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n    format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n    isFormat: /(წინა|შემდეგ)/\n  },\n  weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n  weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A'\n  },\n  calendar: {\n    sameDay: '[დღეს] LT[-ზე]',\n    nextDay: '[ხვალ] LT[-ზე]',\n    lastDay: '[გუშინ] LT[-ზე]',\n    nextWeek: '[შემდეგ] dddd LT[-ზე]',\n    lastWeek: '[წინა] dddd LT-ზე',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future(s) {\n      var st = s.toString();\n      return /(წამი|წუთი|საათი|წელი)/.test(st) ? st.replace(/ი$/, 'ში') : st + 'ში';\n    },\n    past(s) {\n      var st = s.toString();\n      if (/(წამი|წუთი|საათი|დღე|თვე)/.test(st)) {\n        return st.replace(/(ი|ე)$/, 'ის წინ');\n      }\n      if (/წელი/.test(st)) {\n        return st.replace(/წელი$/, 'წლის წინ');\n      }\n    },\n    s: 'რამდენიმე წამი',\n    ss: '%d წამი',\n    m: 'წუთი',\n    mm: '%d წუთი',\n    h: 'საათი',\n    hh: '%d საათი',\n    d: 'დღე',\n    dd: '%d დღე',\n    M: 'თვე',\n    MM: '%d თვე',\n    y: 'წელი',\n    yy: '%d წელი'\n  },\n  dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n  ordinal(_num, _period) {\n    const num = Number(_num);\n    if (num === 0) {\n      return num.toString();\n    }\n    if (num === 1) {\n      return num + '-ლი';\n    }\n    if (num < 20 || num <= 100 && num % 20 === 0 || num % 100 === 0) {\n      return 'მე-' + num;\n    }\n    return num + '-ე';\n  },\n  week: {\n    dow: 1,\n    doy: 4\n  }\n};\n\n// ! moment.js locale configuration\n// ! locale : Kazakh [kk]\n// ! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\nconst suffixes$1 = {\n  0: '-ші',\n  1: '-ші',\n  2: '-ші',\n  3: '-ші',\n  4: '-ші',\n  5: '-ші',\n  6: '-шы',\n  7: '-ші',\n  8: '-ші',\n  9: '-шы',\n  10: '-шы',\n  20: '-шы',\n  30: '-шы',\n  40: '-шы',\n  50: '-ші',\n  60: '-шы',\n  70: '-ші',\n  80: '-ші',\n  90: '-шы',\n  100: '-ші'\n};\nconst kkLocale = {\n  abbr: 'kk',\n  months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n  monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n  weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n  weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n  weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Бүгін сағат] LT',\n    nextDay: '[Ертең сағат] LT',\n    nextWeek: 'dddd [сағат] LT',\n    lastDay: '[Кеше сағат] LT',\n    lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s ішінде',\n    past: '%s бұрын',\n    s: 'бірнеше секунд',\n    ss: '%d секунд',\n    m: 'бір минут',\n    mm: '%d минут',\n    h: 'бір сағат',\n    hh: '%d сағат',\n    d: 'бір күн',\n    dd: '%d күн',\n    M: 'бір ай',\n    MM: '%d ай',\n    y: 'бір жыл',\n    yy: '%d жыл'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n  ordinal(_num) {\n    const a = _num % 10;\n    const b = _num >= 100 ? 100 : null;\n    return _num + (suffixes$1[_num] || suffixes$1[a] || suffixes$1[b]);\n  },\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 7th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\nconst koLocale = {\n  abbr: 'ko',\n  months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n  weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n  weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm',\n    LTS: 'A h:mm:ss',\n    L: 'YYYY.MM.DD',\n    LL: 'YYYY년 MMMM D일',\n    LLL: 'YYYY년 MMMM D일 A h:mm',\n    LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n    l: 'YYYY.MM.DD',\n    ll: 'YYYY년 MMMM D일',\n    lll: 'YYYY년 MMMM D일 A h:mm',\n    llll: 'YYYY년 MMMM D일 dddd A h:mm'\n  },\n  calendar: {\n    sameDay: '오늘 LT',\n    nextDay: '내일 LT',\n    nextWeek: 'dddd LT',\n    lastDay: '어제 LT',\n    lastWeek: '지난주 dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s 후',\n    past: '%s 전',\n    s: '몇 초',\n    ss: '%d초',\n    m: '1분',\n    mm: '%d분',\n    h: '한 시간',\n    hh: '%d시간',\n    d: '하루',\n    dd: '%d일',\n    M: '한 달',\n    MM: '%d달',\n    y: '일 년',\n    yy: '%d년'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n  ordinal: function (num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '일';\n      case 'M':\n        return num + '월';\n      case 'w':\n      case 'W':\n        return num + '주';\n      default:\n        return num.toString(10);\n    }\n  },\n  meridiemParse: /오전|오후/,\n  isPM: function (token) {\n    return token === '오후';\n  },\n  meridiem: function (hour, minute, isUpper) {\n    return hour < 12 ? '오전' : '오후';\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\nconst units = {\n  ss: 'sekundė_sekundžių_sekundes',\n  m: 'minutė_minutės_minutę',\n  mm: 'minutės_minučių_minutes',\n  h: 'valanda_valandos_valandą',\n  hh: 'valandos_valandų_valandas',\n  d: 'diena_dienos_dieną',\n  dd: 'dienos_dienų_dienas',\n  M: 'mėnuo_mėnesio_mėnesį',\n  MM: 'mėnesiai_mėnesių_mėnesius',\n  y: 'metai_metų_metus',\n  yy: 'metai_metų_metus'\n};\nfunction translateSeconds(num, withoutSuffix, key, isFuture) {\n  if (withoutSuffix) {\n    return 'kelios sekundės';\n  } else {\n    return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n  }\n}\nfunction translateSingular(num, withoutSuffix, key, isFuture) {\n  return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n}\nfunction special(num) {\n  return num % 10 === 0 || num > 10 && num < 20;\n}\nfunction forms(key) {\n  return units[key].split('_');\n}\nfunction translate$3(num, withoutSuffix, key, isFuture) {\n  let result = num + ' ';\n  if (num === 1) {\n    return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n  } else if (withoutSuffix) {\n    return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n  } else {\n    if (isFuture) {\n      return result + forms(key)[1];\n    } else {\n      return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n    }\n  }\n}\nconst ltLocale = {\n  abbr: 'lt',\n  months: {\n    format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n    standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n  },\n  monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n  weekdays: {\n    format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n    standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n    isFormat: /dddd HH:mm/\n  },\n  weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n  weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY [m.] MMMM D [d.]',\n    LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n    l: 'YYYY-MM-DD',\n    ll: 'YYYY [m.] MMMM D [d.]',\n    lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n  },\n  calendar: {\n    sameDay: '[Šiandien] LT',\n    nextDay: '[Rytoj] LT',\n    nextWeek: 'dddd LT',\n    lastDay: '[Vakar] LT',\n    lastWeek: '[Praėjusį] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'po %s',\n    past: 'prieš %s',\n    s: translateSeconds,\n    ss: translate$3,\n    m: translateSingular,\n    mm: translate$3,\n    h: translateSingular,\n    hh: translate$3,\n    d: translateSingular,\n    dd: translate$3,\n    M: translateSingular,\n    MM: translate$3,\n    y: translateSingular,\n    yy: translate$3\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n  ordinal(num) {\n    return num + '-oji';\n  },\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\nconst lvLocale = {\n  abbr: 'lv',\n  months: 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n  weekdaysShort: 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n  weekdaysMin: 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'pēc %s',\n    past: 'pirms %s',\n    s: 'dažām sekundēm',\n    ss: '%d sekundēm',\n    m: 'minūtes',\n    mm: '%d minūtēm',\n    h: 'stundas',\n    hh: '%d stundām',\n    d: 'dienas',\n    dd: '%d dienām',\n    M: 'mēneša',\n    MM: '%d mēnešiem',\n    y: 'gada',\n    yy: '%d gadiem'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal(num) {\n    return num + '.';\n  },\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\nfunction translate$2(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n    case 'ss':\n      return num + (withoutSuffix ? ' секунд' : ' секундын');\n    case 'm':\n    case 'mm':\n      return num + (withoutSuffix ? ' минут' : ' минутын');\n    case 'h':\n    case 'hh':\n      return num + (withoutSuffix ? ' цаг' : ' цагийн');\n    case 'd':\n    case 'dd':\n      return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n    case 'M':\n    case 'MM':\n      return num + (withoutSuffix ? ' сар' : ' сарын');\n    case 'y':\n    case 'yy':\n      return num + (withoutSuffix ? ' жил' : ' жилийн');\n    default:\n      return num.toString(10);\n  }\n}\nconst mnLocale = {\n  abbr: 'mn',\n  months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n  monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n  weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n  weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY оны MMMMын D',\n    LLL: 'YYYY оны MMMMын D HH:mm',\n    LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n  },\n  meridiemParse: /ҮӨ|ҮХ/i,\n  isPM: function (input) {\n    return input === 'ҮХ';\n  },\n  meridiem: function (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ҮӨ';\n    } else {\n      return 'ҮХ';\n    }\n  },\n  calendar: {\n    sameDay: '[Өнөөдөр] LT',\n    nextDay: '[Маргааш] LT',\n    nextWeek: '[Ирэх] dddd LT',\n    lastDay: '[Өчигдөр] LT',\n    lastWeek: '[Өнгөрсөн] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s дараа',\n    past: '%s өмнө',\n    s: translate$2,\n    ss: translate$2,\n    m: translate$2,\n    mm: translate$2,\n    h: translate$2,\n    hh: translate$2,\n    d: translate$2,\n    dd: translate$2,\n    M: translate$2,\n    MM: translate$2,\n    y: translate$2,\n    yy: translate$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n  ordinal: function (num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + ' өдөр';\n      default:\n        return num.toString(10);\n    }\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\nconst nbLocale = {\n  abbr: 'nb',\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n  weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n  weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[forrige] dddd [kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'noen sekunder',\n    ss: '%d sekunder',\n    m: 'ett minutt',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dager',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\nlet monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nlet monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\nlet monthsParse$2 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex$1 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\nconst nlBeLocale = {\n  abbr: 'nl-be',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots$1[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots$1[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex: monthsRegex$1,\n  monthsShortRegex: monthsRegex$1,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$2,\n  longMonthsParse: monthsParse$2,\n  shortMonthsParse: monthsParse$2,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n  monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\nlet monthsParse$1 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\nconst nlLocale = {\n  abbr: 'nl',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$1,\n  longMonthsParse: monthsParse$1,\n  shortMonthsParse: monthsParse$1,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\nfunction plural$3(num) {\n  return num % 10 < 5 && num % 10 > 1 && ~~(num / 10) % 10 !== 1;\n}\nfunction translate$1(num, withoutSuffix, key) {\n  let result = num + ' ';\n  switch (key) {\n    case 'ss':\n      return result + (plural$3(num) ? 'sekundy' : 'sekund');\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutę';\n    case 'mm':\n      return result + (plural$3(num) ? 'minuty' : 'minut');\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinę';\n    case 'hh':\n      return result + (plural$3(num) ? 'godziny' : 'godzin');\n    case 'MM':\n      return result + (plural$3(num) ? 'miesiące' : 'miesięcy');\n    case 'yy':\n      return result + (plural$3(num) ? 'lata' : 'lat');\n  }\n}\nconst plLocale = {\n  abbr: 'pl',\n  months(date, format, isUTC) {\n    if (!date) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[getMonth(date, isUTC)];\n    } else {\n      return monthsNominative[getMonth(date, isUTC)];\n    }\n  },\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Dziś o] LT',\n    nextDay: '[Jutro o] LT',\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W niedzielę o] LT';\n        case 2:\n          return '[We wtorek o] LT';\n        case 3:\n          return '[W środę o] LT';\n        case 5:\n          return '[W piątek o] LT';\n        case 6:\n          return '[W sobotę o] LT';\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n    lastDay: '[Wczoraj o] LT',\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W zeszłą niedzielę o] LT';\n        case 3:\n          return '[W zeszłą środę o] LT';\n        case 4:\n          return '[W zeszłą czwartek o] LT';\n        case 5:\n          return '[W zeszłą piątek o] LT';\n        case 6:\n          return '[W zeszłą sobotę o] LT';\n        default:\n          return '[W zeszły] dddd [o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    ss: translate$1,\n    m: translate$1,\n    mm: translate$1,\n    h: translate$1,\n    hh: translate$1,\n    d: '1 dzień',\n    dd: '%d dni',\n    M: 'miesiąc',\n    MM: translate$1,\n    y: 'rok',\n    yy: translate$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\nconst ptBrLocale = {\n  abbr: 'pt-br',\n  months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n  weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hoje às] LT',\n    nextDay: '[Amanhã às] LT',\n    nextWeek: 'dddd [às] LT',\n    lastDay: '[Ontem às] LT',\n    lastWeek(date) {\n      return getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6 ? '[Último] dddd [às] LT' :\n      // Saturday + Sunday\n      '[Última] dddd [às] LT'; // Monday - Friday\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrás',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mês',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº'\n};\n\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\nfunction relativeTimeWithPlural$2(num, withoutSuffix, key) {\n  let format = {\n    ss: 'secunde',\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani'\n  };\n  let separator = ' ';\n  if (num % 100 >= 20 || num >= 100 && num % 100 === 0) {\n    separator = ' de ';\n  }\n  return num + separator + format[key];\n}\nconst roLocale = {\n  abbr: 'ro',\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mâine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s în urmă',\n    s: 'câteva secunde',\n    ss: relativeTimeWithPlural$2,\n    m: 'un minut',\n    mm: relativeTimeWithPlural$2,\n    h: 'o oră',\n    hh: relativeTimeWithPlural$2,\n    d: 'o zi',\n    dd: relativeTimeWithPlural$2,\n    M: 'o lună',\n    MM: relativeTimeWithPlural$2,\n    y: 'un an',\n    yy: relativeTimeWithPlural$2\n  },\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\nfunction plural$2(word, num) {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\nfunction relativeTimeWithPlural$1(num, withoutSuffix, key) {\n  let format = {\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n    hh: 'час_часа_часов',\n    dd: 'день_дня_дней',\n    MM: 'месяц_месяца_месяцев',\n    yy: 'год_года_лет'\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'минута' : 'минуту';\n  }\n  return num + ' ' + plural$2(format[key], +num);\n}\nlet monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nconst ruLocale = {\n  abbr: 'ru',\n  months: {\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n  },\n  monthsShort: {\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n  },\n  weekdays: {\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // копия предыдущего\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // полные названия с падежами\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n  // Выражение, которое соотвествует только сокращённым формам\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., H:mm',\n    LLLL: 'dddd, D MMMM YYYY г., H:mm'\n  },\n  calendar: {\n    sameDay: '[Сегодня в] LT',\n    nextDay: '[Завтра в] LT',\n    lastDay: '[Вчера в] LT',\n    nextWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В следующее] dddd [в] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[В следующий] dddd [в] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[В следующую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n    lastWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В прошлое] dddd [в] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[В прошлый] dddd [в] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[В прошлую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'через %s',\n    past: '%s назад',\n    s: 'несколько секунд',\n    ss: relativeTimeWithPlural$1,\n    m: relativeTimeWithPlural$1,\n    mm: relativeTimeWithPlural$1,\n    h: 'час',\n    hh: relativeTimeWithPlural$1,\n    d: 'день',\n    dd: relativeTimeWithPlural$1,\n    M: 'месяц',\n    MM: relativeTimeWithPlural$1,\n    y: 'год',\n    yy: relativeTimeWithPlural$1\n  },\n  meridiemParse: /ночи|утра|дня|вечера/i,\n  isPM(input) {\n    return /^(дня|вечера)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночи';\n    } else if (hour < 12) {\n      return 'утра';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечера';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n  ordinal(_num, period) {\n    const num = Number(_num);\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return num + '-й';\n      case 'D':\n        return num + '-го';\n      case 'w':\n      case 'W':\n        return num + '-я';\n      default:\n        return num.toString(10);\n    }\n  },\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\nconst months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\nconst monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\nfunction plural$1(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\nfunction translate(num, withoutSuffix, key, isFuture) {\n  const result = num + ' ';\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'sekundy' : 'sekúnd');\n      } else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'minúty' : 'minút');\n      } else {\n        return result + 'minútami';\n      }\n    // break;\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'hodiny' : 'hodín');\n      } else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'deň' : 'dňom';\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'dni' : 'dní');\n      } else {\n        return result + 'dňami';\n      }\n    // break;\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'mesiace' : 'mesiacov');\n      } else {\n        return result + 'mesiacmi';\n      }\n    // break;\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokom';\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'roky' : 'rokov');\n      } else {\n        return result + 'rokmi';\n      }\n    // break;\n  }\n}\n\nconst skLocale = {\n  abbr: 'sk',\n  months,\n  monthsShort,\n  weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedeľu o] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n        case 3:\n          return '[v stredu o] LT';\n        case 4:\n          return '[vo štvrtok o] LT';\n        case 5:\n          return '[v piatok o] LT';\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n    lastDay: '[včera o] LT',\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulú nedeľu o] LT';\n        case 1:\n        case 2:\n          return '[minulý] dddd [o] LT';\n        case 3:\n          return '[minulú stredu o] LT';\n        case 4:\n        case 5:\n          return '[minulý] dddd [o] LT';\n        case 6:\n          return '[minulú sobotu o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'o %s',\n    past: 'pred %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  var result = number + ' ';\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n    case 'ss':\n      if (number === 1) {\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n      } else {\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n      }\n      return result;\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n      return result;\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n      return result;\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n      return result;\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n      return result;\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n      return result;\n  }\n}\nconst slLocale = {\n  abbr: 'sl',\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n        case 3:\n          return '[v] [sredo] [ob] LT';\n        case 6:\n          return '[v] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n    lastDay: '[včeraj ob] LT',\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[prejšnjo] [nedeljo] [ob] LT';\n        case 3:\n          return '[prejšnjo] [sredo] [ob] LT';\n        case 6:\n          return '[prejšnjo] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejšnji] dddd [ob] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'čez %s',\n    past: 'pred %s',\n    s: processRelativeTime,\n    ss: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Albanian [sq]\n//! author : Agon Cecelia : https://github.com/agoncecelia\nconst sqLocale = {\n  abbr: 'sq',\n  months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n  monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n  weekdays: 'E Dielë_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n  weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n  weekdaysMin: 'Di_He_Ma_Me_En_Pr_Sh'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Sot në] LT',\n    nextDay: '[Nesër në] LT',\n    nextWeek: 'dddd [në] LT',\n    lastDay: '[Dje në] LT',\n    lastWeek: 'dddd [e kaluar në] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'në %s',\n    past: 'para %sve',\n    s: 'disa sekonda',\n    ss: '%d sekonda',\n    m: 'një minut',\n    mm: '%d minuta',\n    h: 'një orë',\n    hh: '%d orë',\n    d: 'një ditë',\n    dd: '%d ditë',\n    M: 'një muaj',\n    MM: '%d muaj',\n    y: 'një vit',\n    yy: '%d vite'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\nconst svLocale = {\n  abbr: 'sv',\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n  weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n  weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[Igår] LT',\n    nextWeek: '[På] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'för %s sedan',\n    s: 'några sekunder',\n    ss: '%d sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en månad',\n    MM: '%d månader',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    let b = num % 10,\n      output = ~~(num % 100 / 10) === 1 ? 'e' : b === 1 ? 'a' : b === 2 ? 'a' : b === 3 ? 'e' : 'e';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\nconst thLocale = {\n  abbr: 'th',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  }\n};\n\n// moment.js locale configuration\n// locale : Thai-Buddhist Era [th-be]\n// author : Watcharapol Sanitwong : https://github.com/tumit\nconst thBeLocale = {\n  abbr: 'th-be',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  },\n  preparse(str, format) {\n    const _format = thBeLocale.longDateFormat[format] ? thBeLocale.longDateFormat[format] : format;\n    // endsWith('YYYY')\n    if (_format.indexOf('YYYY', _format.length - 'YYYY'.length) !== -1) {\n      const ddMM = str.substr(0, str.length - 4);\n      const yyyy = parseInt(str.substr(str.length - 4), 10) - 543;\n      return ddMM + yyyy;\n    }\n    return str;\n  },\n  getFullYear(date, isUTC = false) {\n    return 543 + (isUTC ? date.getUTCFullYear() : date.getFullYear());\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\nlet suffixes = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'üncü',\n  4: '\\'üncü',\n  100: '\\'üncü',\n  6: '\\'ncı',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'ıncı',\n  90: '\\'ıncı'\n};\nconst trLocale = {\n  abbr: 'tr',\n  months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n  monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[bugün saat] LT',\n    nextDay: '[yarın saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dün] LT',\n    lastWeek: '[geçen] dddd [saat] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s önce',\n    s: 'birkaç saniye',\n    ss: '%d saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gün',\n    dd: '%d gün',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yıl',\n    yy: '%d yıl'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    if (num === 0) {\n      // special case for zero\n      return num + '\\'ıncı';\n    }\n    let a = num % 10,\n      b = num % 100 - a,\n      c = num >= 100 ? 100 : null;\n    return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n  },\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\nfunction plural(word, num) {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\nfunction relativeTimeWithPlural(num, withoutSuffix, key) {\n  let format = {\n    ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n    mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n    hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n    dd: 'день_дні_днів',\n    MM: 'місяць_місяці_місяців',\n    yy: 'рік_роки_років'\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'хвилина' : 'хвилину';\n  }\n  if (key === 'h') {\n    return withoutSuffix ? 'година' : 'годину';\n  }\n  return num + ' ' + plural(format[key], +num);\n}\nfunction weekdaysCaseReplace(date, format, isUTC) {\n  let weekdays = {\n    nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n    accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n    genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n  };\n  if (!date) {\n    return weekdays.nominative;\n  }\n  let nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format) ? 'accusative' : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format) ? 'genitive' : 'nominative';\n  return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\nfunction processHoursFunction(str) {\n  return function (date) {\n    return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n  };\n}\nconst ukLocale = {\n  abbr: 'uk',\n  months: {\n    format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n    standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n  },\n  monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n  weekdays: weekdaysCaseReplace,\n  weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY р.',\n    LLL: 'D MMMM YYYY р., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n  },\n  calendar: {\n    sameDay: processHoursFunction('[Сьогодні '),\n    nextDay: processHoursFunction('[Завтра '),\n    lastDay: processHoursFunction('[Вчора '),\n    nextWeek: processHoursFunction('[У] dddd ['),\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return processHoursFunction('[Минулої] dddd [')(date);\n        case 1:\n        case 2:\n        case 4:\n          return processHoursFunction('[Минулого] dddd [')(date);\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'за %s',\n    past: '%s тому',\n    s: 'декілька секунд',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'годину',\n    hh: relativeTimeWithPlural,\n    d: 'день',\n    dd: relativeTimeWithPlural,\n    M: 'місяць',\n    MM: relativeTimeWithPlural,\n    y: 'рік',\n    yy: relativeTimeWithPlural\n  },\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n  meridiemParse: /ночі|ранку|дня|вечора/,\n  isPM(input) {\n    return /^(дня|вечора)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночі';\n    } else if (hour < 12) {\n      return 'ранку';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечора';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n  ordinal(_num, period) {\n    const num = Number(_num);\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return num + '-й';\n      case 'D':\n        return num + '-го';\n      default:\n        return num.toString();\n    }\n  },\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\nconst viLocale = {\n  abbr: 'vi',\n  months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n  monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n  weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysParseExact: true,\n  meridiemParse: /sa|ch/i,\n  isPM(input) {\n    return /^ch$/i.test(input);\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower ? 'sa' : 'SA';\n    } else {\n      return isLower ? 'ch' : 'CH';\n    }\n  },\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM [năm] YYYY',\n    LLL: 'D MMMM [năm] YYYY HH:mm',\n    LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n    l: 'DD/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hôm nay lúc] LT',\n    nextDay: '[Ngày mai lúc] LT',\n    nextWeek: 'dddd [tuần tới lúc] LT',\n    lastDay: '[Hôm qua lúc] LT',\n    lastWeek: 'dddd [tuần trước lúc] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s tới',\n    past: '%s trước',\n    s: 'vài giây',\n    ss: '%d giây',\n    m: 'một phút',\n    mm: '%d phút',\n    h: 'một giờ',\n    hh: '%d giờ',\n    d: 'một ngày',\n    dd: '%d ngày',\n    M: 'một tháng',\n    MM: '%d tháng',\n    y: 'một năm',\n    yy: '%d năm'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n  ordinal(_num) {\n    return '' + _num;\n  },\n  week: {\n    dow: 1,\n    doy: 4 // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\nconst zhCnLocale = {\n  abbr: 'zh-cn',\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日Ah点mm分',\n    LLLL: 'YYYY年M月D日ddddAh点mm分',\n    l: 'YYYY/M/D',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日dddd HH:mm'\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    } else {\n      // '中午'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    let hm = hour * 100 + minute;\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    } else {\n      return '晚上';\n    }\n  },\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n  ordinal(_num, period) {\n    const num = Number(_num);\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n      case 'M':\n        return num + '月';\n      case 'w':\n      case 'W':\n        return num + '周';\n      default:\n        return num.toString();\n    }\n  },\n  relativeTime: {\n    future: '%s内',\n    past: '%s前',\n    s: '几秒',\n    ss: '%d 秒',\n    m: '1 分钟',\n    mm: '%d 分钟',\n    h: '1 小时',\n    hh: '%d 小时',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 个月',\n    MM: '%d 个月',\n    y: '1 年',\n    yy: '%d 年'\n  },\n  week: {\n    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { add, arLocale, bgLocale, caLocale, csLocale, daLocale, deLocale, defineLocale, enGbLocale, endOf, esDoLocale, esLocale, esPrLocale, esUsLocale, etLocale, fiLocale, formatDate, frLocale, getDay, getFirstDayOfMonth, getFullYear, getLocale, getMonth, getSetGlobalLocale, glLocale, heLocale, hiLocale, hrLocale, huLocale, idLocale, isAfter, isArray, isBefore, isDate, isDateValid, isDisabledDay, isFirstDayOfWeek, isSame, isSameDay$1 as isSameDay, isSameMonth, isSameYear, itLocale, jaLocale, kaLocale, kkLocale, koLocale, listLocales, ltLocale, lvLocale, mnLocale, nbLocale, nlBeLocale, nlLocale, parseDate, plLocale, ptBrLocale, roLocale, ruLocale, setFullDate, shiftDate, skLocale, slLocale, sqLocale, startOf, subtract, svLocale, thBeLocale, thLocale, trLocale, ukLocale, updateLocale, utcAsLocal, viLocale, zhCnLocale };","map":{"version":3,"names":["mod","n","x","absFloor","num","Math","ceil","floor","isString","str","isDate","value","Date","Object","prototype","toString","call","isBoolean","isDateValid","date","getTime","isNaN","isFunction","fn","Function","isNumber","isArray","input","Array","hasOwnProp","a","b","hasOwnProperty","isObject","isObjectEmpty","obj","getOwnPropertyNames","length","k","isUndefined","toInt","argumentForCoercion","coercedNumber","isFinite","aliases","_mapUnits","hour","minute","second","millisecond","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","_unit","normalizeUnits","units","undefined","normalizeObjectUnits","inputObject","normalizedInput","normalizedProp","prop","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","zeroFill","targetLength","forceSign","absNumber","abs","zerosToFill","sign","_sign","_zeros","pow","max","substr","formatFunctions","formatTokenFunctions","formattingTokens","addFormatToken","token","padded","ordinal","callback","apply","arguments","opts","locale","makeFormatFunction","format","array","match","formatArr","i","removeFormattingTokens","isUTC","offset","output","j","replace","createUTCDate","y","m","d","UTC","getUTCFullYear","setUTCFullYear","createDate","h","M","s","ms","getFullYear","setFullYear","getHours","getUTCHours","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getMilliseconds","getUTCMilliseconds","getDay","getUTCDay","getDate","getUTCDate","getMonth","getUTCMonth","getUnixTime","valueOf","unix","getFirstDayOfMonth","daysInMonth$1","_daysInMonth","year","month","isFirstDayOfWeek","firstDayOfWeek","Number","isSameMonth","date1","date2","isSameYear","isSameDay$1","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","_strict","RegExp","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","_token","func","config","addWeekParseToken","_w","addTimeToArrayFromToken","_a","priorities","addUnitPriority","priority","initDayOfMonth","_dayOfMonthOrdinalParse","_ordinalParse","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","getYear","initYear","parseTwoDigitYear","parseInt","daysInYear","isLeapYear","daysInMonth","NaN","modMonth","_year","initMonth","monthsShort","months","monthsShortRegex","monthsRegex","_locale","monthsParse","defaultTimeUnit","day","seconds","shiftDate","assign","min","setFullDate","getNum","milliseconds","def","_month","_date","setMonth","dayOfMonth","setUTCMonth","setDay","setUTCDate","setDate","setHours","setUTCHours","setMinutes","setUTCMinutes","setSeconds","setUTCSeconds","setMilliseconds","setUTCMilliseconds","setTime","cloneDate","startOf","setLocaleDayOfWeek","setISODayOfWeek","endOf","start","_step","add","res","subtract","initDayOfYear","getDayOfYear","_dayOfYear","someDate","oneDay","round","setDayOfYear","dayOfYear","firstWeekOffset","dow","doy","fwd","fwdlw","dayOfYearFromWeeks","week","weekday","localWeekday","weekOffset","resYear","resDayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultMonthsShortRegex","defaultMonthsRegex","Locale","constructor","set","confKey","key","_config","calendar","now","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","val","slice","invalidDate","_invalidDate","_ordinal","preparse","postformat","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","_months","standalone","isFormat","test","_monthsShort","monthName","strict","_monthsParseExact","handleMonthStrictParse","_monthsParse","_longMonthsParse","_shortMonthsParse","_shortMonths","computeMonthsParse","_monthsStrictRegex","_monthsRegex","_monthsShortStrictRegex","_monthsShortRegex","_week","firstDayOfYear","weekdays","_weekdays","_key","weekdaysMin","_weekdaysMin","weekdaysShort","_weekdaysShort","weekdaysParse","weekdayName","_weekdaysParseExact","handleWeekStrictParse","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","setDayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","isPM","charAt","hours","minutes","isLower","formatLongDate","llc","toLocaleLowerCase","ii","mom","indexOf","shortPieces","longPieces","mixedPieces","push","sort","cmpLenRev","join","minPieces","minp","shortp","longp","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultInvalidDate","defaultLocaleWeek","defaultLocaleMeridiemParse","defaultRelativeTime","future","past","ss","mm","hh","dd","MM","yy","baseConfig","dayOfMonthOrdinalParse","meridiemParse","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","initWeek","getWeek","getISOWeek","setWeek","getLocale","setISOWeek","initWeekYear","getWeekYear","getISOWeekYear","addWeekYearFormatToken","_getWeekYearFormatCb","_getISOWeekYearFormatCb","getter","getSetWeekYear","getSetWeekYearHelper","getLocaleDayOfWeek","getSetISOWeekYear","getISODayOfWeek","getISOWeeksInYear","getWeeksInYear","weeksTarget","setWeekAll","weekYear","dayOfYearData","initTimezone","getZoneAbbr","getZoneName","initTimestamp","_d","parseFloat","initSecond","initQuarter","getQuarter","setQuarter","quarter","addOffsetFormatToken","separator","getUTCOffset","_isUTC","_offset","initOffset","_useUTC","_tzm","offsetFromString","chunkOffset","matcher","matches","chunk","parts","_min","cloneWithOffset","offsetDiff","getDateOffset","getTimezoneOffset","setUTCOffset","keepLocalTime","keepMinutes","localAdjust","_input","_changeInProgress","setOffsetToUTC","isDaylightSavingTime","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","initMinute","initMillisecond","parseMs","initHour","hFormat","kFormat","_h","_mm","_ss","_H","lowercase","matchMeridiem","_meridiemParse","kInput","_isPm","_meridiem","bigHour","pos","pos1","pos2","locales","localeFamilies","globalLocale","normalizeLocale","chooseLocale","names","next","loadLocale","mergeConfigs","parentConfig","childConfig","childProp","parentProp","name","console","error","getSetGlobalLocale","values","data","defineLocale","_abbr","abbr","parentLocale","forEach","updateLocale","tmpLocale","setDefaultLocale","listLocales","keys","initDayOfWeek","ordering","orderingHash","reduce","mem","order","isDurationValid","duration","durationKeys","some","unitHasDecimal","absCeil","number","bubble","dur","_milliseconds","days","_days","_data","monthsToDays","monthsFromDays","daysToMonths","years","thresholds","substituteTimeAgo","posNegDuration","createDuration","as","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","Duration","quarters","weeks","_isValid","isValid","humanize","withSuffix","localeData","localeKey","mathAbs","_units","Error","isDuration","flags","parsedParts","isNowValid","invalidWeekday","isFrozen","createInvalid","markInvalid","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","_i","exec","allowTime","dateFormat","timeFormat","tzFormat","l","_f","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","trim","checkWeekday","weekdayStr","parsedInput","weekdayProvided","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","configFromString","formatDate","_format","formatMoment","expandFormat","localFormattingTokens","replaceLongDateFormatTokens","lastIndex","defaults","c","currentDateArray","nowValue","configFromArray","yearToUse","currentDate","dayOfYearFromWeekInfo","_overflowDayOfYear","_nextDay","expectedWeekday","temp","weekdayOverflow","w","curWeek","_overflowWeeks","_overflowWeekday","checkOverflow","ISO_8601","RFC_2822","totalParsedInputLength","inputLength","skipped","meridiemFixWrap","_hour","meridiemHour","isPm","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","map","createFromConfig","prepareConfig","_l","configFromInput","_arr","createLocalOrUTC","parseDate","utcAsLocal","absRound","isAfter","isBefore","isDisabledDay","daysDisabled","isBetween","from","to","inclusivity","leftBound","rightBound","isSame","inputMs","isSameDay","isSameOrAfter","isSameOrBefore","aspNetRegex","isoRegex","convertDuration","parseIso","diffRes","momentsDifference","inp","positiveMomentsDifference","base","other","_basePlus","_other","period","addSubtract","isAdding","parseWeekday","_num","_weekDay","parseIsoWeekday","getSetDayOfWeek","getDayOfWeek","symbolMap$1","numberMap$1","pluralForm","plurals","pluralize","u","f","months$2","arLocale","weekdaysParseExact","bgLocale","lastDigit","last2Digits","monthsShortDot$5","monthsShort$7","monthsParse$6","monthsRegex$5","caLocale","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","months$1","monthsShort$6","plural$4","translate$6","csLocale","daLocale","processRelativeTime$2","deLocale","monthsParseExact","enGbLocale","monthsShortDot$4","monthsShort$5","monthsParse$5","monthsRegex$4","esDoLocale","monthsShortDot$3","monthsShort$4","monthsParse$4","monthsRegex$3","esLocale","monthsShortDot$2","monthsShort$3","esPrLocale","monthsShortDot$1","monthsShort$2","esUsLocale","processRelativeTime$1","etLocale","numbersPast","numbersFuture","translate$5","verbalNumber","fiLocale","ll","lll","llll","frLocale","monthsShortDot","monthsShort$1","monthsParse$3","monthsRegex$2","glLocale","heLocale","symbolMap","numberMap","hiLocale","weekEndings","translate$4","huLocale","hrLocale","idLocale","itLocale","jaLocale","kaLocale","st","_period","suffixes$1","kkLocale","koLocale","isUpper","translateSeconds","translateSingular","forms","special","translate$3","ltLocale","lvLocale","translate$2","mnLocale","nbLocale","monthsShortWithDots$1","monthsShortWithoutDots$1","monthsParse$2","monthsRegex$1","nlBeLocale","monthsShortWithDots","monthsShortWithoutDots","monthsParse$1","nlLocale","monthsNominative","monthsSubjective","plural$3","translate$1","plLocale","ptBrLocale","relativeTimeWithPlural$2","roLocale","plural$2","word","relativeTimeWithPlural$1","ruLocale","plural$1","translate","skLocale","processRelativeTime","slLocale","sqLocale","svLocale","thLocale","thBeLocale","ddMM","yyyy","suffixes","trLocale","plural","relativeTimeWithPlural","weekdaysCaseReplace","nominative","accusative","genitive","nounCase","processHoursFunction","ukLocale","viLocale","zhCnLocale"],"sources":["/home/laispa/financas-pessoais-frontend/node_modules/ngx-bootstrap/chronos/fesm2022/ngx-bootstrap-chronos.mjs"],"sourcesContent":["function mod(n, x) {\n    return (n % x + x) % x;\n}\nfunction absFloor(num) {\n    return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n\nfunction isString(str) {\n    return typeof str === 'string';\n}\nfunction isDate(value) {\n    return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\nfunction isBoolean(value) {\n    return value === true || value === false;\n}\nfunction isDateValid(date) {\n    return date && date.getTime && !isNaN(date.getTime());\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isFunction(fn) {\n    return (fn instanceof Function ||\n        Object.prototype.toString.call(fn) === '[object Function]');\n}\nfunction isNumber(value) {\n    return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\nfunction isArray(input) {\n    return (input instanceof Array ||\n        Object.prototype.toString.call(input) === '[object Array]');\n}\nfunction hasOwnProp(a /*object*/, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\nfunction isObject(input /*object*/) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return (input != null && Object.prototype.toString.call(input) === '[object Object]');\n}\nfunction isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n        return (Object.getOwnPropertyNames(obj).length === 0);\n    }\n    let k;\n    for (k in obj) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (obj.hasOwnProperty(k)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isUndefined(input) {\n    return input === void 0;\n}\nfunction toInt(argumentForCoercion) {\n    const coercedNumber = +argumentForCoercion;\n    let value = 0;\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n    return value;\n}\n\nconst aliases = {};\nconst _mapUnits = {\n    date: 'day',\n    hour: 'hours',\n    minute: 'minutes',\n    second: 'seconds',\n    millisecond: 'milliseconds'\n};\nfunction addUnitAlias(unit, shorthand) {\n    const lowerCase = unit.toLowerCase();\n    let _unit = unit;\n    if (lowerCase in _mapUnits) {\n        _unit = _mapUnits[lowerCase];\n    }\n    aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\nfunction normalizeUnits(units) {\n    return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\nfunction normalizeObjectUnits(inputObject) {\n    const normalizedInput = {};\n    let normalizedProp;\n    let prop;\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n    return normalizedInput;\n}\n\n// place in new Date([array])\nconst YEAR = 0;\nconst MONTH = 1;\nconst DATE = 2;\nconst HOUR = 3;\nconst MINUTE = 4;\nconst SECOND = 5;\nconst MILLISECOND = 6;\nconst WEEK = 7;\nconst WEEKDAY = 8;\n\nfunction zeroFill(num, targetLength, forceSign) {\n    const absNumber = `${Math.abs(num)}`;\n    const zerosToFill = targetLength - absNumber.length;\n    const sign = num >= 0;\n    const _sign = sign ? (forceSign ? '+' : '') : '-';\n    // todo: this is crazy slow\n    const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n    return (_sign + _zeros + absNumber);\n}\n\nconst formatFunctions = {};\nconst formatTokenFunctions = {};\nconst formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken(token, padded, ordinal, callback) {\n    if (token) {\n        formatTokenFunctions[token] = callback;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function (date, opts) {\n            return opts.locale.ordinal(callback.apply(null, arguments), token);\n        };\n    }\n}\nfunction makeFormatFunction(format) {\n    const array = format.match(formattingTokens);\n    const length = array.length;\n    const formatArr = new Array(length);\n    for (let i = 0; i < length; i++) {\n        formatArr[i] = formatTokenFunctions[array[i]]\n            ? formatTokenFunctions[array[i]]\n            : removeFormattingTokens(array[i]);\n    }\n    return function (date, locale, isUTC, offset = 0) {\n        let output = '';\n        for (let j = 0; j < length; j++) {\n            output += isFunction(formatArr[j])\n                ? formatArr[j].call(null, date, { format, locale, isUTC, offset })\n                : formatArr[j];\n        }\n        return output;\n    };\n}\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction createUTCDate(y, m, d) {\n    // eslint-disable-next-line prefer-rest-params\n    const date = new Date(Date.UTC.apply(null, arguments));\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\nfunction createDate(y, m = 0, d = 1, h = 0, M = 0, s = 0, ms = 0) {\n    const date = new Date(y, m, d, h, M, s, ms);\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction getHours(date, isUTC = false) {\n    return isUTC ? date.getUTCHours() : date.getHours();\n}\nfunction getMinutes(date, isUTC = false) {\n    return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\nfunction getSeconds(date, isUTC = false) {\n    return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\nfunction getMilliseconds(date, isUTC = false) {\n    return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\nfunction getTime(date) {\n    return date.getTime();\n}\nfunction getDay(date, isUTC = false) {\n    return isUTC ? date.getUTCDay() : date.getDay();\n}\nfunction getDate(date, isUTC = false) {\n    return isUTC ? date.getUTCDate() : date.getDate();\n}\nfunction getMonth(date, isUTC = false) {\n    return isUTC ? date.getUTCMonth() : date.getMonth();\n}\nfunction getFullYear(date, isUTC = false) {\n    return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\nfunction getUnixTime(date) {\n    return Math.floor(date.valueOf() / 1000);\n}\nfunction unix(date) {\n    return Math.floor(date.valueOf() / 1000);\n}\nfunction getFirstDayOfMonth(date) {\n    return createDate(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds());\n}\nfunction daysInMonth$1(date) {\n    return _daysInMonth(date.getFullYear(), date.getMonth());\n}\nfunction _daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\nfunction isFirstDayOfWeek(date, firstDayOfWeek) {\n    return date.getDay() === Number(firstDayOfWeek);\n}\nfunction isSameMonth(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\nfunction isSameYear(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return getFullYear(date1) === getFullYear(date2);\n}\nfunction isSameDay$1(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return (isSameYear(date1, date2) &&\n        isSameMonth(date1, date2) &&\n        getDate(date1) === getDate(date2));\n}\n\nconst match1 = /\\d/; //       0 - 9\nconst match2 = /\\d\\d/; //      00 - 99\nconst match3 = /\\d{3}/; //     000 - 999\nconst match4 = /\\d{4}/; //    0000 - 9999\nconst match6 = /[+-]?\\d{6}/; // -999999 - 999999\nconst match1to2 = /\\d\\d?/; //       0 - 99\nconst match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\nconst match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nconst match1to3 = /\\d{1,3}/; //       0 - 999\nconst match1to4 = /\\d{1,4}/; //       0 - 9999\nconst match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\nconst matchUnsigned = /\\d+/; //       0 - inf\nconst matchSigned = /[+-]?\\d+/; //    -inf - inf\nconst matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nconst matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\nconst matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nconst matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\nconst regexes = {};\nfunction addRegexToken(token, regex, strictRegex) {\n    if (isFunction(regex)) {\n        regexes[token] = regex;\n        return;\n    }\n    regexes[token] = function (isStrict, locale) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\nfunction getParseRegexForToken(token, locale) {\n    const _strict = false;\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n    return regexes[token](_strict, locale);\n}\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(str) {\n    return regexEscape(str\n        .replace('\\\\', '')\n        .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4));\n}\nfunction regexEscape(str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nconst tokens = {};\nfunction addParseToken(token, callback) {\n    const _token = isString(token) ? [token] : token;\n    let func = callback;\n    if (isNumber(callback)) {\n        func = function (input, array, config) {\n            array[callback] = toInt(input);\n            return config;\n        };\n    }\n    if (isArray(_token) && isFunction(func)) {\n        let i;\n        for (i = 0; i < _token.length; i++) {\n            tokens[_token[i]] = func;\n        }\n    }\n}\nfunction addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, _token) {\n        config._w = config._w || {};\n        return callback(input, config._w, config, _token);\n    });\n}\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n    return config;\n}\n\nconst priorities = {};\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n/*\nexport function getPrioritizedUnits(unitsObj) {\n  const units = [];\n  let unit;\n  for (unit in unitsObj) {\n    if (unitsObj.hasOwnProperty(unit)) {\n      units.push({ unit, priority: priorities[unit] });\n    }\n  }\n  units.sort(function (a, b) {\n    return a.priority - b.priority;\n  });\n\n  return units;\n}\n*/\n\nfunction initDayOfMonth() {\n    // FORMATTING\n    addFormatToken('D', ['DD', 2, false], 'Do', function (date, opts) {\n        return getDate(date, opts.isUTC)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('date', 'D');\n    // PRIOROITY\n    addUnitPriority('date', 9);\n    // PARSING\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n    });\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array, config) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n        return config;\n    });\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty: false,\n        unusedTokens: [],\n        unusedInput: [],\n        overflow: -2,\n        charsLeftOver: 0,\n        nullInput: false,\n        invalidMonth: null,\n        invalidFormat: false,\n        userInvalidated: false,\n        iso: false,\n        parsedDateParts: [],\n        meridiem: null,\n        rfc2822: false,\n        weekdayMismatch: false\n    };\n}\nfunction getParsingFlags(config) {\n    if (config._pf == null) {\n        config._pf = defaultParsingFlags();\n    }\n    return config._pf;\n}\n\n// FORMATTING\nfunction getYear(date, opts) {\n    if (opts.locale.getFullYear) {\n        return opts.locale.getFullYear(date, opts.isUTC).toString();\n    }\n    return getFullYear(date, opts.isUTC).toString();\n}\nfunction initYear() {\n    addFormatToken('Y', null, null, function (date, opts) {\n        const y = getFullYear(date, opts.isUTC);\n        return y <= 9999 ? y.toString(10) : `+${y}`;\n    });\n    addFormatToken(null, ['YY', 2, false], null, function (date, opts) {\n        return (getFullYear(date, opts.isUTC) % 100).toString(10);\n    });\n    addFormatToken(null, ['YYYY', 4, false], null, getYear);\n    addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n    addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n    // ALIASES\n    addUnitAlias('year', 'y');\n    // PRIORITIES\n    addUnitPriority('year', 1);\n    // PARSING\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array, config) {\n        array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n        return config;\n    });\n    addParseToken('YY', function (input, array, config) {\n        array[YEAR] = parseTwoDigitYear(input);\n        return config;\n    });\n    addParseToken('Y', function (input, array, config) {\n        array[YEAR] = parseInt(input, 10);\n        return config;\n    });\n}\nfunction parseTwoDigitYear(input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// todo: this is duplicate, source in date-getters.ts\nfunction daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    const modMonth = mod(month, 12);\n    const _year = year + (month - modMonth) / 12;\n    return modMonth === 1\n        ? isLeapYear(_year) ? 29 : 28\n        : (31 - modMonth % 7 % 2);\n}\nfunction initMonth() {\n    // FORMATTING\n    addFormatToken('M', ['MM', 2, false], 'Mo', function (date, opts) {\n        return (getMonth(date, opts.isUTC) + 1).toString(10);\n    });\n    addFormatToken('MMM', null, null, function (date, opts) {\n        return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n    });\n    addFormatToken('MMMM', null, null, function (date, opts) {\n        return opts.locale.months(date, opts.format, opts.isUTC);\n    });\n    // ALIASES\n    addUnitAlias('month', 'M');\n    // PRIORITY\n    addUnitPriority('month', 8);\n    // PARSING\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n    addParseToken(['M', 'MM'], function (input, array, config) {\n        array[MONTH] = toInt(input) - 1;\n        return config;\n    });\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        const month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        }\n        else {\n            getParsingFlags(config).invalidMonth = !!input;\n        }\n        return config;\n    });\n}\n\nconst defaultTimeUnit = {\n    year: 0,\n    month: 0,\n    day: 0,\n    hour: 0,\n    minute: 0,\n    seconds: 0\n};\nfunction shiftDate(date, unit) {\n    const _unit = Object.assign({}, defaultTimeUnit, unit);\n    const year = date.getFullYear() + (_unit.year || 0);\n    const month = date.getMonth() + (_unit.month || 0);\n    let day = date.getDate() + (_unit.day || 0);\n    if (_unit.month && !_unit.day) {\n        day = Math.min(day, daysInMonth(year, month));\n    }\n    return createDate(year, month, day, date.getHours() + (_unit.hour || 0), date.getMinutes() + (_unit.minute || 0), date.getSeconds() + (_unit.seconds || 0));\n}\nfunction setFullDate(date, unit) {\n    return createDate(getNum(date.getFullYear(), unit.year), getNum(date.getMonth(), unit.month), 1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\n    getNum(date.getHours(), unit.hour), getNum(date.getMinutes(), unit.minute), getNum(date.getSeconds(), unit.seconds), getNum(date.getMilliseconds(), unit.milliseconds));\n}\nfunction getNum(def, num) {\n    return isNumber(num) ? num : def;\n}\nfunction setFullYear(date, value, isUTC) {\n    const _month = getMonth(date, isUTC);\n    const _date = getDate(date, isUTC);\n    const _year = getFullYear(date, isUTC);\n    if (isLeapYear(_year) && _month === 1 && _date === 29) {\n        const _daysInMonth = daysInMonth(value, _month);\n        isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n    }\n    isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n    return date;\n}\nfunction setMonth(date, value, isUTC) {\n    const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n    isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n    return date;\n}\nfunction setDay(date, value, isUTC) {\n    isUTC ? date.setUTCDate(value) : date.setDate(value);\n    return date;\n}\nfunction setHours(date, value, isUTC) {\n    isUTC ? date.setUTCHours(value) : date.setHours(value);\n    return date;\n}\nfunction setMinutes(date, value, isUTC) {\n    isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n    return date;\n}\nfunction setSeconds(date, value, isUTC) {\n    isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n    return date;\n}\nfunction setMilliseconds(date, value, isUTC) {\n    isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n    return date;\n}\nfunction setDate(date, value, isUTC) {\n    isUTC ? date.setUTCDate(value) : date.setDate(value);\n    return date;\n}\nfunction setTime(date, value) {\n    date.setTime(value);\n    return date;\n}\n\n// fastest way to clone date\n// https://jsperf.com/clone-date-object2\nfunction cloneDate(date) {\n    return new Date(date.getTime());\n}\n\nfunction startOf(date, unit, isUTC) {\n    const _date = cloneDate(date);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (unit) {\n        case 'year':\n            setMonth(_date, 0, isUTC);\n        /* falls through */\n        case 'quarter':\n        case 'month':\n            setDate(_date, 1, isUTC);\n        /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            setHours(_date, 0, isUTC);\n        /* falls through */\n        case 'hours':\n            setMinutes(_date, 0, isUTC);\n        /* falls through */\n        case 'minutes':\n            setSeconds(_date, 0, isUTC);\n        /* falls through */\n        case 'seconds':\n            setMilliseconds(_date, 0, isUTC);\n    }\n    // weeks are a special case\n    if (unit === 'week') {\n        setLocaleDayOfWeek(_date, 0, { isUTC });\n    }\n    if (unit === 'isoWeek') {\n        setISODayOfWeek(_date, 1);\n    }\n    // quarters are also special\n    if (unit === 'quarter') {\n        setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n    }\n    return _date;\n}\nfunction endOf(date, unit, isUTC) {\n    let _unit = unit;\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (_unit === 'date') {\n        _unit = 'day';\n    }\n    const start = startOf(date, _unit, isUTC);\n    const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n    const res = subtract(_step, 1, 'milliseconds', isUTC);\n    return res;\n}\n\nfunction initDayOfYear() {\n    // FORMATTING\n    addFormatToken('DDD', ['DDDD', 3, false], 'DDDo', function (date) {\n        return getDayOfYear(date)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('dayOfYear', 'DDD');\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n        return config;\n    });\n}\nfunction getDayOfYear(date, isUTC) {\n    const date1 = +startOf(date, 'day', isUTC);\n    const date2 = +startOf(date, 'year', isUTC);\n    const someDate = date1 - date2;\n    const oneDay = 1000 * 60 * 60 * 24;\n    return Math.round(someDate / oneDay) + 1;\n}\nfunction setDayOfYear(date, input) {\n    const dayOfYear = getDayOfYear(date);\n    return add(date, (input - dayOfYear), 'day');\n}\n\n/**\n *\n * @param {number} year\n * @param {number} dow - start-of-first-week\n * @param {number} doy - start-of-year\n * @returns {number}\n */\nfunction firstWeekOffset(year, dow, doy) {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    const fwd = dow - doy + 7;\n    // first-week day local weekday -- which local weekday is fwd\n    const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n    return -fwdlw + fwd - 1;\n}\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    const localWeekday = (7 + weekday - dow) % 7;\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n    let resYear;\n    let resDayOfYear;\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    }\n    else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    }\n    else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\nfunction weekOfYear(date, dow, doy, isUTC) {\n    const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n    const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n    let resWeek;\n    let resYear;\n    if (week < 1) {\n        resYear = getFullYear(date, isUTC) - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    }\n    else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n        resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n        resYear = getFullYear(date, isUTC) + 1;\n    }\n    else {\n        resYear = getFullYear(date, isUTC);\n        resWeek = week;\n    }\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\nfunction weeksInYear(year, dow, doy) {\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nconst defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nconst defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nconst defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nconst defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nconst defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nconst defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\nconst defaultOrdinal = '%d';\nconst defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\nconst defaultMonthsShortRegex = matchWord;\nconst defaultMonthsRegex = matchWord;\nclass Locale {\n    constructor(config) {\n        if (config) {\n            this.set(config);\n        }\n    }\n    set(config) {\n        let confKey;\n        for (confKey in config) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (!config.hasOwnProperty(confKey)) {\n                continue;\n            }\n            const prop = config[confKey];\n            const key = (isFunction(prop) ? confKey : `_${confKey}`);\n            this[key] = prop;\n        }\n        this._config = config;\n    }\n    calendar(key, date, now) {\n        const output = this._calendar[key] || this._calendar[\"sameElse\"];\n        return isFunction(output) ? output.call(null, date, now) : output;\n    }\n    longDateFormat(key) {\n        const format = this._longDateFormat[key];\n        const formatUpper = this._longDateFormat[key.toUpperCase()];\n        if (format || !formatUpper) {\n            return format;\n        }\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n        return this._longDateFormat[key];\n    }\n    get invalidDate() {\n        return this._invalidDate;\n    }\n    set invalidDate(val) {\n        this._invalidDate = val;\n    }\n    ordinal(num, token) {\n        return this._ordinal.replace('%d', num.toString(10));\n    }\n    preparse(str, format) {\n        return str;\n    }\n    getFullYear(date, isUTC = false) {\n        return getFullYear(date, isUTC);\n    }\n    postformat(str) {\n        return str;\n    }\n    relativeTime(num, withoutSuffix, str, isFuture) {\n        const output = this._relativeTime[str];\n        return (isFunction(output)) ?\n            output(num, withoutSuffix, str, isFuture) :\n            output.replace(/%d/i, num.toString(10));\n    }\n    pastFuture(diff, output) {\n        const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n    months(date, format, isUTC = false) {\n        if (!date) {\n            return isArray(this._months)\n                ? this._months\n                : this._months.standalone;\n        }\n        if (isArray(this._months)) {\n            return this._months[getMonth(date, isUTC)];\n        }\n        const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n            ? 'format'\n            : 'standalone';\n        return this._months[key][getMonth(date, isUTC)];\n    }\n    monthsShort(date, format, isUTC = false) {\n        if (!date) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort.standalone;\n        }\n        if (isArray(this._monthsShort)) {\n            return this._monthsShort[getMonth(date, isUTC)];\n        }\n        const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n        return this._monthsShort[key][getMonth(date, isUTC)];\n    }\n    monthsParse(monthName, format, strict) {\n        let date;\n        let regex;\n        if (this._monthsParseExact) {\n            return this.handleMonthStrictParse(monthName, format, strict);\n        }\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        let i;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            date = new Date(Date.UTC(2000, i));\n            if (strict && !this._longMonthsParse[i]) {\n                const _months = this.months(date, '', true).replace('.', '');\n                const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n                this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n                this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // testing the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            }\n            if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            }\n            if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n    monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this.computeMonthsParse();\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            }\n            return this._monthsRegex;\n        }\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n    monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this.computeMonthsParse();\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            }\n            return this._monthsShortRegex;\n        }\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n    /** Week */\n    week(date, isUTC) {\n        return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n    }\n    firstDayOfWeek() {\n        return this._week.dow;\n    }\n    firstDayOfYear() {\n        return this._week.doy;\n    }\n    weekdays(date, format, isUTC) {\n        if (!date) {\n            return isArray(this._weekdays)\n                ? this._weekdays\n                : this._weekdays.standalone;\n        }\n        if (isArray(this._weekdays)) {\n            return this._weekdays[getDay(date, isUTC)];\n        }\n        const _key = this._weekdays.isFormat.test(format)\n            ? 'format'\n            : 'standalone';\n        return this._weekdays[_key][getDay(date, isUTC)];\n    }\n    weekdaysMin(date, format, isUTC) {\n        return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n    }\n    weekdaysShort(date, format, isUTC) {\n        return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n    }\n    // proto.weekdaysParse  =        localeWeekdaysParse;\n    weekdaysParse(weekdayName, format, strict) {\n        let i;\n        let regex;\n        if (this._weekdaysParseExact) {\n            return this.handleWeekStrictParse(weekdayName, format, strict);\n        }\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            // fix: here is the issue\n            const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n                this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n                this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            if (!isArray(this._fullWeekdaysParse)\n                || !isArray(this._shortWeekdaysParse)\n                || !isArray(this._minWeekdaysParse)\n                || !isArray(this._weekdaysParse)) {\n                return;\n            }\n            // testing the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n    // proto.weekdaysRegex       =        weekdaysRegex;\n    weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            }\n            else {\n                return this._weekdaysRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = matchWord;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n    // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n    // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n    weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            }\n            else {\n                return this._weekdaysShortRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = matchWord;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n    weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            }\n            else {\n                return this._weekdaysMinRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = matchWord;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n    isPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return input.toLowerCase().charAt(0) === 'p';\n    }\n    meridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        }\n        return isLower ? 'am' : 'AM';\n    }\n    formatLongDate(key) {\n        this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n        const format = this._longDateFormat[key];\n        const formatUpper = this._longDateFormat[key.toUpperCase()];\n        if (format || !formatUpper) {\n            return format;\n        }\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (val) => {\n            return val.slice(1);\n        });\n        return this._longDateFormat[key];\n    }\n    handleMonthStrictParse(monthName, format, strict) {\n        const llc = monthName.toLocaleLowerCase();\n        let i;\n        let ii;\n        let mom;\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = new Date(2000, i);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n        if (strict) {\n            if (format === 'MMM') {\n                ii = this._shortMonthsParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            ii = this._longMonthsParse.indexOf(llc);\n            return ii !== -1 ? ii : null;\n        }\n        if (format === 'MMM') {\n            ii = this._shortMonthsParse.indexOf(llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = this._longMonthsParse.indexOf(llc);\n            return ii !== -1 ? ii : null;\n        }\n        ii = this._longMonthsParse.indexOf(llc);\n        if (ii !== -1) {\n            return ii;\n        }\n        ii = this._shortMonthsParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n    }\n    handleWeekStrictParse(weekdayName, format, strict) {\n        let ii;\n        const llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n            let i;\n            for (i = 0; i < 7; ++i) {\n                const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n                this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n            }\n        }\n        if (!isArray(this._weekdaysParse)\n            || !isArray(this._shortWeekdaysParse)\n            || !isArray(this._minWeekdaysParse)) {\n            return;\n        }\n        if (strict) {\n            if (format === 'dddd') {\n                ii = this._weekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else if (format === 'ddd') {\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else {\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n        else {\n            if (format === 'dddd') {\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else if (format === 'ddd') {\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else {\n                ii = this._minWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n    computeMonthsParse() {\n        const shortPieces = [];\n        const longPieces = [];\n        const mixedPieces = [];\n        let date;\n        let i;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            date = new Date(2000, i);\n            shortPieces.push(this.monthsShort(date, ''));\n            longPieces.push(this.months(date, ''));\n            mixedPieces.push(this.months(date, ''));\n            mixedPieces.push(this.monthsShort(date, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n        this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n        this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    }\n    computeWeekdaysParse() {\n        const minPieces = [];\n        const shortPieces = [];\n        const longPieces = [];\n        const mixedPieces = [];\n        let i;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            // let mom = createUTC([2000, 1]).day(i);\n            const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n            const minp = this.weekdaysMin(date);\n            const shortp = this.weekdaysShort(date);\n            const longp = this.weekdays(date);\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n        this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n        this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n        this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n        this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n    }\n}\nfunction cmpLenRev(a, b) {\n    return b.length - a.length;\n}\n\nconst defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n};\n\nconst defaultInvalidDate = 'Invalid date';\nconst defaultLocaleWeek = {\n    dow: 0,\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\nconst defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nconst defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n};\nconst baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    const len = Math.min(array1.length, array2.length);\n    const lengthDiff = Math.abs(array1.length - array2.length);\n    let diffs = 0;\n    let i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i])\n            || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\n// FORMATTING\nfunction initWeek() {\n    addFormatToken('w', ['ww', 2, false], 'wo', function (date, opts) {\n        return getWeek(date, opts.locale)\n            .toString(10);\n    });\n    addFormatToken('W', ['WW', 2, false], 'Wo', function (date) {\n        return getISOWeek(date)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n    // PRIORITIES\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n    // PARSING\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n        return config;\n    });\n    // export function getSetWeek (input) {\n    //   var week = this.localeData().week(this);\n    //   return input == null ? week : this.add((input - week) * 7, 'd');\n    // }\n}\nfunction setWeek(date, input, locale = getLocale()) {\n    const week = getWeek(date, locale);\n    return add(date, (input - week) * 7, 'day');\n}\nfunction getWeek(date, locale = getLocale(), isUTC) {\n    return locale.week(date, isUTC);\n}\n// export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\nfunction setISOWeek(date, input) {\n    const week = getISOWeek(date);\n    return add(date, (input - week) * 7, 'day');\n}\nfunction getISOWeek(date, isUTC) {\n    return weekOfYear(date, 1, 4, isUTC).week;\n}\n\n// FORMATTING\nfunction initWeekYear() {\n    addFormatToken(null, ['gg', 2, false], null, function (date, opts) {\n        // return this.weekYear() % 100;\n        return (getWeekYear(date, opts.locale) % 100).toString();\n    });\n    addFormatToken(null, ['GG', 2, false], null, function (date) {\n        // return this.isoWeekYear() % 100;\n        return (getISOWeekYear(date) % 100).toString();\n    });\n    addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n    addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n    addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n    addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\n    // ALIASES\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n    // PRIORITY\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n    // PARSING\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n        return config;\n    });\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = parseTwoDigitYear(input);\n        return config;\n    });\n}\nfunction addWeekYearFormatToken(token, getter) {\n    addFormatToken(null, [token, token.length, false], null, getter);\n}\nfunction _getWeekYearFormatCb(date, opts) {\n    return getWeekYear(date, opts.locale).toString();\n}\nfunction _getISOWeekYearFormatCb(date) {\n    return getISOWeekYear(date).toString();\n}\n// MOMENTS\nfunction getSetWeekYear(date, input, locale = getLocale(), isUTC) {\n    return getSetWeekYearHelper(date, input, \n    // this.week(),\n    getWeek(date, locale, isUTC), \n    // this.weekday(),\n    getLocaleDayOfWeek(date, locale, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC);\n}\nfunction getWeekYear(date, locale = getLocale(), isUTC) {\n    return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\nfunction getSetISOWeekYear(date, input, isUTC) {\n    return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\nfunction getISOWeekYear(date, isUTC) {\n    return weekOfYear(date, 1, 4, isUTC).year;\n}\nfunction getISOWeeksInYear(date, isUTC) {\n    return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\nfunction getWeeksInYear(date, isUTC, locale = getLocale()) {\n    return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\nfunction getSetWeekYearHelper(date, input, week, weekday, dow, doy, isUTC) {\n    if (!input) {\n        return getWeekYear(date, void 0, isUTC);\n    }\n    const weeksTarget = weeksInYear(input, dow, doy);\n    const _week = week > weeksTarget ? weeksTarget : week;\n    return setWeekAll(date, input, _week, weekday, dow, doy);\n}\nfunction setWeekAll(date, weekYear, week, weekday, dow, doy) {\n    const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    setFullYear(date, getFullYear(_date, true), true);\n    setMonth(date, getMonth(_date, true), true);\n    setDate(date, getDate(_date, true), true);\n    return date;\n}\n\n// todo: add support for timezones\nfunction initTimezone() {\n    // FORMATTING\n    addFormatToken('z', null, null, function (date, opts) {\n        return opts.isUTC ? 'UTC' : '';\n    });\n    addFormatToken('zz', null, null, function (date, opts) {\n        return opts.isUTC ? 'Coordinated Universal Time' : '';\n    });\n}\n// MOMENTS\nfunction getZoneAbbr(isUTC) {\n    return isUTC ? 'UTC' : '';\n}\nfunction getZoneName(isUTC) {\n    return isUTC ? 'Coordinated Universal Time' : '';\n}\n\nfunction initTimestamp() {\n    // FORMATTING\n    addFormatToken('X', null, null, function (date) {\n        return unix(date)\n            .toString(10);\n    });\n    addFormatToken('x', null, null, function (date) {\n        return date.valueOf()\n            .toString(10);\n    });\n    // PARSING\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n        return config;\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n        return config;\n    });\n}\n\nfunction initSecond() {\n    // FORMATTING\n    addFormatToken('s', ['ss', 2, false], null, function (date, opts) {\n        return getSeconds(date, opts.isUTC)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('second', 's');\n    // PRIORITY\n    addUnitPriority('second', 15);\n    // PARSING\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n}\n\nfunction initQuarter() {\n    // FORMATTING\n    addFormatToken('Q', null, 'Qo', function (date, opts) {\n        return getQuarter(date, opts.isUTC)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('quarter', 'Q');\n    // PRIORITY\n    addUnitPriority('quarter', 7);\n    // PARSING\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array, config) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n        return config;\n    });\n}\n// MOMENTS\nfunction getQuarter(date, isUTC = false) {\n    return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\nfunction setQuarter(date, quarter, isUTC) {\n    return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n// export function getSetQuarter(input) {\n//   return input == null\n//     ? Math.ceil((this.month() + 1) / 3)\n//     : this.month((input - 1) * 3 + this.month() % 3);\n// }\n\n// FORMATTING\nfunction addOffsetFormatToken(token, separator) {\n    addFormatToken(token, null, null, function (date, config) {\n        let offset = getUTCOffset(date, { _isUTC: config.isUTC, _offset: config.offset });\n        let sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\nfunction initOffset() {\n    addOffsetFormatToken('Z', ':');\n    addOffsetFormatToken('ZZ', '');\n    // PARSING\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n        return config;\n    });\n}\n// HELPERS\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\nfunction offsetFromString(matcher, str) {\n    const matches = (str || '').match(matcher);\n    if (matches === null) {\n        return null;\n    }\n    const chunk = matches[matches.length - 1];\n    const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n    const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n    const _min = parts[0] === '+' ? minutes : -minutes;\n    return minutes === 0 ? 0 : _min;\n}\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, date, config = {}) {\n    if (!config._isUTC) {\n        return input;\n    }\n    const res = cloneDate(date);\n    // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n    const offsetDiff = (config._offset || 0) * 60000;\n    const diff = input.valueOf() - res.valueOf() + offsetDiff;\n    // Use low-level api, because this fn is low-level api.\n    res.setTime(res.valueOf() + diff);\n    // todo: add timezone handling\n    // hooks.updateOffset(res, false);\n    return res;\n}\nfunction getDateOffset(date) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n// HOOKS\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n// MOMENTS\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getUTCOffset(date, config = {}) {\n    const _offset = config._offset || 0;\n    return config._isUTC ? _offset : getDateOffset(date);\n}\nfunction setUTCOffset(date, input, keepLocalTime, keepMinutes, config = {}) {\n    const offset = config._offset || 0;\n    let localAdjust;\n    let _input = input;\n    let _date = date;\n    if (isString(_input)) {\n        _input = offsetFromString(matchShortOffset, _input);\n        if (_input === null) {\n            return _date;\n        }\n    }\n    else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n        _input = _input * 60;\n    }\n    if (!config._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(_date);\n    }\n    config._offset = _input;\n    config._isUTC = true;\n    if (localAdjust != null) {\n        _date = add(_date, localAdjust, 'minutes');\n    }\n    if (offset !== _input) {\n        if (!keepLocalTime || config._changeInProgress) {\n            _date = add(_date, _input - offset, 'minutes', config._isUTC);\n            // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n        }\n        else if (!config._changeInProgress) {\n            config._changeInProgress = true;\n            // todo: add timezone handling\n            // hooks.updateOffset(this, true);\n            config._changeInProgress = null;\n        }\n    }\n    return _date;\n}\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\nfunction setOffsetToUTC(date, keepLocalTime) {\n    return setUTCOffset(date, 0, keepLocalTime);\n}\nfunction isDaylightSavingTime(date) {\n    return (getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0))\n        || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5)));\n}\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\nfunction setOffsetToParsedOffset(date, input, config = {}) {\n    if (config._tzm != null) {\n        return setUTCOffset(date, config._tzm, false, true, config);\n    }\n    if (isString(input)) {\n        const tZone = offsetFromString(matchOffset, input);\n        if (tZone != null) {\n            return setUTCOffset(date, tZone, false, false, config);\n        }\n        return setUTCOffset(date, 0, true, false, config);\n    }\n    return date;\n}\nfunction hasAlignedHourOffset(date, input) {\n    const _input = input ? getUTCOffset(input, { _isUTC: false }) : 0;\n    return (getUTCOffset(date) - _input) % 60 === 0;\n}\n// DEPRECATED\n/*export function isDaylightSavingTimeShifted() {\n  if (!isUndefined(this._isDSTShifted)) {\n    return this._isDSTShifted;\n  }\n\n  const c = {};\n\n  copyConfig(c, this);\n  c = prepareConfig(c);\n\n  if (c._a) {\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n    this._isDSTShifted = this.isValid() &&\n      compareArrays(c._a, other.toArray()) > 0;\n  } else {\n    this._isDSTShifted = false;\n  }\n\n  return this._isDSTShifted;\n}*/\n// in Khronos\n/*export function isLocal() {\n  return this.isValid() ? !this._isUTC : false;\n}\n\nexport function isUtcOffset() {\n  return this.isValid() ? this._isUTC : false;\n}\n\nexport function isUtc() {\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}*/\n\nfunction initMinute() {\n    // FORMATTING\n    addFormatToken('m', ['mm', 2, false], null, function (date, opts) {\n        return getMinutes(date, opts.isUTC)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('minute', 'm');\n    // PRIORITY\n    addUnitPriority('minute', 14);\n    // PARSING\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n}\n\n// FORMATTING\nfunction initMillisecond() {\n    addFormatToken('S', null, null, function (date, opts) {\n        return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n    });\n    addFormatToken(null, ['SS', 2, false], null, function (date, opts) {\n        return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n    });\n    addFormatToken(null, ['SSS', 3, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC)).toString(10);\n    });\n    addFormatToken(null, ['SSSS', 4, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n    });\n    addFormatToken(null, ['SSSSS', 5, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n    });\n    addFormatToken(null, ['SSSSSS', 6, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n    });\n    addFormatToken(null, ['SSSSSSS', 7, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n    });\n    addFormatToken(null, ['SSSSSSSS', 8, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n    });\n    addFormatToken(null, ['SSSSSSSSS', 9, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n    });\n    // ALIASES\n    addUnitAlias('millisecond', 'ms');\n    // PRIORITY\n    addUnitPriority('millisecond', 16);\n    // PARSING\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n    let token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n    function parseMs(input, array, config) {\n        array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n        return config;\n    }\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n}\n\nfunction initHour() {\n    // FORMATTING\n    function hFormat(date, isUTC) {\n        return getHours(date, isUTC) % 12 || 12;\n    }\n    function kFormat(date, isUTC) {\n        return getHours(date, isUTC) || 24;\n    }\n    addFormatToken('H', ['HH', 2, false], null, function (date, opts) {\n        return getHours(date, opts.isUTC)\n            .toString(10);\n    });\n    addFormatToken('h', ['hh', 2, false], null, function (date, opts) {\n        return hFormat(date, opts.isUTC)\n            .toString(10);\n    });\n    addFormatToken('k', ['kk', 2, false], null, function (date, opts) {\n        return kFormat(date, opts.isUTC)\n            .toString(10);\n    });\n    addFormatToken('hmm', null, null, function (date, opts) {\n        const _h = hFormat(date, opts.isUTC);\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        return `${_h}${_mm}`;\n    });\n    addFormatToken('hmmss', null, null, function (date, opts) {\n        const _h = hFormat(date, opts.isUTC);\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n        return `${_h}${_mm}${_ss}`;\n    });\n    addFormatToken('Hmm', null, null, function (date, opts) {\n        const _H = getHours(date, opts.isUTC);\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        return `${_H}${_mm}`;\n    });\n    addFormatToken('Hmmss', null, null, function (date, opts) {\n        const _H = getHours(date, opts.isUTC);\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n        return `${_H}${_mm}${_ss}`;\n    });\n    function meridiem(token, lowercase) {\n        addFormatToken(token, null, null, function (date, opts) {\n            return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n        });\n    }\n    meridiem('a', true);\n    meridiem('A', false);\n    // ALIASES\n    addUnitAlias('hour', 'h');\n    // PRIORITY\n    addUnitPriority('hour', 13);\n    // PARSING\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        const kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n        return config;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n        return config;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n        return config;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        const pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n        return config;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        const pos1 = input.length - 4;\n        const pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n        return config;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        const pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        return config;\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        const pos1 = input.length - 4;\n        const pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        return config;\n    });\n}\n\n// internal storage for locale config files\nconst locales = {};\nconst localeFamilies = {};\nlet globalLocale;\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    let next;\n    let locale;\n    let i = 0;\n    while (i < names.length) {\n        const split = normalizeLocale(names[i]).split('-');\n        let j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                // the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\nfunction mergeConfigs(parentConfig, childConfig) {\n    const res = Object.assign({}, parentConfig);\n    for (const childProp in childConfig) {\n        if (!hasOwnProp(childConfig, childProp)) {\n            continue;\n        }\n        if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n            res[childProp] = {};\n            Object.assign(res[childProp], parentConfig[childProp]);\n            Object.assign(res[childProp], childConfig[childProp]);\n        }\n        else if (childConfig[childProp] != null) {\n            res[childProp] = childConfig[childProp];\n        }\n        else {\n            delete res[childProp];\n        }\n    }\n    for (const parentProp in parentConfig) {\n        if (hasOwnProp(parentConfig, parentProp) &&\n            !hasOwnProp(childConfig, parentProp) &&\n            isObject(parentConfig[parentProp])) {\n            // make sure changes to properties don't modify parent config\n            res[parentProp] = Object.assign({}, res[parentProp]);\n        }\n    }\n    return res;\n}\nfunction loadLocale(name) {\n    // no way!\n    /* var oldLocale = null;\n     // TODO: Find a better way to register and load all the locales in Node\n     if (!locales[name] && (typeof module !== 'undefined') &&\n       module && module.exports) {\n       try {\n         oldLocale = globalLocale._abbr;\n         var aliasedRequire = require;\n         aliasedRequire('./locale/' + name);\n         getSetGlobalLocale(oldLocale);\n       } catch (e) {}\n     }*/\n    if (!locales[name]) {\n        console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\n        // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n    }\n    return locales[name];\n}\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale(key, values) {\n    let data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else if (isString(key)) {\n            data = defineLocale(key, values);\n        }\n        if (data) {\n            globalLocale = data;\n        }\n    }\n    return globalLocale && globalLocale._abbr;\n}\nfunction defineLocale(name, config) {\n    if (config === null) {\n        // useful for testing\n        delete locales[name];\n        globalLocale = getLocale('en');\n        return null;\n    }\n    if (!config) {\n        return;\n    }\n    let parentConfig = baseConfig;\n    config.abbr = name;\n    if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n            parentConfig = locales[config.parentLocale]._config;\n        }\n        else {\n            if (!localeFamilies[config.parentLocale]) {\n                localeFamilies[config.parentLocale] = [];\n            }\n            localeFamilies[config.parentLocale].push({ name, config });\n            return null;\n        }\n    }\n    locales[name] = new Locale(mergeConfigs(parentConfig, config));\n    if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n            defineLocale(x.name, x.config);\n        });\n    }\n    // backwards compat for now: also set the locale\n    // make sure we set the locale AFTER all child locales have been\n    // created, so we won't end up with the child locale set.\n    getSetGlobalLocale(name);\n    return locales[name];\n}\nfunction updateLocale(name, config) {\n    let _config = config;\n    if (_config != null) {\n        let parentConfig = baseConfig;\n        // MERGE\n        const tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n            parentConfig = tmpLocale._config;\n        }\n        _config = mergeConfigs(parentConfig, _config);\n        const locale = new Locale(_config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    }\n    else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            }\n            else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n// returns locale data\nfunction getLocale(key) {\n    setDefaultLocale();\n    if (!key) {\n        return globalLocale;\n    }\n    // let locale;\n    const _key = isArray(key) ? key : [key];\n    return chooseLocale(_key);\n}\nfunction listLocales() {\n    return Object.keys(locales);\n}\nfunction setDefaultLocale() {\n    if (locales[`en`]) {\n        return undefined;\n    }\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal(num) {\n            const b = num % 10;\n            const output = toInt((num % 100) / 10) === 1\n                ? 'th'\n                : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n            return num + output;\n        }\n    });\n    initWeek();\n    initWeekYear();\n    initYear();\n    initTimezone();\n    initTimestamp();\n    initSecond();\n    initQuarter();\n    initOffset();\n    initMonth();\n    initMinute();\n    initMillisecond();\n    initHour();\n    initDayOfYear();\n    initDayOfWeek();\n    initDayOfMonth();\n}\n\nconst ordering = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\nconst orderingHash = ordering.reduce((mem, order) => {\n    mem[order] = true;\n    return mem;\n}, {});\nfunction isDurationValid(duration) {\n    const durationKeys = Object.keys(duration);\n    if (durationKeys\n        .some((key) => {\n        return (key in orderingHash)\n            && duration[key] === null\n            || isNaN(duration[key]);\n    })) {\n        return false;\n    }\n    // for (let key in duration) {\n    //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n    //     return false;\n    //   }\n    // }\n    let unitHasDecimal = false;\n    for (let i = 0; i < ordering.length; ++i) {\n        if (duration[ordering[i]]) {\n            // only allow non-integers for smallest unit\n            if (unitHasDecimal) {\n                return false;\n            }\n            if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n    return true;\n}\n// export function isValid() {\n//   return this._isValid;\n// }\n//\n// export function createInvalid(): Duration {\n//   return createDuration(NaN);\n// }\n\nfunction absCeil(number) {\n    return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n\nfunction bubble(dur) {\n    let milliseconds = dur._milliseconds;\n    let days = dur._days;\n    let months = dur._months;\n    const data = dur._data;\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n        (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n    const seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    const minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    const hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24);\n    // convert days to months\n    const monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n    // 12 months -> 1 year\n    const years = absFloor(months / 12);\n    months %= 12;\n    data.day = days;\n    data.month = months;\n    data.year = years;\n    return dur;\n}\nfunction daysToMonths(day) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return day * 4800 / 146097;\n}\nfunction monthsToDays(month) {\n    // the reverse of daysToMonths\n    return month * 146097 / 4800;\n}\n\nlet round = Math.round;\nconst thresholds = {\n    ss: 44,\n    s: 45,\n    m: 45,\n    h: 22,\n    d: 26,\n    M: 11 // months to year\n};\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(str, num, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n    const duration = createDuration(posNegDuration).abs();\n    const seconds = round(duration.as('s'));\n    const minutes = round(duration.as('m'));\n    const hours = round(duration.as('h'));\n    const days = round(duration.as('d'));\n    const months = round(duration.as('M'));\n    const years = round(duration.as('y'));\n    const a = seconds <= thresholds[\"ss\"] && ['s', seconds] ||\n        seconds < thresholds[\"s\"] && ['ss', seconds] ||\n        minutes <= 1 && ['m'] ||\n        minutes < thresholds[\"m\"] && ['mm', minutes] ||\n        hours <= 1 && ['h'] ||\n        hours < thresholds[\"h\"] && ['hh', hours] ||\n        days <= 1 && ['d'] ||\n        days < thresholds[\"d\"] && ['dd', days] ||\n        months <= 1 && ['M'] ||\n        months < thresholds[\"M\"] && ['MM', months] ||\n        years <= 1 && ['y'] || ['yy', years];\n    const b = [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\n    // a[2] = withoutSuffix;\n    // a[3] = +posNegDuration > 0;\n    // a[4] = locale;\n    return substituteTimeAgo.apply(null, b);\n}\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof (roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds[\"ss\"] = limit - 1;\n    }\n    return true;\n}\n// export function humanize(withSuffix) {\n//   if (!this.isValid()) {\n//     return this.localeData().invalidDate();\n//   }\n//\n//   const locale = this.localeData();\n//   let output = relativeTime(this, !withSuffix, locale);\n//\n//   if (withSuffix) {\n//     output = locale.pastFuture(+this, output);\n//   }\n//\n//   return locale.postformat(output);\n// }\n\nclass Duration {\n    constructor(duration, config = {}) {\n        this._data = {};\n        this._locale = getLocale();\n        this._locale = config && config._locale || getLocale();\n        // const normalizedInput = normalizeObjectUnits(duration);\n        const normalizedInput = duration;\n        const years = normalizedInput.year || 0;\n        const quarters = normalizedInput.quarter || 0;\n        const months = normalizedInput.month || 0;\n        const weeks = normalizedInput.week || 0;\n        const days = normalizedInput.day || 0;\n        const hours = normalizedInput.hours || 0;\n        const minutes = normalizedInput.minutes || 0;\n        const seconds = normalizedInput.seconds || 0;\n        const milliseconds = normalizedInput.milliseconds || 0;\n        this._isValid = isDurationValid(normalizedInput);\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1000 +\n            minutes * 60 * 1000 + // 1000 * 60\n            hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n        // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n        // this._data = {};\n        // this._locale = getLocale();\n        // this._bubble();\n        return bubble(this);\n    }\n    isValid() {\n        return this._isValid;\n    }\n    humanize(withSuffix) {\n        // throw new Error(`TODO: implement`);\n        if (!this.isValid()) {\n            return this.localeData().invalidDate;\n        }\n        const locale = this.localeData();\n        let output = relativeTime(this, !withSuffix, locale);\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n        return locale.postformat(output);\n    }\n    localeData() {\n        return this._locale;\n    }\n    locale(localeKey) {\n        if (!localeKey) {\n            return this._locale._abbr;\n        }\n        this._locale = getLocale(localeKey) || this._locale;\n        return this;\n    }\n    abs() {\n        const mathAbs = Math.abs;\n        const data = this._data;\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.month = mathAbs(data.month);\n        data.year = mathAbs(data.year);\n        return this;\n    }\n    as(_units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        let days;\n        let months;\n        const milliseconds = this._milliseconds;\n        const units = normalizeUnits(_units);\n        if (units === 'month' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        }\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week':\n                return days / 7 + milliseconds / 6048e5;\n            case 'day':\n                return days + milliseconds / 864e5;\n            case 'hours':\n                return days * 24 + milliseconds / 36e5;\n            case 'minutes':\n                return days * 1440 + milliseconds / 6e4;\n            case 'seconds':\n                return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'milliseconds':\n                return Math.floor(days * 864e5) + milliseconds;\n            default:\n                throw new Error(`Unknown unit ${units}`);\n        }\n    }\n    valueOf() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6);\n    }\n}\nfunction isDuration(obj) {\n    return obj instanceof Duration;\n}\n\nfunction isValid(config) {\n    if (config._isValid == null) {\n        const flags = getParsingFlags(config);\n        const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        let isNowValid = !isNaN(config._d && config._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.weekdayMismatch &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n        if (config._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n        if (Object.isFrozen == null || !Object.isFrozen(config)) {\n            config._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return config._isValid;\n}\nfunction createInvalid(config, flags) {\n    config._d = new Date(NaN);\n    Object.assign(getParsingFlags(config), flags || { userInvalidated: true });\n    return config;\n}\nfunction markInvalid(config) {\n    config._isValid = false;\n    return config;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\nconst isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/, true],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/, true],\n    ['YYYYMMDD', /\\d{8}/, true],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/, true],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/, true]\n];\n// iso time formats and regexes\nconst isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\nconst obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n};\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n// date from iso format\nfunction configFromISO(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    const input = config._i;\n    const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n    let allowTime;\n    let dateFormat;\n    let timeFormat;\n    let tzFormat;\n    if (!match) {\n        config._isValid = false;\n        return config;\n    }\n    // getParsingFlags(config).iso = true;\n    let i;\n    let l;\n    for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n            dateFormat = isoDates[i][0];\n            allowTime = isoDates[i][2] !== false;\n            break;\n        }\n    }\n    if (dateFormat == null) {\n        config._isValid = false;\n        return config;\n    }\n    if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n            if (isoTimes[i][1].exec(match[3])) {\n                // match[2] should be 'T' or space\n                timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                break;\n            }\n        }\n        if (timeFormat == null) {\n            config._isValid = false;\n            return config;\n        }\n    }\n    if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return config;\n    }\n    if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n            tzFormat = 'Z';\n        }\n        else {\n            config._isValid = false;\n            return config;\n        }\n    }\n    config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n    return configFromStringAndFormat(config);\n}\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    const result = [\n        untruncateYear(yearStr),\n        defaultLocaleMonthsShort.indexOf(monthStr),\n        parseInt(dayStr, 10),\n        parseInt(hourStr, 10),\n        parseInt(minuteStr, 10)\n    ];\n    if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n    }\n    return result;\n}\nfunction untruncateYear(yearStr) {\n    const year = parseInt(yearStr, 10);\n    return year <= 49 ? year + 2000 : year;\n}\nfunction preprocessRFC2822(str) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return str\n        .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n        .replace(/(\\s\\s+)/g, ' ').trim();\n}\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n        const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n        if (weekdayProvided !== weekdayActual) {\n            getParsingFlags(config).weekdayMismatch = true;\n            config._isValid = false;\n            return false;\n        }\n    }\n    return true;\n}\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n        return obsOffsets[obsOffset];\n    }\n    else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n    }\n    else {\n        const hm = parseInt(numOffset, 10);\n        const m = hm % 100;\n        const h = (hm - m) / 100;\n        return h * 60 + m;\n    }\n}\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    const match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (!match) {\n        return markInvalid(config);\n    }\n    const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n    if (!checkWeekday(match[1], parsedArray, config)) {\n        return config;\n    }\n    config._a = parsedArray;\n    config._tzm = calculateOffset(match[8], match[9], match[10]);\n    config._d = createUTCDate.apply(null, config._a);\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    getParsingFlags(config).rfc2822 = true;\n    return config;\n}\n// date from iso format or fallback\nfunction configFromString(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    const matched = aspNetJsonRegex.exec(config._i);\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return config;\n    }\n    // todo: update logic processing\n    // isISO -> configFromISO\n    // isRFC -> configFromRFC\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    }\n    else {\n        return config;\n    }\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    }\n    else {\n        return config;\n    }\n    // Final attempt, use Input Fallback\n    // hooks.createFromInputFallback(config);\n    return createInvalid(config);\n}\n// hooks.createFromInputFallback = deprecate(\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n//     function (config) {\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n//     }\n// );\n\n// moment.js\n// version : 2.18.1\n// authors : Tim Wood, Iskren Chernev, Moment.js contributors\n// license : MIT\n// momentjs.com\nfunction formatDate(date, format, locale, isUTC, offset = 0) {\n    const _locale = getLocale(locale || 'en');\n    if (!_locale) {\n        throw new Error(`Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`);\n    }\n    const _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n    const output = formatMoment(date, _format, _locale, isUTC, offset);\n    if (!output) {\n        return output;\n    }\n    return _locale.postformat(output);\n}\n// format date using native date object\nfunction formatMoment(date, _format, locale, isUTC, offset = 0) {\n    if (!isDateValid(date)) {\n        return locale.invalidDate;\n    }\n    const format = expandFormat(_format, locale);\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](date, locale, isUTC, offset);\n}\nfunction expandFormat(_format, locale) {\n    let format = _format;\n    let i = 5;\n    const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n    const replaceLongDateFormatTokens = (input) => {\n        return locale.formatLongDate(input) || input;\n    };\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n    return format;\n}\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    const nowValue = new Date();\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray(config) {\n    const input = [];\n    let i;\n    let date;\n    let yearToUse;\n    if (config._d) {\n        return config;\n    }\n    const currentDate = currentDateArray(config);\n    // compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n    // if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n        date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n        config._a[MINUTE] === 0 &&\n        config._a[SECOND] === 0 &&\n        config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n    // eslint-disable-next-line prefer-spread\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    const expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n    // check for mismatching day of week\n    if (config._w && typeof config._w[\"d\"] !== 'undefined' && config._w[\"d\"] !== expectedWeekday) {\n        getParsingFlags(config).weekdayMismatch = true;\n    }\n    return config;\n}\nfunction dayOfYearFromWeekInfo(config) {\n    let weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    const w = config._w;\n    if (w[\"GG\"] != null || w[\"W\"] != null || w[\"E\"] != null) {\n        dow = 1;\n        doy = 4;\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w[\"GG\"], config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n        week = defaults(w[\"W\"], 1);\n        weekday = defaults(w[\"E\"], 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    }\n    else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n        const curWeek = weekOfYear(new Date(), dow, doy);\n        weekYear = defaults(w[\"gg\"], config._a[YEAR], curWeek.year);\n        // Default to current week.\n        week = defaults(w[\"w\"], curWeek.week);\n        if (w[\"d\"] != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w[\"d\"];\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        }\n        else if (w[\"e\"] != null) {\n            // local weekday -- counting starts from beginning of week\n            weekday = w[\"e\"] + dow;\n            if (w[\"e\"] < 0 || w[\"e\"] > 6) {\n                weekdayOverflow = true;\n            }\n        }\n        else {\n            // default to beginning of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    }\n    else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    }\n    else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n    return config;\n}\n\nfunction checkOverflow(config) {\n    let overflow;\n    const a = config._a;\n    if (a && getParsingFlags(config).overflow === -2) {\n        // todo: fix this sh*t\n        overflow =\n            a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\n                a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                    a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                        a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\n                            a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\n                                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                                    -1;\n        if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n        getParsingFlags(config).overflow = overflow;\n    }\n    return config;\n}\n\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\nconst ISO_8601 = 'ISO_8601';\n// constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\nconst RFC_2822 = 'RFC_2822';\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === ISO_8601) {\n        return configFromISO(config);\n    }\n    if (config._f === RFC_2822) {\n        return configFromRFC2822(config);\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n    if (isArray(config._f) || (!config._i && config._i !== 0)) {\n        return config;\n    }\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    let input = config._i.toString();\n    let totalParsedInputLength = 0;\n    const inputLength = input.length;\n    const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n    let i;\n    let token;\n    let parsedInput;\n    let skipped;\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n        if (parsedInput) {\n            skipped = input.substr(0, input.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n    if (input.length > 0) {\n        getParsingFlags(config).unusedInput.push(input);\n    }\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = void 0;\n    }\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    return checkOverflow(config);\n}\nfunction meridiemFixWrap(locale, _hour, meridiem) {\n    let hour = _hour;\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    }\n    if (locale.isPM == null) {\n        // this is not supposed to happen\n        return hour;\n    }\n    // Fallback\n    const isPm = locale.isPM(meridiem);\n    if (isPm && hour < 12) {\n        hour += 12;\n    }\n    if (!isPm && hour === 12) {\n        hour = 0;\n    }\n    return hour;\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    let tempConfig;\n    let bestMoment;\n    let scoreToBeat;\n    let currentScore;\n    if (!config._f || config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        return createInvalid(config);\n    }\n    let i;\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = Object.assign({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n        // or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n        getParsingFlags(tempConfig).score = currentScore;\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n    return Object.assign(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return config;\n    }\n    const input = config._i;\n    if (isObject(input)) {\n        const i = normalizeObjectUnits(input);\n        config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\n            // todo: obsolete -> remove it\n            .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n    }\n    return configFromArray(config);\n}\n\nfunction createFromConfig(config) {\n    const res = checkOverflow(prepareConfig(config));\n    // todo: remove, in moment.js it's never called cuz of moment constructor\n    res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n    if (!isValid(Object.assign({}, res, { _isValid: null }))) {\n        res._d = new Date(NaN);\n    }\n    // todo: update offset\n    /*if (res._nextDay) {\n      // Adding is smart enough around DST\n      res._d = add(res._d, 1, 'day');\n      res._nextDay = undefined;\n    }*/\n    return res;\n}\nfunction prepareConfig(config) {\n    let input = config._i;\n    const format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid(config, { nullInput: true });\n    }\n    if (isString(input)) {\n        config._i = input = config._locale.preparse(input, format);\n    }\n    if (isDate(input)) {\n        config._d = cloneDate(input);\n        return config;\n    }\n    // todo: add check for recursion\n    if (isArray(format)) {\n        configFromStringAndArray(config);\n    }\n    else if (format) {\n        configFromStringAndFormat(config);\n    }\n    else {\n        configFromInput(config);\n    }\n    if (!isValid(config)) {\n        config._d = null;\n    }\n    return config;\n}\nfunction configFromInput(config) {\n    const input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date();\n    }\n    else if (isDate(input)) {\n        config._d = cloneDate(input);\n    }\n    else if (isString(input)) {\n        configFromString(config);\n    }\n    else if (isArray(input) && input.length) {\n        const _arr = input.slice(0);\n        config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n        configFromArray(config);\n    }\n    else if (isObject(input)) {\n        configFromObject(config);\n    }\n    else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    }\n    else {\n        //   hooks.createFromInputFallback(config);\n        return createInvalid(config);\n    }\n    return config;\n}\nfunction createLocalOrUTC(input, format, localeKey, strict, isUTC) {\n    const config = {};\n    let _input = input;\n    // params switch -> skip; testing it well\n    // if (localeKey === true || localeKey === false) {\n    //     strict = localeKey;\n    //     localeKey = undefined;\n    // }\n    // todo: fail fast and return not valid date\n    if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\n        _input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    // config._isAMomentObject = true;\n    config._useUTC = config._isUTC = isUTC;\n    config._l = localeKey;\n    config._i = _input;\n    config._f = format;\n    config._strict = strict;\n    return createFromConfig(config);\n}\n\nfunction parseDate(input, format, localeKey, strict, isUTC) {\n    if (isDate(input)) {\n        return input;\n    }\n    const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n    return config._d;\n}\nfunction utcAsLocal(date) {\n    if (!(date instanceof Date)) {\n        return null;\n    }\n    return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n}\n\nfunction absRound(num) {\n    return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n\nfunction isAfter(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() > date2.valueOf();\n    }\n    return date2.valueOf() < startOf(date1, units).valueOf();\n}\nfunction isBefore(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() < date2.valueOf();\n    }\n    return endOf(date1, units).valueOf() < date2.valueOf();\n}\nfunction isDisabledDay(date, daysDisabled) {\n    if (typeof daysDisabled === 'undefined' || !daysDisabled || !daysDisabled.length) {\n        return false;\n    }\n    return daysDisabled.some((day) => day === date.getDay());\n}\nfunction isBetween(date, from, to, units, inclusivity = '()') {\n    const leftBound = inclusivity[0] === '('\n        ? isAfter(date, from, units)\n        : !isBefore(date, from, units);\n    const rightBound = inclusivity[1] === ')'\n        ? isBefore(date, to, units)\n        : !isAfter(date, to, units);\n    return leftBound && rightBound;\n}\nfunction isSame(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() === date2.valueOf();\n    }\n    const inputMs = date2.valueOf();\n    return (startOf(date1, units).valueOf() <= inputMs &&\n        inputMs <= endOf(date1, units).valueOf());\n}\nfunction isSameDay(date1, date2) {\n    return (date1.getDay() == date2.getDay());\n}\nfunction isSameOrAfter(date1, date2, units) {\n    return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\nfunction isSameOrBefore(date1, date2, units) {\n    return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n\n// ASP.NET json date format regex\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\nfunction createDuration(input, key, config = {}) {\n    const duration = convertDuration(input, key);\n    // matching against regexp is expensive, do it on demand\n    return new Duration(duration, config);\n}\nfunction convertDuration(input, key) {\n    // checks for null or undefined\n    if (input == null) {\n        return {};\n    }\n    if (isDuration(input)) {\n        return {\n            milliseconds: input._milliseconds,\n            day: input._days,\n            month: input._months\n        };\n    }\n    if (isNumber(input)) {\n        // duration = {};\n        return key ? { [key]: input } : { milliseconds: input };\n    }\n    if (isString(input)) {\n        let match = aspNetRegex.exec(input);\n        if (match) {\n            const sign = (match[1] === '-') ? -1 : 1;\n            return {\n                year: 0,\n                day: toInt(match[DATE]) * sign,\n                hours: toInt(match[HOUR]) * sign,\n                minutes: toInt(match[MINUTE]) * sign,\n                seconds: toInt(match[SECOND]) * sign,\n                // the millisecond decimal point is included in the match\n                milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n            };\n        }\n        match = isoRegex.exec(input);\n        if (match) {\n            const sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            return {\n                year: parseIso(match[2], sign),\n                month: parseIso(match[3], sign),\n                week: parseIso(match[4], sign),\n                day: parseIso(match[5], sign),\n                hours: parseIso(match[6], sign),\n                minutes: parseIso(match[7], sign),\n                seconds: parseIso(match[8], sign)\n            };\n        }\n    }\n    if (isObject(input) && ('from' in input || 'to' in input)) {\n        const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n        return {\n            milliseconds: diffRes.milliseconds,\n            month: diffRes.months\n        };\n    }\n    return input;\n}\n// createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\nfunction parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    const res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\nfunction positiveMomentsDifference(base, other) {\n    const res = { milliseconds: 0, months: 0 };\n    res.months = getMonth(other) - getMonth(base) +\n        (getFullYear(other) - getFullYear(base)) * 12;\n    const _basePlus = add(cloneDate(base), res.months, 'month');\n    if (isAfter(_basePlus, other)) {\n        --res.months;\n    }\n    res.milliseconds = +other - +(add(cloneDate(base), res.months, 'month'));\n    return res;\n}\nfunction momentsDifference(base, other) {\n    if (!(isDateValid(base) && isDateValid(other))) {\n        return { milliseconds: 0, months: 0 };\n    }\n    let res;\n    const _other = cloneWithOffset(other, base, { _offset: base.getTimezoneOffset() });\n    if (isBefore(base, _other)) {\n        res = positiveMomentsDifference(base, _other);\n    }\n    else {\n        res = positiveMomentsDifference(_other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n    return res;\n}\n\nfunction add(date, val, period, isUTC) {\n    const dur = createDuration(val, period);\n    return addSubtract(date, dur, 1, isUTC);\n}\nfunction subtract(date, val, period, isUTC) {\n    const dur = createDuration(val, period);\n    return addSubtract(date, dur, -1, isUTC);\n}\nfunction addSubtract(date, duration, isAdding, isUTC) {\n    const milliseconds = duration._milliseconds;\n    const days = absRound(duration._days);\n    const months = absRound(duration._months);\n    // todo: add timezones support\n    // const _updateOffset = updateOffset == null ? true : updateOffset;\n    if (months) {\n        setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n    }\n    if (days) {\n        setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n    }\n    if (milliseconds) {\n        setTime(date, getTime(date) + milliseconds * isAdding);\n    }\n    return cloneDate(date);\n    // todo: add timezones support\n    // if (_updateOffset) {\n    //   hooks.updateOffset(date, days || months);\n    // }\n}\n\nfunction initDayOfWeek() {\n    // FORMATTING\n    addFormatToken('d', null, 'do', function (date, opts) {\n        return getDay(date, opts.isUTC)\n            .toString(10);\n    });\n    addFormatToken('dd', null, null, function (date, opts) {\n        return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n    });\n    addFormatToken('ddd', null, null, function (date, opts) {\n        return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n    });\n    addFormatToken('dddd', null, null, function (date, opts) {\n        return opts.locale.weekdays(date, opts.format, opts.isUTC);\n    });\n    addFormatToken('e', null, null, function (date, opts) {\n        return getLocaleDayOfWeek(date, opts.locale, opts.isUTC)\n            .toString(10);\n        // return getDay(date, opts.isUTC).toString(10);\n    });\n    addFormatToken('E', null, null, function (date, opts) {\n        return getISODayOfWeek(date, opts.isUTC)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n    // PARSING\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        const weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week[\"d\"] = weekday;\n        }\n        else {\n            getParsingFlags(config).invalidWeekday = !!input;\n        }\n        return config;\n    });\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n        return config;\n    });\n}\n// HELPERS\nfunction parseWeekday(input, locale) {\n    if (!isString(input)) {\n        return input;\n    }\n    const _num = parseInt(input, 10);\n    if (!isNaN(_num)) {\n        return _num;\n    }\n    const _weekDay = locale.weekdaysParse(input);\n    if (isNumber(_weekDay)) {\n        return _weekDay;\n    }\n    return null;\n}\nfunction parseIsoWeekday(input, locale = getLocale()) {\n    if (isString(input)) {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNumber(input) && isNaN(input) ? null : input;\n}\n// MOMENTS\nfunction getSetDayOfWeek(date, input, opts) {\n    if (!input) {\n        return getDayOfWeek(date, opts.isUTC);\n    }\n    return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\nfunction setDayOfWeek(date, input, locale = getLocale(), isUTC) {\n    const day = getDay(date, isUTC);\n    const _input = parseWeekday(input, locale);\n    return add(date, _input - day, 'day');\n}\nfunction getDayOfWeek(date, isUTC) {\n    return getDay(date, isUTC);\n}\n/********************************************/\n// todo: utc\n// getSetLocaleDayOfWeek\nfunction getLocaleDayOfWeek(date, locale = getLocale(), isUTC) {\n    return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\nfunction setLocaleDayOfWeek(date, input, opts = {}) {\n    const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n    return add(date, input - weekday, 'day');\n}\n// getSetISODayOfWeek\nfunction getISODayOfWeek(date, isUTC) {\n    return getDay(date, isUTC) || 7;\n}\nfunction setISODayOfWeek(date, input, opts = {}) {\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n    const weekday = parseIsoWeekday(input, opts.locale);\n    return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\nconst symbolMap$1 = {\n    1: '١',\n    2: '٢',\n    3: '٣',\n    4: '٤',\n    5: '٥',\n    6: '٦',\n    7: '٧',\n    8: '٨',\n    9: '٩',\n    0: '٠'\n};\nconst numberMap$1 = {\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    '٠': '0'\n};\nconst pluralForm = function (num) {\n    return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\nconst plurals = {\n    s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n    m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n    h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n    d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n    M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n    y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\nconst pluralize = function (u) {\n    return function (num, withoutSuffix) {\n        const f = pluralForm(num);\n        let str = plurals[u][pluralForm(num)];\n        if (f === 2) {\n            str = str[withoutSuffix ? 0 : 1];\n        }\n        return str.replace(/%d/i, num.toString());\n    };\n};\nconst months$2 = [\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'مايو',\n    'يونيو',\n    'يوليو',\n    'أغسطس',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر'\n];\nconst arLocale = {\n    abbr: 'ar',\n    months: months$2,\n    monthsShort: months$2,\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'D/\\u200FM/\\u200FYYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    isPM(input) {\n        return 'م' === input;\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ص';\n        }\n        else {\n            return 'م';\n        }\n    },\n    calendar: {\n        sameDay: '[اليوم عند الساعة] LT',\n        nextDay: '[غدًا عند الساعة] LT',\n        nextWeek: 'dddd [عند الساعة] LT',\n        lastDay: '[أمس عند الساعة] LT',\n        lastWeek: 'dddd [عند الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'بعد %s',\n        past: 'منذ %s',\n        s: pluralize('s'),\n        ss: pluralize('s'),\n        m: pluralize('m'),\n        mm: pluralize('m'),\n        h: pluralize('h'),\n        hh: pluralize('h'),\n        d: pluralize('d'),\n        dd: pluralize('d'),\n        M: pluralize('M'),\n        MM: pluralize('M'),\n        y: pluralize('y'),\n        yy: pluralize('y')\n    },\n    preparse(str) {\n        return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n            return numberMap$1[match];\n        }).replace(/،/g, ',');\n    },\n    postformat(str) {\n        return str.replace(/\\d/g, function (match) {\n            return symbolMap$1[match];\n        }).replace(/,/g, '،');\n    },\n    week: {\n        dow: 6,\n        doy: 12 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\nconst bgLocale = {\n    abbr: 'bg',\n    months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n    monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n    weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n    weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'D.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY H:mm',\n        LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[Днес в] LT',\n        nextDay: '[Утре в] LT',\n        nextWeek: 'dddd [в] LT',\n        lastDay: '[Вчера в] LT',\n        lastWeek: function (d) {\n            switch (d) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[В изминалата] dddd [в] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[В изминалия] dddd [в] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'след %s',\n        past: 'преди %s',\n        s: 'няколко секунди',\n        ss: '%d секунди',\n        m: 'минута',\n        mm: '%d минути',\n        h: 'час',\n        hh: '%d часа',\n        d: 'ден',\n        dd: '%d дни',\n        M: 'месец',\n        MM: '%d месеца',\n        y: 'година',\n        yy: '%d години'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n    ordinal: function (_num) {\n        const number = Number(_num);\n        let lastDigit = number % 10, last2Digits = number % 100;\n        if (number === 0) {\n            return number + '-ев';\n        }\n        else if (last2Digits === 0) {\n            return number + '-ен';\n        }\n        else if (last2Digits > 10 && last2Digits < 20) {\n            return number + '-ти';\n        }\n        else if (lastDigit === 1) {\n            return number + '-ви';\n        }\n        else if (lastDigit === 2) {\n            return number + '-ри';\n        }\n        else if (lastDigit === 7 || lastDigit === 8) {\n            return number + '-ми';\n        }\n        else {\n            return number + '-ти';\n        }\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\nlet monthsShortDot$5 = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_'), monthsShort$7 = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\nlet monthsParse$6 = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\nlet monthsRegex$5 = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\nconst caLocale = {\n    abbr: 'ca',\n    months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$5;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort$7[getMonth(date, isUTC)];\n        }\n        return monthsShortDot$5[getMonth(date, isUTC)];\n    },\n    monthsRegex: monthsRegex$5,\n    monthsShortRegex: monthsRegex$5,\n    monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n    monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n    monthsParse: monthsParse$6,\n    longMonthsParse: monthsParse$6,\n    shortMonthsParse: monthsParse$6,\n    weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n    weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n    weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'fa %s',\n        s: 'uns segons',\n        ss: '%d segons',\n        m: 'un minut',\n        mm: '%d minuts',\n        h: 'una hora',\n        hh: '%d hores',\n        d: 'un dia',\n        dd: '%d dies',\n        M: 'un mes',\n        MM: '%d mesos',\n        y: 'un any',\n        yy: '%d anys'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        const output = (num > 4) ? 'é' :\n            (num === 1 || num === 3) ? 'r' :\n                (num === 2) ? 'n' :\n                    (num === 4) ? 't' : 'é';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\nconst months$1 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\nconst monthsShort$6 = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\nfunction plural$4(num) {\n    return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\nfunction translate$6(num, withoutSuffix, key, isFuture) {\n    const result = num + ' ';\n    switch (key) {\n        case 's': // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'sekundy' : 'sekund');\n            }\n            else {\n                return result + 'sekundami';\n            }\n        // break;\n        case 'm': // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'minuty' : 'minut');\n            }\n            else {\n                return result + 'minutami';\n            }\n        // break;\n        case 'h': // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'hodiny' : 'hodin');\n            }\n            else {\n                return result + 'hodinami';\n            }\n        // break;\n        case 'd': // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'dny' : 'dní');\n            }\n            else {\n                return result + 'dny';\n            }\n        // break;\n        case 'M': // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'měsíce' : 'měsíců');\n            }\n            else {\n                return result + 'měsíci';\n            }\n        // break;\n        case 'y': // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'roky' : 'let');\n            }\n            else {\n                return result + 'lety';\n            }\n        // break;\n    }\n}\nconst csLocale = {\n    abbr: 'cs',\n    months: months$1,\n    monthsShort: monthsShort$6,\n    monthsParse: (function (months, monthsShort) {\n        let i, _monthsParse = [];\n        for (i = 0; i < 12; i++) {\n            // use custom parser to solve problem with July (červenec)\n            _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n        }\n        return _monthsParse;\n    }(months$1, monthsShort$6)),\n    shortMonthsParse: (function (monthsShort) {\n        let i, _shortMonthsParse = [];\n        for (i = 0; i < 12; i++) {\n            _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n        }\n        return _shortMonthsParse;\n    }(monthsShort$6)),\n    longMonthsParse: (function (months) {\n        let i, _longMonthsParse = [];\n        for (i = 0; i < 12; i++) {\n            _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n        }\n        return _longMonthsParse;\n    }(months$1)),\n    weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n    weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n    weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd D. MMMM YYYY H:mm',\n        l: 'D. M. YYYY'\n    },\n    calendar: {\n        sameDay: '[dnes v] LT',\n        nextDay: '[zítra v] LT',\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v neděli v] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [v] LT';\n                case 3:\n                    return '[ve středu v] LT';\n                case 4:\n                    return '[ve čtvrtek v] LT';\n                case 5:\n                    return '[v pátek v] LT';\n                case 6:\n                    return '[v sobotu v] LT';\n            }\n        },\n        lastDay: '[včera v] LT',\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[minulou neděli v] LT';\n                case 1:\n                case 2:\n                    return '[minulé] dddd [v] LT';\n                case 3:\n                    return '[minulou středu v] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [v] LT';\n                case 6:\n                    return '[minulou sobotu v] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'za %s',\n        past: 'před %s',\n        s: translate$6,\n        ss: translate$6,\n        m: translate$6,\n        mm: translate$6,\n        h: translate$6,\n        hh: translate$6,\n        d: translate$6,\n        dd: translate$6,\n        M: translate$6,\n        MM: translate$6,\n        y: translate$6,\n        yy: translate$6\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\nconst daLocale = {\n    abbr: 'da',\n    months: 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n    weekdays: 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n    weekdaysShort: 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n    weekdaysMin: 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY HH:mm',\n        LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n        sameDay: '[i dag kl.] LT',\n        nextDay: '[i morgen kl.] LT',\n        nextWeek: 'på dddd [kl.] LT',\n        lastDay: '[i går kl.] LT',\n        lastWeek: '[i] dddd[s kl.] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: '%s siden',\n        s: 'få sekunder',\n        m: 'et minut',\n        mm: '%d minutter',\n        h: 'en time',\n        hh: '%d timer',\n        d: 'en dag',\n        dd: '%d dage',\n        M: 'en måned',\n        MM: '%d måneder',\n        y: 'et år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\nfunction processRelativeTime$2(num, withoutSuffix, key, isFuture) {\n    const format = {\n        'm': ['eine Minute', 'einer Minute'],\n        'h': ['eine Stunde', 'einer Stunde'],\n        'd': ['ein Tag', 'einem Tag'],\n        'dd': [num + ' Tage', num + ' Tagen'],\n        'M': ['ein Monat', 'einem Monat'],\n        'MM': [num + ' Monate', num + ' Monaten'],\n        'y': ['ein Jahr', 'einem Jahr'],\n        'yy': [num + ' Jahre', num + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\nconst deLocale = {\n    abbr: 'de',\n    months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY HH:mm',\n        LLLL: 'dddd, D. MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[heute um] LT [Uhr]',\n        sameElse: 'L',\n        nextDay: '[morgen um] LT [Uhr]',\n        nextWeek: 'dddd [um] LT [Uhr]',\n        lastDay: '[gestern um] LT [Uhr]',\n        lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime: {\n        future: 'in %s',\n        past: 'vor %s',\n        s: 'ein paar Sekunden',\n        ss: '%d Sekunden',\n        m: processRelativeTime$2,\n        mm: '%d Minuten',\n        h: processRelativeTime$2,\n        hh: '%d Stunden',\n        d: processRelativeTime$2,\n        dd: processRelativeTime$2,\n        M: processRelativeTime$2,\n        MM: processRelativeTime$2,\n        y: processRelativeTime$2,\n        yy: processRelativeTime$2\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\nconst enGbLocale = {\n    abbr: 'en-gb',\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        const b = num % 10, output = (~~(num % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                    (b === 3) ? 'rd' : 'th';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\nlet monthsShortDot$4 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'), monthsShort$5 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nlet monthsParse$5 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex$4 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\nconst esDoLocale = {\n    abbr: 'es-do',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$4;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShort$5[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortDot$4[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex: monthsRegex$4,\n    monthsShortRegex: monthsRegex$4,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$5,\n    longMonthsParse: monthsParse$5,\n    shortMonthsParse: monthsParse$5,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY h:mm A',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\nlet monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'), monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nlet monthsParse$4 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex$3 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\nconst esLocale = {\n    abbr: 'es',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$3;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort$4[getMonth(date, isUTC)];\n        }\n        return monthsShortDot$3[getMonth(date, isUTC)];\n    },\n    monthsRegex: monthsRegex$3,\n    monthsShortRegex: monthsRegex$3,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$4,\n    longMonthsParse: monthsParse$4,\n    shortMonthsParse: monthsParse$4,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (Puerto Rico) [es-pr]\nlet monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nconst esPrLocale = {\n    abbr: 'es-pr',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$2;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShort$3[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortDot$2[getMonth(date, isUTC)];\n        }\n    },\n    monthsParseExact: true,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'MM/DD/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY h:mm A',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 0,\n        doy: 6 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\nlet monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nconst esUsLocale = {\n    abbr: 'es-us',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$1;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShort$2[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortDot$1[getMonth(date, isUTC)];\n        }\n    },\n    monthsParseExact: true,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM [de] D [de] YYYY',\n        LLL: 'MMMM [de] D [de] YYYY h:mm A',\n        LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 0,\n        doy: 6 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\nconst processRelativeTime$1 = function (num, withoutSuffix, key, isFuture) {\n    const format = {\n        s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n        ss: [num + 'sekundi', num + 'sekundit'],\n        m: ['ühe minuti', 'üks minut'],\n        mm: [num + ' minuti', num + ' minutit'],\n        h: ['ühe tunni', 'tund aega', 'üks tund'],\n        hh: [num + ' tunni', num + ' tundi'],\n        d: ['ühe päeva', 'üks päev'],\n        M: ['kuu aja', 'kuu aega', 'üks kuu'],\n        MM: [num + ' kuu', num + ' kuud'],\n        y: ['ühe aasta', 'aasta', 'üks aasta'],\n        yy: [num + ' aasta', num + ' aastat']\n    };\n    if (withoutSuffix) {\n        return format[key][2] ? format[key][2] : format[key][1];\n    }\n    return isFuture ? format[key][0] : format[key][1];\n};\nconst etLocale = {\n    abbr: 'et',\n    months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n    monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n    weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n    weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n    weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[Täna,] LT',\n        nextDay: '[Homme,] LT',\n        nextWeek: '[Järgmine] dddd LT',\n        lastDay: '[Eile,] LT',\n        lastWeek: '[Eelmine] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s pärast',\n        past: '%s tagasi',\n        s: processRelativeTime$1,\n        ss: processRelativeTime$1,\n        m: processRelativeTime$1,\n        mm: processRelativeTime$1,\n        h: processRelativeTime$1,\n        hh: processRelativeTime$1,\n        d: processRelativeTime$1,\n        dd: '%d päeva',\n        M: processRelativeTime$1,\n        MM: processRelativeTime$1,\n        y: processRelativeTime$1,\n        yy: processRelativeTime$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '), numbersFuture = [\n    'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n    numbersPast[7], numbersPast[8], numbersPast[9]\n];\nfunction translate$5(num, withoutSuffix, key, isFuture) {\n    var result = '';\n    switch (key) {\n        case 's':\n            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n        case 'ss':\n            return isFuture ? 'sekunnin' : 'sekuntia';\n        case 'm':\n            return isFuture ? 'minuutin' : 'minuutti';\n        case 'mm':\n            result = isFuture ? 'minuutin' : 'minuuttia';\n            break;\n        case 'h':\n            return isFuture ? 'tunnin' : 'tunti';\n        case 'hh':\n            result = isFuture ? 'tunnin' : 'tuntia';\n            break;\n        case 'd':\n            return isFuture ? 'päivän' : 'päivä';\n        case 'dd':\n            result = isFuture ? 'päivän' : 'päivää';\n            break;\n        case 'M':\n            return isFuture ? 'kuukauden' : 'kuukausi';\n        case 'MM':\n            result = isFuture ? 'kuukauden' : 'kuukautta';\n            break;\n        case 'y':\n            return isFuture ? 'vuoden' : 'vuosi';\n        case 'yy':\n            result = isFuture ? 'vuoden' : 'vuotta';\n            break;\n    }\n    result = verbalNumber(num, isFuture) + ' ' + result;\n    return result;\n}\nfunction verbalNumber(num, isFuture) {\n    return num < 10 ? (isFuture ? numbersFuture[num] : numbersPast[num]) : num;\n}\nconst fiLocale = {\n    abbr: 'fi',\n    months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n    monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n    weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n    weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n    weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n    longDateFormat: {\n        LT: 'HH.mm',\n        LTS: 'HH.mm.ss',\n        L: 'DD.MM.YYYY',\n        LL: 'Do MMMM[ta] YYYY',\n        LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n        LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n        l: 'D.M.YYYY',\n        ll: 'Do MMM YYYY',\n        lll: 'Do MMM YYYY, [klo] HH.mm',\n        llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n    },\n    calendar: {\n        sameDay: '[tänään] [klo] LT',\n        nextDay: '[huomenna] [klo] LT',\n        nextWeek: 'dddd [klo] LT',\n        lastDay: '[eilen] [klo] LT',\n        lastWeek: '[viime] dddd[na] [klo] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s päästä',\n        past: '%s sitten',\n        s: translate$5,\n        ss: translate$5,\n        m: translate$5,\n        mm: translate$5,\n        h: translate$5,\n        hh: translate$5,\n        d: translate$5,\n        dd: translate$5,\n        M: translate$5,\n        MM: translate$5,\n        y: translate$5,\n        yy: translate$5\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\nconst frLocale = {\n    abbr: 'fr',\n    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Aujourd’hui à] LT',\n        nextDay: '[Demain à] LT',\n        nextWeek: 'dddd [à] LT',\n        lastDay: '[Hier à] LT',\n        lastWeek: 'dddd [dernier à] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'dans %s',\n        past: 'il y a %s',\n        s: 'quelques secondes',\n        ss: '%d secondes',\n        m: 'une minute',\n        mm: '%d minutes',\n        h: 'une heure',\n        hh: '%d heures',\n        d: 'un jour',\n        dd: '%d jours',\n        M: 'un mois',\n        MM: '%d mois',\n        y: 'un an',\n        yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n    ordinal(_num, period) {\n        const num = Number(_num);\n        switch (period) {\n            // TODO: Return 'e' when day of month > 1. Move this case inside\n            // block for masculine words below.\n            // See https://github.com/moment/moment/issues/3375\n            case 'D':\n                return num + (num === 1 ? 'er' : '');\n            // Words with masculine grammatical gender: mois, trimestre, jour\n            default:\n            case 'M':\n            case 'Q':\n            case 'DDD':\n            case 'd':\n                return num + (num === 1 ? 'er' : 'e');\n            // Words with feminine grammatical gender: semaine\n            case 'w':\n            case 'W':\n                return num + (num === 1 ? 're' : 'e');\n        }\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'), monthsShort$1 = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\nlet monthsParse$3 = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\nlet monthsRegex$2 = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\nconst glLocale = {\n    abbr: 'gl',\n    months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort$1[getMonth(date, isUTC)];\n        }\n        return monthsShortDot[getMonth(date, isUTC)];\n    },\n    monthsRegex: monthsRegex$2,\n    monthsShortRegex: monthsRegex$2,\n    monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n    monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$3,\n    longMonthsParse: monthsParse$3,\n    shortMonthsParse: monthsParse$3,\n    weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[hoxe á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[mañan á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[onte á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[o] dddd [pasado á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'fai %s',\n        s: 'uns segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'unha hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un ano',\n        yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\nconst heLocale = {\n    abbr: 'he',\n    months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n    monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n    weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n    weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n    weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [ב]MMMM YYYY',\n        LLL: 'D [ב]MMMM YYYY HH:mm',\n        LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n        l: 'D/M/YYYY',\n        ll: 'D MMM YYYY',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[היום ב־]LT',\n        nextDay: '[מחר ב־]LT',\n        nextWeek: 'dddd [בשעה] LT',\n        lastDay: '[אתמול ב־]LT',\n        lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'בעוד %s',\n        past: 'לפני %s',\n        s: 'מספר שניות',\n        ss: '%d שניות',\n        m: 'דקה',\n        mm: '%d דקות',\n        h: 'שעה',\n        hh(num) {\n            if (num === 2) {\n                return 'שעתיים';\n            }\n            return num + ' שעות';\n        },\n        d: 'יום',\n        dd(num) {\n            if (num === 2) {\n                return 'יומיים';\n            }\n            return num + ' ימים';\n        },\n        M: 'חודש',\n        MM(num) {\n            if (num === 2) {\n                return 'חודשיים';\n            }\n            return num + ' חודשים';\n        },\n        y: 'שנה',\n        yy(num) {\n            if (num === 2) {\n                return 'שנתיים';\n            }\n            else if (num % 10 === 0 && num !== 10) {\n                return num + ' שנה';\n            }\n            return num + ' שנים';\n        }\n    },\n    meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n    isPM(input) {\n        return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 5) {\n            return 'לפנות בוקר';\n        }\n        else if (hour < 10) {\n            return 'בבוקר';\n        }\n        else if (hour < 12) {\n            return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n        }\n        else if (hour < 18) {\n            return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n        }\n        else {\n            return 'בערב';\n        }\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\nlet symbolMap = {\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n    0: '०'\n}, numberMap = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n};\nconst hiLocale = {\n    abbr: 'hi',\n    months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n    monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n    weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n    weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n    longDateFormat: {\n        LT: 'A h:mm बजे',\n        LTS: 'A h:mm:ss बजे',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY, A h:mm बजे',\n        LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n    },\n    calendar: {\n        sameDay: '[आज] LT',\n        nextDay: '[कल] LT',\n        nextWeek: 'dddd, LT',\n        lastDay: '[कल] LT',\n        lastWeek: '[पिछले] dddd, LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s में',\n        past: '%s पहले',\n        s: 'कुछ ही क्षण',\n        ss: '%d सेकंड',\n        m: 'एक मिनट',\n        mm: '%d मिनट',\n        h: 'एक घंटा',\n        hh: '%d घंटे',\n        d: 'एक दिन',\n        dd: '%d दिन',\n        M: 'एक महीने',\n        MM: '%d महीने',\n        y: 'एक वर्ष',\n        yy: '%d वर्ष'\n    },\n    preparse(str) {\n        return str.replace(/[१२३४५६७८९०]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat(str) {\n        return str.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n    meridiemParse: /रात|सुबह|दोपहर|शाम/,\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'रात') {\n            return hour < 4 ? hour : hour + 12;\n        }\n        else if (meridiem === 'सुबह') {\n            return hour;\n        }\n        else if (meridiem === 'दोपहर') {\n            return hour >= 10 ? hour : hour + 12;\n        }\n        else if (meridiem === 'शाम') {\n            return hour + 12;\n        }\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'रात';\n        }\n        else if (hour < 10) {\n            return 'सुबह';\n        }\n        else if (hour < 17) {\n            return 'दोपहर';\n        }\n        else if (hour < 20) {\n            return 'शाम';\n        }\n        else {\n            return 'रात';\n        }\n    },\n    week: {\n        dow: 0,\n        doy: 6 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\nfunction translate$4(num, withoutSuffix, key, isFuture) {\n    switch (key) {\n        case 's':\n            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n        case 'ss':\n            return num + ((isFuture || withoutSuffix) ? ' másodperc' : ' másodperce');\n        case 'm':\n            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'mm':\n            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'h':\n            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'hh':\n            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'd':\n            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'dd':\n            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'M':\n            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'MM':\n            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'y':\n            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n        case 'yy':\n            return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n    }\n    return '';\n}\nfunction week(date, isFuture) {\n    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\nconst huLocale = {\n    abbr: 'hu',\n    months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n    monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n    weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n    weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n    weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'YYYY.MM.DD.',\n        LL: 'YYYY. MMMM D.',\n        LLL: 'YYYY. MMMM D. H:mm',\n        LLLL: 'YYYY. MMMM D., dddd H:mm'\n    },\n    meridiemParse: /de|du/i,\n    isPM(input) {\n        return input.charAt(1).toLowerCase() === 'u';\n    },\n    meridiem(hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower === true ? 'de' : 'DE';\n        }\n        else {\n            return isLower === true ? 'du' : 'DU';\n        }\n    },\n    calendar: {\n        sameDay: '[ma] LT[-kor]',\n        nextDay: '[holnap] LT[-kor]',\n        nextWeek(date) {\n            return week(date, true);\n        },\n        lastDay: '[tegnap] LT[-kor]',\n        lastWeek(date) {\n            return week(date, false);\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s múlva',\n        past: '%s',\n        s: translate$4,\n        ss: translate$4,\n        m: translate$4,\n        mm: translate$4,\n        h: translate$4,\n        hh: translate$4,\n        d: translate$4,\n        dd: translate$4,\n        M: translate$4,\n        MM: translate$4,\n        y: translate$4,\n        yy: translate$4\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\nconst hrLocale = {\n    abbr: 'hr',\n    months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n    monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n    weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n    weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n    weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Danas u] LT',\n        nextDay: '[Sutra u] LT',\n        nextWeek: 'dddd [u] LT',\n        lastDay: '[Jučer u] LT',\n        lastWeek: '[Zadnji] dddd [u] LT',\n        sameElse: 'L'\n    },\n    invalidDate: 'Neispravan datum',\n    relativeTime: {\n        future: 'za %s',\n        past: '%s prije',\n        s: 'nekoliko sekundi',\n        ss: '%d sekundi',\n        m: 'minuta',\n        mm: '%d minuta',\n        h: 'sat',\n        hh: '%d sati',\n        d: 'dan',\n        dd: '%d dana',\n        M: 'mjesec',\n        MM: '%d mjeseci',\n        y: 'godina',\n        yy: '%d godina'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        const b = num % 10, output = (~~(num % 100 / 10) === 1) ? '.' :\n            (b === 1) ? '.' :\n                (b === 2) ? '.' :\n                    (b === 3) ? '.' : '.';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\nconst idLocale = {\n    abbr: 'id',\n    months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n    weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n    weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n    weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n    longDateFormat: {\n        LT: 'HH.mm',\n        LTS: 'HH.mm.ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY [pukul] HH.mm',\n        LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /pagi|siang|sore|malam/,\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'pagi') {\n            return hour;\n        }\n        else if (meridiem === 'siang') {\n            return hour >= 11 ? hour : hour + 12;\n        }\n        else if (meridiem === 'sore' || meridiem === 'malam') {\n            return hour + 12;\n        }\n    },\n    meridiem(hours, minutes, isLower) {\n        if (hours < 11) {\n            return 'pagi';\n        }\n        else if (hours < 15) {\n            return 'siang';\n        }\n        else if (hours < 19) {\n            return 'sore';\n        }\n        else {\n            return 'malam';\n        }\n    },\n    calendar: {\n        sameDay: '[Hari ini pukul] LT',\n        nextDay: '[Besok pukul] LT',\n        nextWeek: 'dddd [pukul] LT',\n        lastDay: '[Kemarin pukul] LT',\n        lastWeek: 'dddd [lalu pukul] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'dalam %s',\n        past: '%s yang lalu',\n        s: 'beberapa detik',\n        ss: '%d detik',\n        m: 'semenit',\n        mm: '%d menit',\n        h: 'sejam',\n        hh: '%d jam',\n        d: 'sehari',\n        dd: '%d hari',\n        M: 'sebulan',\n        MM: '%d bulan',\n        y: 'setahun',\n        yy: '%d tahun'\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\nconst itLocale = {\n    abbr: 'it',\n    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n    weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n    weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n    weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Oggi alle] LT',\n        nextDay: '[Domani alle] LT',\n        nextWeek: 'dddd [alle] LT',\n        lastDay: '[Ieri alle] LT',\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[la scorsa] dddd [alle] LT';\n                default:\n                    return '[lo scorso] dddd [alle] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future(num) {\n            return ((/^[0-9].+$/).test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n        },\n        past: '%s fa',\n        s: 'alcuni secondi',\n        ss: '%d secondi',\n        m: 'un minuto',\n        mm: '%d minuti',\n        h: 'un\\'ora',\n        hh: '%d ore',\n        d: 'un giorno',\n        dd: '%d giorni',\n        M: 'un mese',\n        MM: '%d mesi',\n        y: 'un anno',\n        yy: '%d anni'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\nconst jaLocale = {\n    abbr: 'ja',\n    months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n    weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n    weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY/MM/DD',\n        LL: 'YYYY年M月D日',\n        LLL: 'YYYY年M月D日 HH:mm',\n        LLLL: 'YYYY年M月D日 HH:mm dddd',\n        l: 'YYYY/MM/DD',\n        ll: 'YYYY年M月D日',\n        lll: 'YYYY年M月D日 HH:mm',\n        llll: 'YYYY年M月D日 HH:mm dddd'\n    },\n    meridiemParse: /午前|午後/i,\n    isPM(input) {\n        return input === '午後';\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return '午前';\n        }\n        else {\n            return '午後';\n        }\n    },\n    calendar: {\n        sameDay: '[今日] LT',\n        nextDay: '[明日] LT',\n        nextWeek: '[来週]dddd LT',\n        lastDay: '[昨日] LT',\n        lastWeek: '[前週]dddd LT',\n        sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}日/,\n    ordinal(num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '日';\n            default:\n                return num.toString(10);\n        }\n    },\n    relativeTime: {\n        future: '%s後',\n        past: '%s前',\n        s: '数秒',\n        ss: '%d秒',\n        m: '1分',\n        mm: '%d分',\n        h: '1時間',\n        hh: '%d時間',\n        d: '1日',\n        dd: '%d日',\n        M: '1ヶ月',\n        MM: '%dヶ月',\n        y: '1年',\n        yy: '%d年'\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\nconst kaLocale = {\n    abbr: 'ka',\n    months: {\n        format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n        standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\n    },\n    monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n    weekdays: {\n        standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n        format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n        isFormat: /(წინა|შემდეგ)/\n    },\n    weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n    weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY h:mm A',\n        LLLL: 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar: {\n        sameDay: '[დღეს] LT[-ზე]',\n        nextDay: '[ხვალ] LT[-ზე]',\n        lastDay: '[გუშინ] LT[-ზე]',\n        nextWeek: '[შემდეგ] dddd LT[-ზე]',\n        lastWeek: '[წინა] dddd LT-ზე',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future(s) {\n            var st = s.toString();\n            return (/(წამი|წუთი|საათი|წელი)/).test(st) ?\n                st.replace(/ი$/, 'ში') :\n                st + 'ში';\n        },\n        past(s) {\n            var st = s.toString();\n            if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(st)) {\n                return st.replace(/(ი|ე)$/, 'ის წინ');\n            }\n            if ((/წელი/).test(st)) {\n                return st.replace(/წელი$/, 'წლის წინ');\n            }\n        },\n        s: 'რამდენიმე წამი',\n        ss: '%d წამი',\n        m: 'წუთი',\n        mm: '%d წუთი',\n        h: 'საათი',\n        hh: '%d საათი',\n        d: 'დღე',\n        dd: '%d დღე',\n        M: 'თვე',\n        MM: '%d თვე',\n        y: 'წელი',\n        yy: '%d წელი'\n    },\n    dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n    ordinal(_num, _period) {\n        const num = Number(_num);\n        if (num === 0) {\n            return num.toString();\n        }\n        if (num === 1) {\n            return num + '-ლი';\n        }\n        if ((num < 20) || (num <= 100 && (num % 20 === 0)) || (num % 100 === 0)) {\n            return 'მე-' + num;\n        }\n        return num + '-ე';\n    },\n    week: {\n        dow: 1,\n        doy: 4\n    }\n};\n\n// ! moment.js locale configuration\n// ! locale : Kazakh [kk]\n// ! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\nconst suffixes$1 = {\n    0: '-ші',\n    1: '-ші',\n    2: '-ші',\n    3: '-ші',\n    4: '-ші',\n    5: '-ші',\n    6: '-шы',\n    7: '-ші',\n    8: '-ші',\n    9: '-шы',\n    10: '-шы',\n    20: '-шы',\n    30: '-шы',\n    40: '-шы',\n    50: '-ші',\n    60: '-шы',\n    70: '-ші',\n    80: '-ші',\n    90: '-шы',\n    100: '-ші'\n};\nconst kkLocale = {\n    abbr: 'kk',\n    months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n    monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n    weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n    weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n    weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Бүгін сағат] LT',\n        nextDay: '[Ертең сағат] LT',\n        nextWeek: 'dddd [сағат] LT',\n        lastDay: '[Кеше сағат] LT',\n        lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s ішінде',\n        past: '%s бұрын',\n        s: 'бірнеше секунд',\n        ss: '%d секунд',\n        m: 'бір минут',\n        mm: '%d минут',\n        h: 'бір сағат',\n        hh: '%d сағат',\n        d: 'бір күн',\n        dd: '%d күн',\n        M: 'бір ай',\n        MM: '%d ай',\n        y: 'бір жыл',\n        yy: '%d жыл'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n    ordinal(_num) {\n        const a = _num % 10;\n        const b = _num >= 100 ? 100 : null;\n        return _num + (suffixes$1[_num] || suffixes$1[a] || suffixes$1[b]);\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 7th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\nconst koLocale = {\n    abbr: 'ko',\n    months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n    weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n    weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n    longDateFormat: {\n        LT: 'A h:mm',\n        LTS: 'A h:mm:ss',\n        L: 'YYYY.MM.DD',\n        LL: 'YYYY년 MMMM D일',\n        LLL: 'YYYY년 MMMM D일 A h:mm',\n        LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n        l: 'YYYY.MM.DD',\n        ll: 'YYYY년 MMMM D일',\n        lll: 'YYYY년 MMMM D일 A h:mm',\n        llll: 'YYYY년 MMMM D일 dddd A h:mm'\n    },\n    calendar: {\n        sameDay: '오늘 LT',\n        nextDay: '내일 LT',\n        nextWeek: 'dddd LT',\n        lastDay: '어제 LT',\n        lastWeek: '지난주 dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s 후',\n        past: '%s 전',\n        s: '몇 초',\n        ss: '%d초',\n        m: '1분',\n        mm: '%d분',\n        h: '한 시간',\n        hh: '%d시간',\n        d: '하루',\n        dd: '%d일',\n        M: '한 달',\n        MM: '%d달',\n        y: '일 년',\n        yy: '%d년'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n    ordinal: function (num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '일';\n            case 'M':\n                return num + '월';\n            case 'w':\n            case 'W':\n                return num + '주';\n            default:\n                return num.toString(10);\n        }\n    },\n    meridiemParse: /오전|오후/,\n    isPM: function (token) {\n        return token === '오후';\n    },\n    meridiem: function (hour, minute, isUpper) {\n        return hour < 12 ? '오전' : '오후';\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\nconst units = {\n    ss: 'sekundė_sekundžių_sekundes',\n    m: 'minutė_minutės_minutę',\n    mm: 'minutės_minučių_minutes',\n    h: 'valanda_valandos_valandą',\n    hh: 'valandos_valandų_valandas',\n    d: 'diena_dienos_dieną',\n    dd: 'dienos_dienų_dienas',\n    M: 'mėnuo_mėnesio_mėnesį',\n    MM: 'mėnesiai_mėnesių_mėnesius',\n    y: 'metai_metų_metus',\n    yy: 'metai_metų_metus'\n};\nfunction translateSeconds(num, withoutSuffix, key, isFuture) {\n    if (withoutSuffix) {\n        return 'kelios sekundės';\n    }\n    else {\n        return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n    }\n}\nfunction translateSingular(num, withoutSuffix, key, isFuture) {\n    return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n}\nfunction special(num) {\n    return num % 10 === 0 || (num > 10 && num < 20);\n}\nfunction forms(key) {\n    return units[key].split('_');\n}\nfunction translate$3(num, withoutSuffix, key, isFuture) {\n    let result = num + ' ';\n    if (num === 1) {\n        return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n    }\n    else if (withoutSuffix) {\n        return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n    }\n    else {\n        if (isFuture) {\n            return result + forms(key)[1];\n        }\n        else {\n            return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n        }\n    }\n}\nconst ltLocale = {\n    abbr: 'lt',\n    months: {\n        format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n        standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n        isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n    },\n    monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n    weekdays: {\n        format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n        standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n        isFormat: /dddd HH:mm/\n    },\n    weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n    weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'YYYY [m.] MMMM D [d.]',\n        LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n        LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n        l: 'YYYY-MM-DD',\n        ll: 'YYYY [m.] MMMM D [d.]',\n        lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n        llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n    },\n    calendar: {\n        sameDay: '[Šiandien] LT',\n        nextDay: '[Rytoj] LT',\n        nextWeek: 'dddd LT',\n        lastDay: '[Vakar] LT',\n        lastWeek: '[Praėjusį] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'po %s',\n        past: 'prieš %s',\n        s: translateSeconds,\n        ss: translate$3,\n        m: translateSingular,\n        mm: translate$3,\n        h: translateSingular,\n        hh: translate$3,\n        d: translateSingular,\n        dd: translate$3,\n        M: translateSingular,\n        MM: translate$3,\n        y: translateSingular,\n        yy: translate$3\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n    ordinal(num) {\n        return num + '-oji';\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\nconst lvLocale = {\n    abbr: 'lv',\n    months: 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n    weekdays: 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n    weekdaysShort: 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n    weekdaysMin: 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'pēc %s',\n        past: 'pirms %s',\n        s: 'dažām sekundēm',\n        ss: '%d sekundēm',\n        m: 'minūtes',\n        mm: '%d minūtēm',\n        h: 'stundas',\n        hh: '%d stundām',\n        d: 'dienas',\n        dd: '%d dienām',\n        M: 'mēneša',\n        MM: '%d mēnešiem',\n        y: 'gada',\n        yy: '%d gadiem'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal(num) {\n        return num + '.';\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\nfunction translate$2(num, withoutSuffix, key, isFuture) {\n    switch (key) {\n        case 's':\n            return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n        case 'ss':\n            return num + (withoutSuffix ? ' секунд' : ' секундын');\n        case 'm':\n        case 'mm':\n            return num + (withoutSuffix ? ' минут' : ' минутын');\n        case 'h':\n        case 'hh':\n            return num + (withoutSuffix ? ' цаг' : ' цагийн');\n        case 'd':\n        case 'dd':\n            return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n        case 'M':\n        case 'MM':\n            return num + (withoutSuffix ? ' сар' : ' сарын');\n        case 'y':\n        case 'yy':\n            return num + (withoutSuffix ? ' жил' : ' жилийн');\n        default:\n            return num.toString(10);\n    }\n}\nconst mnLocale = {\n    abbr: 'mn',\n    months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n    monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n    weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n    weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'YYYY оны MMMMын D',\n        LLL: 'YYYY оны MMMMын D HH:mm',\n        LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n    },\n    meridiemParse: /ҮӨ|ҮХ/i,\n    isPM: function (input) {\n        return input === 'ҮХ';\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ҮӨ';\n        }\n        else {\n            return 'ҮХ';\n        }\n    },\n    calendar: {\n        sameDay: '[Өнөөдөр] LT',\n        nextDay: '[Маргааш] LT',\n        nextWeek: '[Ирэх] dddd LT',\n        lastDay: '[Өчигдөр] LT',\n        lastWeek: '[Өнгөрсөн] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s дараа',\n        past: '%s өмнө',\n        s: translate$2,\n        ss: translate$2,\n        m: translate$2,\n        mm: translate$2,\n        h: translate$2,\n        hh: translate$2,\n        d: translate$2,\n        dd: translate$2,\n        M: translate$2,\n        MM: translate$2,\n        y: translate$2,\n        yy: translate$2\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n    ordinal: function (num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + ' өдөр';\n            default:\n                return num.toString(10);\n        }\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\nconst nbLocale = {\n    abbr: 'nb',\n    months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n    monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n    weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n    weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY [kl.] HH:mm',\n        LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n        sameDay: '[i dag kl.] LT',\n        nextDay: '[i morgen kl.] LT',\n        nextWeek: 'dddd [kl.] LT',\n        lastDay: '[i går kl.] LT',\n        lastWeek: '[forrige] dddd [kl.] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: '%s siden',\n        s: 'noen sekunder',\n        ss: '%d sekunder',\n        m: 'ett minutt',\n        mm: '%d minutter',\n        h: 'en time',\n        hh: '%d timer',\n        d: 'en dag',\n        dd: '%d dager',\n        M: 'en måned',\n        MM: '%d måneder',\n        y: 'ett år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\nlet monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nlet monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\nlet monthsParse$2 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex$1 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\nconst nlBeLocale = {\n    abbr: 'nl-be',\n    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortWithDots$1;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots$1[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortWithDots$1[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex: monthsRegex$1,\n    monthsShortRegex: monthsRegex$1,\n    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$2,\n    longMonthsParse: monthsParse$2,\n    shortMonthsParse: monthsParse$2,\n    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[vandaag om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'over %s',\n        past: '%s geleden',\n        s: 'een paar seconden',\n        ss: '%d seconden',\n        m: 'één minuut',\n        mm: '%d minuten',\n        h: 'één uur',\n        hh: '%d uur',\n        d: 'één dag',\n        dd: '%d dagen',\n        M: 'één maand',\n        MM: '%d maanden',\n        y: 'één jaar',\n        yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'), monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\nlet monthsParse$1 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\nconst nlLocale = {\n    abbr: 'nl',\n    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortWithDots;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortWithDots[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex,\n    monthsShortRegex: monthsRegex,\n    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$1,\n    longMonthsParse: monthsParse$1,\n    shortMonthsParse: monthsParse$1,\n    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD-MM-YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[vandaag om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'over %s',\n        past: '%s geleden',\n        s: 'een paar seconden',\n        ss: '%d seconden',\n        m: 'één minuut',\n        mm: '%d minuten',\n        h: 'één uur',\n        hh: '%d uur',\n        d: 'één dag',\n        dd: '%d dagen',\n        M: 'één maand',\n        MM: '%d maanden',\n        y: 'één jaar',\n        yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\nfunction plural$3(num) {\n    return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\n}\nfunction translate$1(num, withoutSuffix, key) {\n    let result = num + ' ';\n    switch (key) {\n        case 'ss':\n            return result + (plural$3(num) ? 'sekundy' : 'sekund');\n        case 'm':\n            return withoutSuffix ? 'minuta' : 'minutę';\n        case 'mm':\n            return result + (plural$3(num) ? 'minuty' : 'minut');\n        case 'h':\n            return withoutSuffix ? 'godzina' : 'godzinę';\n        case 'hh':\n            return result + (plural$3(num) ? 'godziny' : 'godzin');\n        case 'MM':\n            return result + (plural$3(num) ? 'miesiące' : 'miesięcy');\n        case 'yy':\n            return result + (plural$3(num) ? 'lata' : 'lat');\n    }\n}\nconst plLocale = {\n    abbr: 'pl',\n    months(date, format, isUTC) {\n        if (!date) {\n            return monthsNominative;\n        }\n        else if (format === '') {\n            // Hack: if format empty we know this is used to generate\n            // RegExp by moment. Give then back both valid forms of months\n            // in RegExp ready format.\n            return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n        }\n        else if (/D MMMM/.test(format)) {\n            return monthsSubjective[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsNominative[getMonth(date, isUTC)];\n        }\n    },\n    monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n    weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n    weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n    weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Dziś o] LT',\n        nextDay: '[Jutro o] LT',\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[W niedzielę o] LT';\n                case 2:\n                    return '[We wtorek o] LT';\n                case 3:\n                    return '[W środę o] LT';\n                case 5:\n                    return '[W piątek o] LT';\n                case 6:\n                    return '[W sobotę o] LT';\n                default:\n                    return '[W] dddd [o] LT';\n            }\n        },\n        lastDay: '[Wczoraj o] LT',\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[W zeszłą niedzielę o] LT';\n                case 3:\n                    return '[W zeszłą środę o] LT';\n                case 4:\n                    return '[W zeszłą czwartek o] LT';\n                case 5:\n                    return '[W zeszłą piątek o] LT';\n                case 6:\n                    return '[W zeszłą sobotę o] LT';\n                default:\n                    return '[W zeszły] dddd [o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'za %s',\n        past: '%s temu',\n        s: 'kilka sekund',\n        ss: translate$1,\n        m: translate$1,\n        mm: translate$1,\n        h: translate$1,\n        hh: translate$1,\n        d: '1 dzień',\n        dd: '%d dni',\n        M: 'miesiąc',\n        MM: translate$1,\n        y: 'rok',\n        yy: translate$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\nconst ptBrLocale = {\n    abbr: 'pt-br',\n    months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n    monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n    weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n    weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n    weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n    },\n    calendar: {\n        sameDay: '[Hoje às] LT',\n        nextDay: '[Amanhã às] LT',\n        nextWeek: 'dddd [às] LT',\n        lastDay: '[Ontem às] LT',\n        lastWeek(date) {\n            return (getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6) ?\n                '[Último] dddd [às] LT' : // Saturday + Sunday\n                '[Última] dddd [às] LT'; // Monday - Friday\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'em %s',\n        past: '%s atrás',\n        s: 'poucos segundos',\n        ss: '%d segundos',\n        m: 'um minuto',\n        mm: '%d minutos',\n        h: 'uma hora',\n        hh: '%d horas',\n        d: 'um dia',\n        dd: '%d dias',\n        M: 'um mês',\n        MM: '%d meses',\n        y: 'um ano',\n        yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº'\n};\n\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\nfunction relativeTimeWithPlural$2(num, withoutSuffix, key) {\n    let format = {\n        ss: 'secunde',\n        mm: 'minute',\n        hh: 'ore',\n        dd: 'zile',\n        MM: 'luni',\n        yy: 'ani'\n    };\n    let separator = ' ';\n    if (num % 100 >= 20 || (num >= 100 && num % 100 === 0)) {\n        separator = ' de ';\n    }\n    return num + separator + format[key];\n}\nconst roLocale = {\n    abbr: 'ro',\n    months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n    monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n    weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n    weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY H:mm',\n        LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[azi la] LT',\n        nextDay: '[mâine la] LT',\n        nextWeek: 'dddd [la] LT',\n        lastDay: '[ieri la] LT',\n        lastWeek: '[fosta] dddd [la] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'peste %s',\n        past: '%s în urmă',\n        s: 'câteva secunde',\n        ss: relativeTimeWithPlural$2,\n        m: 'un minut',\n        mm: relativeTimeWithPlural$2,\n        h: 'o oră',\n        hh: relativeTimeWithPlural$2,\n        d: 'o zi',\n        dd: relativeTimeWithPlural$2,\n        M: 'o lună',\n        MM: relativeTimeWithPlural$2,\n        y: 'un an',\n        yy: relativeTimeWithPlural$2\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\nfunction plural$2(word, num) {\n    let forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\nfunction relativeTimeWithPlural$1(num, withoutSuffix, key) {\n    let format = {\n        ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n        mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n        hh: 'час_часа_часов',\n        dd: 'день_дня_дней',\n        MM: 'месяц_месяца_месяцев',\n        yy: 'год_года_лет'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'минута' : 'минуту';\n    }\n    return num + ' ' + plural$2(format[key], +num);\n}\nlet monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nconst ruLocale = {\n    abbr: 'ru',\n    months: {\n        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n    },\n    monthsShort: {\n        // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n    },\n    weekdays: {\n        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n        isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n    },\n    weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    monthsParse,\n    longMonthsParse: monthsParse,\n    shortMonthsParse: monthsParse,\n    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n    monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n    // копия предыдущего\n    monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n    // полные названия с падежами\n    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n    // Выражение, которое соотвествует только сокращённым формам\n    monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY г.',\n        LLL: 'D MMMM YYYY г., H:mm',\n        LLLL: 'dddd, D MMMM YYYY г., H:mm'\n    },\n    calendar: {\n        sameDay: '[Сегодня в] LT',\n        nextDay: '[Завтра в] LT',\n        lastDay: '[Вчера в] LT',\n        nextWeek(date, now) {\n            if (getWeek(now) !== getWeek(date)) {\n                switch (getDayOfWeek(date)) {\n                    case 0:\n                        return '[В следующее] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В следующий] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В следующую] dddd [в] LT';\n                }\n            }\n            else {\n                if (getDayOfWeek(date) === 2) {\n                    return '[Во] dddd [в] LT';\n                }\n                else {\n                    return '[В] dddd [в] LT';\n                }\n            }\n        },\n        lastWeek(date, now) {\n            if (getWeek(now) !== getWeek(date)) {\n                switch (getDayOfWeek(date)) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                }\n            }\n            else {\n                if (getDayOfWeek(date) === 2) {\n                    return '[Во] dddd [в] LT';\n                }\n                else {\n                    return '[В] dddd [в] LT';\n                }\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'через %s',\n        past: '%s назад',\n        s: 'несколько секунд',\n        ss: relativeTimeWithPlural$1,\n        m: relativeTimeWithPlural$1,\n        mm: relativeTimeWithPlural$1,\n        h: 'час',\n        hh: relativeTimeWithPlural$1,\n        d: 'день',\n        dd: relativeTimeWithPlural$1,\n        M: 'месяц',\n        MM: relativeTimeWithPlural$1,\n        y: 'год',\n        yy: relativeTimeWithPlural$1\n    },\n    meridiemParse: /ночи|утра|дня|вечера/i,\n    isPM(input) {\n        return /^(дня|вечера)$/.test(input);\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночи';\n        }\n        else if (hour < 12) {\n            return 'утра';\n        }\n        else if (hour < 17) {\n            return 'дня';\n        }\n        else {\n            return 'вечера';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n    ordinal(_num, period) {\n        const num = Number(_num);\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return num + '-й';\n            case 'D':\n                return num + '-го';\n            case 'w':\n            case 'W':\n                return num + '-я';\n            default:\n                return num.toString(10);\n        }\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\nconst months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\nconst monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\nfunction plural$1(num) {\n    return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\nfunction translate(num, withoutSuffix, key, isFuture) {\n    const result = num + ' ';\n    switch (key) {\n        case 's': // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'sekundy' : 'sekúnd');\n            }\n            else {\n                return result + 'sekundami';\n            }\n        // break;\n        case 'm': // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'minúty' : 'minút');\n            }\n            else {\n                return result + 'minútami';\n            }\n        // break;\n        case 'h': // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'hodiny' : 'hodín');\n            }\n            else {\n                return result + 'hodinami';\n            }\n        // break;\n        case 'd': // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'dni' : 'dní');\n            }\n            else {\n                return result + 'dňami';\n            }\n        // break;\n        case 'M': // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'mesiace' : 'mesiacov');\n            }\n            else {\n                return result + 'mesiacmi';\n            }\n        // break;\n        case 'y': // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'roky' : 'rokov');\n            }\n            else {\n                return result + 'rokmi';\n            }\n        // break;\n    }\n}\nconst skLocale = {\n    abbr: 'sk',\n    months,\n    monthsShort,\n    weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n    weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n    weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd D. MMMM YYYY H:mm',\n        l: 'D. M. YYYY'\n    },\n    calendar: {\n        sameDay: '[dnes o] LT',\n        nextDay: '[zajtra o] LT',\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [o] LT';\n                case 3:\n                    return '[v stredu o] LT';\n                case 4:\n                    return '[vo štvrtok o] LT';\n                case 5:\n                    return '[v piatok o] LT';\n                case 6:\n                    return '[v sobotu o] LT';\n            }\n        },\n        lastDay: '[včera o] LT',\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[minulú nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[minulý] dddd [o] LT';\n                case 3:\n                    return '[minulú stredu o] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [o] LT';\n                case 6:\n                    return '[minulú sobotu o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'o %s',\n        past: 'pred %s',\n        s: translate,\n        ss: translate,\n        m: translate,\n        mm: translate,\n        h: translate,\n        hh: translate,\n        d: translate,\n        dd: translate,\n        M: translate,\n        MM: translate,\n        y: translate,\n        yy: translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n    switch (key) {\n        case 's':\n            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n        case 'ss':\n            if (number === 1) {\n                result += withoutSuffix ? 'sekundo' : 'sekundi';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n            }\n            return result;\n        case 'm':\n            return withoutSuffix ? 'ena minuta' : 'eno minuto';\n        case 'mm':\n            if (number === 1) {\n                result += withoutSuffix ? 'minuta' : 'minuto';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'ena ura' : 'eno uro';\n        case 'hh':\n            if (number === 1) {\n                result += withoutSuffix ? 'ura' : 'uro';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'uri' : 'urama';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'ure' : 'urami';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'ur' : 'urami';\n            }\n            return result;\n        case 'd':\n            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n        case 'dd':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n            }\n            return result;\n        case 'M':\n            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n        case 'MM':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n            }\n            return result;\n        case 'y':\n            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n        case 'yy':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'leto' : 'letom';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'leta' : 'leti';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'let' : 'leti';\n            }\n            return result;\n    }\n}\nconst slLocale = {\n    abbr: 'sl',\n    months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n    weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n    weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[danes ob] LT',\n        nextDay: '[jutri ob] LT',\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v] [nedeljo] [ob] LT';\n                case 3:\n                    return '[v] [sredo] [ob] LT';\n                case 6:\n                    return '[v] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[v] dddd [ob] LT';\n            }\n        },\n        lastDay: '[včeraj ob] LT',\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[prejšnjo] [nedeljo] [ob] LT';\n                case 3:\n                    return '[prejšnjo] [sredo] [ob] LT';\n                case 6:\n                    return '[prejšnjo] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prejšnji] dddd [ob] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'čez %s',\n        past: 'pred %s',\n        s: processRelativeTime,\n        ss: processRelativeTime,\n        m: processRelativeTime,\n        mm: processRelativeTime,\n        h: processRelativeTime,\n        hh: processRelativeTime,\n        d: processRelativeTime,\n        dd: processRelativeTime,\n        M: processRelativeTime,\n        MM: processRelativeTime,\n        y: processRelativeTime,\n        yy: processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Albanian [sq]\n//! author : Agon Cecelia : https://github.com/agoncecelia\nconst sqLocale = {\n    abbr: 'sq',\n    months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n    monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n    weekdays: 'E Dielë_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n    weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n    weekdaysMin: 'Di_He_Ma_Me_En_Pr_Sh'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Sot në] LT',\n        nextDay: '[Nesër në] LT',\n        nextWeek: 'dddd [në] LT',\n        lastDay: '[Dje në] LT',\n        lastWeek: 'dddd [e kaluar në] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'në %s',\n        past: 'para %sve',\n        s: 'disa sekonda',\n        ss: '%d sekonda',\n        m: 'një minut',\n        mm: '%d minuta',\n        h: 'një orë',\n        hh: '%d orë',\n        d: 'një ditë',\n        dd: '%d ditë',\n        M: 'një muaj',\n        MM: '%d muaj',\n        y: 'një vit',\n        yy: '%d vite'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\nconst svLocale = {\n    abbr: 'sv',\n    months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n    weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n    weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n    weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY [kl.] HH:mm',\n        LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Idag] LT',\n        nextDay: '[Imorgon] LT',\n        lastDay: '[Igår] LT',\n        nextWeek: '[På] dddd LT',\n        lastWeek: '[I] dddd[s] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: 'för %s sedan',\n        s: 'några sekunder',\n        ss: '%d sekunder',\n        m: 'en minut',\n        mm: '%d minuter',\n        h: 'en timme',\n        hh: '%d timmar',\n        d: 'en dag',\n        dd: '%d dagar',\n        M: 'en månad',\n        MM: '%d månader',\n        y: 'ett år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        let b = num % 10, output = (~~(num % 100 / 10) === 1) ? 'e' :\n            (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                    (b === 3) ? 'e' : 'e';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\nconst thLocale = {\n    abbr: 'th',\n    months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n    monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n    weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY เวลา H:mm',\n        LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n    },\n    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n    isPM(input) {\n        return input === 'หลังเที่ยง';\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ก่อนเที่ยง';\n        }\n        else {\n            return 'หลังเที่ยง';\n        }\n    },\n    calendar: {\n        sameDay: '[วันนี้ เวลา] LT',\n        nextDay: '[พรุ่งนี้ เวลา] LT',\n        nextWeek: 'dddd[หน้า เวลา] LT',\n        lastDay: '[เมื่อวานนี้ เวลา] LT',\n        lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'อีก %s',\n        past: '%sที่แล้ว',\n        s: 'ไม่กี่วินาที',\n        ss: '%d วินาที',\n        m: '1 นาที',\n        mm: '%d นาที',\n        h: '1 ชั่วโมง',\n        hh: '%d ชั่วโมง',\n        d: '1 วัน',\n        dd: '%d วัน',\n        M: '1 เดือน',\n        MM: '%d เดือน',\n        y: '1 ปี',\n        yy: '%d ปี'\n    }\n};\n\n// moment.js locale configuration\n// locale : Thai-Buddhist Era [th-be]\n// author : Watcharapol Sanitwong : https://github.com/tumit\nconst thBeLocale = {\n    abbr: 'th-be',\n    months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n    monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n    weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY เวลา H:mm',\n        LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n    },\n    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n    isPM(input) {\n        return input === 'หลังเที่ยง';\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ก่อนเที่ยง';\n        }\n        else {\n            return 'หลังเที่ยง';\n        }\n    },\n    calendar: {\n        sameDay: '[วันนี้ เวลา] LT',\n        nextDay: '[พรุ่งนี้ เวลา] LT',\n        nextWeek: 'dddd[หน้า เวลา] LT',\n        lastDay: '[เมื่อวานนี้ เวลา] LT',\n        lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'อีก %s',\n        past: '%sที่แล้ว',\n        s: 'ไม่กี่วินาที',\n        ss: '%d วินาที',\n        m: '1 นาที',\n        mm: '%d นาที',\n        h: '1 ชั่วโมง',\n        hh: '%d ชั่วโมง',\n        d: '1 วัน',\n        dd: '%d วัน',\n        M: '1 เดือน',\n        MM: '%d เดือน',\n        y: '1 ปี',\n        yy: '%d ปี'\n    },\n    preparse(str, format) {\n        const _format = thBeLocale.longDateFormat[format]\n            ? thBeLocale.longDateFormat[format]\n            : format;\n        // endsWith('YYYY')\n        if (_format.indexOf('YYYY', _format.length - 'YYYY'.length) !== -1) {\n            const ddMM = str.substr(0, str.length - 4);\n            const yyyy = parseInt(str.substr(str.length - 4), 10) - 543;\n            return ddMM + yyyy;\n        }\n        return str;\n    },\n    getFullYear(date, isUTC = false) {\n        return 543 + (isUTC ? date.getUTCFullYear() : date.getFullYear());\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\nlet suffixes = {\n    1: '\\'inci',\n    5: '\\'inci',\n    8: '\\'inci',\n    70: '\\'inci',\n    80: '\\'inci',\n    2: '\\'nci',\n    7: '\\'nci',\n    20: '\\'nci',\n    50: '\\'nci',\n    3: '\\'üncü',\n    4: '\\'üncü',\n    100: '\\'üncü',\n    6: '\\'ncı',\n    9: '\\'uncu',\n    10: '\\'uncu',\n    30: '\\'uncu',\n    60: '\\'ıncı',\n    90: '\\'ıncı'\n};\nconst trLocale = {\n    abbr: 'tr',\n    months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n    monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n    weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n    weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n    weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[bugün saat] LT',\n        nextDay: '[yarın saat] LT',\n        nextWeek: '[gelecek] dddd [saat] LT',\n        lastDay: '[dün] LT',\n        lastWeek: '[geçen] dddd [saat] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s sonra',\n        past: '%s önce',\n        s: 'birkaç saniye',\n        ss: '%d saniye',\n        m: 'bir dakika',\n        mm: '%d dakika',\n        h: 'bir saat',\n        hh: '%d saat',\n        d: 'bir gün',\n        dd: '%d gün',\n        M: 'bir ay',\n        MM: '%d ay',\n        y: 'bir yıl',\n        yy: '%d yıl'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        if (num === 0) { // special case for zero\n            return num + '\\'ıncı';\n        }\n        let a = num % 10, b = num % 100 - a, c = num >= 100 ? 100 : null;\n        return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\nfunction plural(word, num) {\n    let forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\nfunction relativeTimeWithPlural(num, withoutSuffix, key) {\n    let format = {\n        ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n        mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n        hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n        dd: 'день_дні_днів',\n        MM: 'місяць_місяці_місяців',\n        yy: 'рік_роки_років'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'хвилина' : 'хвилину';\n    }\n    if (key === 'h') {\n        return withoutSuffix ? 'година' : 'годину';\n    }\n    return num + ' ' + plural(format[key], +num);\n}\nfunction weekdaysCaseReplace(date, format, isUTC) {\n    let weekdays = {\n        nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n        accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n        genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n    };\n    if (!date) {\n        return weekdays.nominative;\n    }\n    let nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n        'accusative' :\n        ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n            'genitive' :\n            'nominative');\n    return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\nfunction processHoursFunction(str) {\n    return function (date) {\n        return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n    };\n}\nconst ukLocale = {\n    abbr: 'uk',\n    months: {\n        format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n        standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n    },\n    monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n    weekdays: weekdaysCaseReplace,\n    weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY р.',\n        LLL: 'D MMMM YYYY р., HH:mm',\n        LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n    },\n    calendar: {\n        sameDay: processHoursFunction('[Сьогодні '),\n        nextDay: processHoursFunction('[Завтра '),\n        lastDay: processHoursFunction('[Вчора '),\n        nextWeek: processHoursFunction('[У] dddd ['),\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return processHoursFunction('[Минулої] dddd [')(date);\n                case 1:\n                case 2:\n                case 4:\n                    return processHoursFunction('[Минулого] dddd [')(date);\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'за %s',\n        past: '%s тому',\n        s: 'декілька секунд',\n        ss: relativeTimeWithPlural,\n        m: relativeTimeWithPlural,\n        mm: relativeTimeWithPlural,\n        h: 'годину',\n        hh: relativeTimeWithPlural,\n        d: 'день',\n        dd: relativeTimeWithPlural,\n        M: 'місяць',\n        MM: relativeTimeWithPlural,\n        y: 'рік',\n        yy: relativeTimeWithPlural\n    },\n    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n    meridiemParse: /ночі|ранку|дня|вечора/,\n    isPM(input) {\n        return /^(дня|вечора)$/.test(input);\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночі';\n        }\n        else if (hour < 12) {\n            return 'ранку';\n        }\n        else if (hour < 17) {\n            return 'дня';\n        }\n        else {\n            return 'вечора';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n    ordinal(_num, period) {\n        const num = Number(_num);\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return num + '-й';\n            case 'D':\n                return num + '-го';\n            default:\n                return num.toString();\n        }\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\nconst viLocale = {\n    abbr: 'vi',\n    months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n    monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n    weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysParseExact: true,\n    meridiemParse: /sa|ch/i,\n    isPM(input) {\n        return /^ch$/i.test(input);\n    },\n    meridiem(hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower ? 'sa' : 'SA';\n        }\n        else {\n            return isLower ? 'ch' : 'CH';\n        }\n    },\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM [năm] YYYY',\n        LLL: 'D MMMM [năm] YYYY HH:mm',\n        LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n        l: 'DD/M/YYYY',\n        ll: 'D MMM YYYY',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Hôm nay lúc] LT',\n        nextDay: '[Ngày mai lúc] LT',\n        nextWeek: 'dddd [tuần tới lúc] LT',\n        lastDay: '[Hôm qua lúc] LT',\n        lastWeek: 'dddd [tuần trước lúc] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s tới',\n        past: '%s trước',\n        s: 'vài giây',\n        ss: '%d giây',\n        m: 'một phút',\n        mm: '%d phút',\n        h: 'một giờ',\n        hh: '%d giờ',\n        d: 'một ngày',\n        dd: '%d ngày',\n        M: 'một tháng',\n        MM: '%d tháng',\n        y: 'một năm',\n        yy: '%d năm'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    ordinal(_num) {\n        return '' + _num;\n    },\n    week: {\n        dow: 1,\n        doy: 4 // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\nconst zhCnLocale = {\n    abbr: 'zh-cn',\n    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY/MM/DD',\n        LL: 'YYYY年M月D日',\n        LLL: 'YYYY年M月D日Ah点mm分',\n        LLLL: 'YYYY年M月D日ddddAh点mm分',\n        l: 'YYYY/M/D',\n        ll: 'YYYY年M月D日',\n        lll: 'YYYY年M月D日 HH:mm',\n        llll: 'YYYY年M月D日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === '凌晨' || meridiem === '早上' ||\n            meridiem === '上午') {\n            return hour;\n        }\n        else if (meridiem === '下午' || meridiem === '晚上') {\n            return hour + 12;\n        }\n        else {\n            // '中午'\n            return hour >= 11 ? hour : hour + 12;\n        }\n    },\n    meridiem(hour, minute, isLower) {\n        let hm = hour * 100 + minute;\n        if (hm < 600) {\n            return '凌晨';\n        }\n        else if (hm < 900) {\n            return '早上';\n        }\n        else if (hm < 1130) {\n            return '上午';\n        }\n        else if (hm < 1230) {\n            return '中午';\n        }\n        else if (hm < 1800) {\n            return '下午';\n        }\n        else {\n            return '晚上';\n        }\n    },\n    calendar: {\n        sameDay: '[今天]LT',\n        nextDay: '[明天]LT',\n        nextWeek: '[下]ddddLT',\n        lastDay: '[昨天]LT',\n        lastWeek: '[上]ddddLT',\n        sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n    ordinal(_num, period) {\n        const num = Number(_num);\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '日';\n            case 'M':\n                return num + '月';\n            case 'w':\n            case 'W':\n                return num + '周';\n            default:\n                return num.toString();\n        }\n    },\n    relativeTime: {\n        future: '%s内',\n        past: '%s前',\n        s: '几秒',\n        ss: '%d 秒',\n        m: '1 分钟',\n        mm: '%d 分钟',\n        h: '1 小时',\n        hh: '%d 小时',\n        d: '1 天',\n        dd: '%d 天',\n        M: '1 个月',\n        MM: '%d 个月',\n        y: '1 年',\n        yy: '%d 年'\n    },\n    week: {\n        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { add, arLocale, bgLocale, caLocale, csLocale, daLocale, deLocale, defineLocale, enGbLocale, endOf, esDoLocale, esLocale, esPrLocale, esUsLocale, etLocale, fiLocale, formatDate, frLocale, getDay, getFirstDayOfMonth, getFullYear, getLocale, getMonth, getSetGlobalLocale, glLocale, heLocale, hiLocale, hrLocale, huLocale, idLocale, isAfter, isArray, isBefore, isDate, isDateValid, isDisabledDay, isFirstDayOfWeek, isSame, isSameDay$1 as isSameDay, isSameMonth, isSameYear, itLocale, jaLocale, kaLocale, kkLocale, koLocale, listLocales, ltLocale, lvLocale, mnLocale, nbLocale, nlBeLocale, nlLocale, parseDate, plLocale, ptBrLocale, roLocale, ruLocale, setFullDate, shiftDate, skLocale, slLocale, sqLocale, startOf, subtract, svLocale, thBeLocale, thLocale, trLocale, ukLocale, updateLocale, utcAsLocal, viLocale, zhCnLocale };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}