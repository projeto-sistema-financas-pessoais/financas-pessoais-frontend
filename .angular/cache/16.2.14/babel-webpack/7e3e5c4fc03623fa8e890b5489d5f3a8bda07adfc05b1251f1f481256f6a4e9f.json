{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction TimepickerComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_7_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.changeMinutes(ctx_r18.minuteStep));\n    });\n    i0.ɵɵelement(2, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r1.canIncrementMinutes || !ctx_r1.isEditable);\n  }\n}\nfunction TimepickerComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_9_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.changeSeconds(ctx_r20.secondsStep));\n    });\n    i0.ɵɵelement(2, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r3.canIncrementSeconds || !ctx_r3.isEditable);\n  }\n}\nfunction TimepickerComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\nfunction TimepickerComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_16_Template_input_wheel_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      ctx_r22.prevDef($event);\n      return i0.ɵɵresetView(ctx_r22.changeMinutes(ctx_r22.minuteStep * ctx_r22.wheelSign($event), \"wheel\"));\n    })(\"keydown.ArrowUp\", function TimepickerComponent_td_16_Template_input_keydown_ArrowUp_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.changeMinutes(ctx_r24.minuteStep, \"key\"));\n    })(\"keydown.ArrowDown\", function TimepickerComponent_td_16_Template_input_keydown_ArrowDown_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.changeMinutes(-ctx_r25.minuteStep, \"key\"));\n    })(\"change\", function TimepickerComponent_td_16_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.updateMinutes($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-error\", ctx_r7.invalidMinutes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r7.invalidMinutes);\n    i0.ɵɵproperty(\"placeholder\", ctx_r7.minutesPlaceholder)(\"readonly\", ctx_r7.readonlyInput)(\"disabled\", ctx_r7.disabled)(\"value\", ctx_r7.minutes);\n    i0.ɵɵattribute(\"aria-label\", ctx_r7.labelMinutes);\n  }\n}\nfunction TimepickerComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_18_Template_input_wheel_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      ctx_r27.prevDef($event);\n      return i0.ɵɵresetView(ctx_r27.changeSeconds(ctx_r27.secondsStep * ctx_r27.wheelSign($event), \"wheel\"));\n    })(\"keydown.ArrowUp\", function TimepickerComponent_td_18_Template_input_keydown_ArrowUp_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.changeSeconds(ctx_r29.secondsStep, \"key\"));\n    })(\"keydown.ArrowDown\", function TimepickerComponent_td_18_Template_input_keydown_ArrowDown_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.changeSeconds(-ctx_r30.secondsStep, \"key\"));\n    })(\"change\", function TimepickerComponent_td_18_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.updateSeconds($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-error\", ctx_r9.invalidSeconds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r9.invalidSeconds);\n    i0.ɵɵproperty(\"placeholder\", ctx_r9.secondsPlaceholder)(\"readonly\", ctx_r9.readonlyInput)(\"disabled\", ctx_r9.disabled)(\"value\", ctx_r9.seconds);\n    i0.ɵɵattribute(\"aria-label\", ctx_r9.labelSeconds);\n  }\n}\nfunction TimepickerComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_20_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.toggleMeridian());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    i0.ɵɵproperty(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r11.meridian, \" \");\n  }\n}\nfunction TimepickerComponent_td_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_26_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.changeMinutes(-ctx_r34.minuteStep));\n    });\n    i0.ɵɵelement(2, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r13.canDecrementMinutes || !ctx_r13.isEditable);\n  }\n}\nfunction TimepickerComponent_td_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_28_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.changeSeconds(-ctx_r36.secondsStep));\n    });\n    i0.ɵɵelement(2, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r15.canDecrementSeconds || !ctx_r15.isEditable);\n  }\n}\nfunction TimepickerComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\nclass TimepickerActions {\n  static #_ = this.WRITE_VALUE = '[timepicker] write value from ng model';\n  static #_2 = this.CHANGE_HOURS = '[timepicker] change hours';\n  static #_3 = this.CHANGE_MINUTES = '[timepicker] change minutes';\n  static #_4 = this.CHANGE_SECONDS = '[timepicker] change seconds';\n  static #_5 = this.SET_TIME_UNIT = '[timepicker] set time unit';\n  static #_6 = this.UPDATE_CONTROLS = '[timepicker] update controls';\n  writeValue(value) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n  changeHours(event) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n  changeMinutes(event) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n  changeSeconds(event) {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n  setTime(value) {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n  updateControls(value) {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\n  static #_7 = this.ɵfac = function TimepickerActions_Factory(t) {\n    return new (t || TimepickerActions)();\n  };\n  static #_8 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TimepickerActions,\n    factory: TimepickerActions.ɵfac,\n    providedIn: 'platform'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerActions, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], null, null);\n})();\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\nfunction isValidDate(value) {\n  if (!value) {\n    return false;\n  }\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n  return true;\n}\nfunction isValidLimit(controls, newDate) {\n  if (controls.min && newDate < controls.min) {\n    return false;\n  }\n  if (controls.max && newDate > controls.max) {\n    return false;\n  }\n  return true;\n}\nfunction toNumber(value) {\n  if (typeof value === 'undefined') {\n    return NaN;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return parseInt(value, dex);\n}\nfunction isNumber(value) {\n  return !isNaN(toNumber(value));\n}\nfunction parseHours(value, isPM = false) {\n  const hour = toNumber(value);\n  if (isNaN(hour) || hour < 0 || hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n    return NaN;\n  }\n  return hour;\n}\nfunction parseMinutes(value) {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n  return minute;\n}\nfunction parseSeconds(value) {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n  return seconds;\n}\nfunction parseTime(value) {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n  return value;\n}\nfunction changeTime(value, diff) {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n  if (!diff) {\n    return value;\n  }\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n  if (diff.hour) {\n    hour = hour + toNumber(diff.hour);\n  }\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n  return createDate(value, hour, minutes, seconds);\n}\nfunction setTime(value, opts) {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n  if (opts.isPM && hour !== 12) {\n    hour += hoursPerDayHalf;\n  }\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n    return value;\n  }\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n  return createDate(value, hour, minute, seconds);\n}\nfunction createDate(value, hours, minutes, seconds) {\n  const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n  // #3139 ensure date part remains unchanged\n  newValue.setFullYear(value.getFullYear());\n  newValue.setMonth(value.getMonth());\n  newValue.setDate(value.getDate());\n  return newValue;\n}\nfunction padNumber(value) {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n  return `0${_value}`;\n}\nfunction isHourInputValid(hours, isPM) {\n  return !isNaN(parseHours(hours, isPM));\n}\nfunction isMinuteInputValid(minutes) {\n  return !isNaN(parseMinutes(minutes));\n}\nfunction isSecondInputValid(seconds) {\n  return !isNaN(parseSeconds(seconds));\n}\nfunction isInputLimitValid(diff, max, min) {\n  const newDate = setTime(new Date(), diff);\n  if (!newDate) {\n    return false;\n  }\n  if (max && newDate > max) {\n    return false;\n  }\n  if (min && newDate < min) {\n    return false;\n  }\n  return true;\n}\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n  return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n  return isHourInputValid(hours, isPM) && isMinuteInputValid(minutes) && isSecondInputValid(seconds);\n}\nfunction canChangeValue(state, event) {\n  if (state.readonlyInput || state.disabled) {\n    return false;\n  }\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction canChangeHours(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n  return true;\n}\nfunction canChangeMinutes(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n  return true;\n}\nfunction canChangeSeconds(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n  return true;\n}\nfunction getControlsValue(state) {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\nfunction timepickerControls(value, state) {\n  const hoursPerDay = 24;\n  const hoursPerDayHalf = 12;\n  const {\n    min,\n    max,\n    hourStep,\n    minuteStep,\n    secondsStep,\n    showSeconds\n  } = state;\n  const res = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  };\n  if (!value) {\n    return res;\n  }\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, {\n      hour: hourStep\n    });\n    res.canIncrementHours = max > _newHour && value.getHours() + hourStep < hoursPerDay;\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, {\n        minute: minuteStep\n      });\n      res.canIncrementMinutes = showSeconds ? max > _newMinutes : max >= _newMinutes;\n    }\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, {\n        seconds: secondsStep\n      });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n    if (value.getHours() < hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: hoursPerDayHalf\n      }) < max;\n    }\n  }\n  if (min) {\n    const _newHour = changeTime(value, {\n      hour: -hourStep\n    });\n    res.canDecrementHours = min < _newHour;\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, {\n        minute: -minuteStep\n      });\n      res.canDecrementMinutes = showSeconds ? min < _newMinutes : min <= _newMinutes;\n    }\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, {\n        seconds: -secondsStep\n      });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n    if (value.getHours() >= hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: -hoursPerDayHalf\n      }) > min;\n    }\n  }\n  return res;\n}\n\n/** Provides default configuration values for timepicker */\nclass TimepickerConfig {\n  constructor() {\n    /** hours change step */\n    this.hourStep = 1;\n    /** minutes change step */\n    this.minuteStep = 5;\n    /** seconds changes step */\n    this.secondsStep = 10;\n    /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n    this.showMeridian = true;\n    /** meridian labels based on locale */\n    this.meridians = ['AM', 'PM'];\n    /** if true hours and minutes fields will be readonly */\n    this.readonlyInput = false;\n    /** if true hours and minutes fields will be disabled */\n    this.disabled = false;\n    /** if true emptyTime is not marked as invalid */\n    this.allowEmptyTime = false;\n    /** if true scroll inside hours and minutes inputs will change time */\n    this.mousewheel = true;\n    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n    this.arrowkeys = true;\n    /** if true spinner arrows above and below the inputs will be shown */\n    this.showSpinners = true;\n    /** show seconds in timepicker */\n    this.showSeconds = false;\n    /** show minutes in timepicker */\n    this.showMinutes = true;\n    /** placeholder for hours field in timepicker */\n    this.hoursPlaceholder = 'HH';\n    /** placeholder for minutes field in timepicker */\n    this.minutesPlaceholder = 'MM';\n    /** placeholder for seconds field in timepicker */\n    this.secondsPlaceholder = 'SS';\n    /** hours aria label */\n    this.ariaLabelHours = 'hours';\n    /** minutes aria label */\n    this.ariaLabelMinutes = 'minutes';\n    /** seconds aria label */\n    this.ariaLabelSeconds = 'seconds';\n  }\n  static #_ = this.ɵfac = function TimepickerConfig_Factory(t) {\n    return new (t || TimepickerConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TimepickerConfig,\n    factory: TimepickerConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst initialState = {\n  value: void 0,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  }\n};\nfunction timepickerReducer(state = initialState, action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE:\n      {\n        return Object.assign({}, state, {\n          value: action.payload\n        });\n      }\n    case TimepickerActions.CHANGE_HOURS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeHours(action.payload, state.controls)) {\n          return state;\n        }\n        const _newTime = changeTime(state.value, {\n          hour: action.payload.step\n        });\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.CHANGE_MINUTES:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeMinutes(action.payload, state.controls)) {\n          return state;\n        }\n        const _newTime = changeTime(state.value, {\n          minute: action.payload.step\n        });\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.CHANGE_SECONDS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeSeconds(action.payload, state.controls)) {\n          return state;\n        }\n        const _newTime = changeTime(state.value, {\n          seconds: action.payload.step\n        });\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.SET_TIME_UNIT:\n      {\n        if (!canChangeValue(state.config)) {\n          return state;\n        }\n        const _newTime = setTime(state.value, action.payload);\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.UPDATE_CONTROLS:\n      {\n        const _newControlsState = timepickerControls(state.value, action.payload);\n        const _newState = {\n          value: state.value,\n          config: action.payload,\n          controls: _newControlsState\n        };\n        if (state.config.showMeridian !== _newState.config.showMeridian) {\n          if (state.value) {\n            _newState.value = new Date(state.value);\n          }\n        }\n        return Object.assign({}, state, _newState);\n      }\n    default:\n      return state;\n  }\n}\nclass TimepickerStore extends MiniStore {\n  constructor() {\n    const _dispatcher = new BehaviorSubject({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n    super(_dispatcher, timepickerReducer, state);\n  }\n  static #_ = this.ɵfac = function TimepickerStore_Factory(t) {\n    return new (t || TimepickerStore)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TimepickerStore,\n    factory: TimepickerStore.ɵfac,\n    providedIn: 'platform'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerStore, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], () => [], null);\n})();\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\nclass TimepickerComponent {\n  constructor(_config, _cd, _store, _timepickerActions) {\n    this._cd = _cd;\n    this._store = _store;\n    this._timepickerActions = _timepickerActions;\n    /** hours change step */\n    this.hourStep = 1;\n    /** minutes change step */\n    this.minuteStep = 5;\n    /** seconds change step */\n    this.secondsStep = 10;\n    /** if true hours and minutes fields will be readonly */\n    this.readonlyInput = false;\n    /** if true hours and minutes fields will be disabled */\n    this.disabled = false;\n    /** if true scroll inside hours and minutes inputs will change time */\n    this.mousewheel = true;\n    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n    this.arrowkeys = true;\n    /** if true spinner arrows above and below the inputs will be shown */\n    this.showSpinners = true;\n    /** if true meridian button will be shown */\n    this.showMeridian = true;\n    /** show minutes in timepicker */\n    this.showMinutes = true;\n    /** show seconds in timepicker */\n    this.showSeconds = false;\n    /** meridian labels based on locale */\n    this.meridians = ['AM', 'PM'];\n    /** placeholder for hours field in timepicker */\n    this.hoursPlaceholder = 'HH';\n    /** placeholder for minutes field in timepicker */\n    this.minutesPlaceholder = 'MM';\n    /** placeholder for seconds field in timepicker */\n    this.secondsPlaceholder = 'SS';\n    /** emits true if value is a valid date */\n    this.isValid = new EventEmitter();\n    /** emits value of meridian*/\n    this.meridianChange = new EventEmitter();\n    // ui variables\n    this.hours = '';\n    this.minutes = '';\n    this.seconds = '';\n    this.meridian = '';\n    // min\\max validation for input fields\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n    // aria-label variables\n    this.labelHours = 'hours';\n    this.labelMinutes = 'minutes';\n    this.labelSeconds = 'seconds';\n    // time picker controls state\n    this.canIncrementHours = true;\n    this.canIncrementMinutes = true;\n    this.canIncrementSeconds = true;\n    this.canDecrementHours = true;\n    this.canDecrementMinutes = true;\n    this.canDecrementSeconds = true;\n    this.canToggleMeridian = true;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.onChange = Function.prototype;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.onTouched = Function.prototype;\n    this.config = _config;\n    Object.assign(this, this.config);\n    this.timepickerSub = _store.select(state => state.value).subscribe(value => {\n      // update UI values if date changed\n      this._renderTime(value);\n      this.onChange(value);\n      this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    });\n    _store.select(state => state.controls).subscribe(controlsState => {\n      const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n      const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n      this.isValid.emit(isValid);\n      Object.assign(this, controlsState);\n      _cd.markForCheck();\n    });\n  }\n  /** @deprecated - please use `isEditable` instead */\n  get isSpinnersVisible() {\n    return this.showSpinners && !this.readonlyInput;\n  }\n  get isEditable() {\n    return !(this.readonlyInput || this.disabled);\n  }\n  resetValidation() {\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n  }\n  isPM() {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n  prevDef($event) {\n    $event.preventDefault();\n  }\n  wheelSign($event) {\n    return Math.sign($event.deltaY || 0) * -1;\n  }\n  ngOnChanges() {\n    this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n  }\n  changeHours(step, source = '') {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeHours({\n      step,\n      source\n    }));\n  }\n  changeMinutes(step, source = '') {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeMinutes({\n      step,\n      source\n    }));\n  }\n  changeSeconds(step, source = '') {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeSeconds({\n      step,\n      source\n    }));\n  }\n  updateHours(target) {\n    this.resetValidation();\n    this.hours = target.value;\n    const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.invalidHours = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._updateTime();\n  }\n  updateMinutes(target) {\n    this.resetValidation();\n    this.minutes = target.value;\n    const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.invalidMinutes = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._updateTime();\n  }\n  updateSeconds(target) {\n    this.resetValidation();\n    this.seconds = target.value;\n    const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.invalidSeconds = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._updateTime();\n  }\n  isValidLimit() {\n    return isInputLimitValid({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }, this.max, this.min);\n  }\n  isOneOfDatesIsEmpty() {\n    return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n  }\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    const _minutes = this.showMinutes ? this.minutes : void 0;\n    const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._store.dispatch(this._timepickerActions.setTime({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }));\n  }\n  toggleMeridian() {\n    if (!this.showMeridian || !this.isEditable) {\n      return;\n    }\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(this._timepickerActions.changeHours({\n      step: _hoursPerDayHalf,\n      source: ''\n    }));\n  }\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj) {\n    if (isValidDate(obj)) {\n      this.resetValidation();\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue());\n    }\n  }\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * This function is called when the control status changes to or from \"disabled\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._cd.markForCheck();\n  }\n  ngOnDestroy() {\n    this.timepickerSub?.unsubscribe();\n  }\n  _renderTime(value) {\n    if (!value || !isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n      this.meridianChange.emit(this.meridian);\n      return;\n    }\n    const _value = parseTime(value);\n    if (!_value) {\n      return;\n    }\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      this.meridianChange.emit(this.meridian);\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\n  static #_ = this.ɵfac = function TimepickerComponent_Factory(t) {\n    return new (t || TimepickerComponent)(i0.ɵɵdirectiveInject(TimepickerConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TimepickerStore), i0.ɵɵdirectiveInject(TimepickerActions));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TimepickerComponent,\n    selectors: [[\"timepicker\"]],\n    inputs: {\n      hourStep: \"hourStep\",\n      minuteStep: \"minuteStep\",\n      secondsStep: \"secondsStep\",\n      readonlyInput: \"readonlyInput\",\n      disabled: \"disabled\",\n      mousewheel: \"mousewheel\",\n      arrowkeys: \"arrowkeys\",\n      showSpinners: \"showSpinners\",\n      showMeridian: \"showMeridian\",\n      showMinutes: \"showMinutes\",\n      showSeconds: \"showSeconds\",\n      meridians: \"meridians\",\n      min: \"min\",\n      max: \"max\",\n      hoursPlaceholder: \"hoursPlaceholder\",\n      minutesPlaceholder: \"minutesPlaceholder\",\n      secondsPlaceholder: \"secondsPlaceholder\"\n    },\n    outputs: {\n      isValid: \"isValid\",\n      meridianChange: \"meridianChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore]), i0.ɵɵNgOnChangesFeature],\n    decls: 31,\n    vars: 33,\n    consts: [[1, \"text-center\", 3, \"hidden\"], [\"href\", \"javascript:void(0);\", 1, \"btn\", \"btn-link\", 3, \"click\"], [1, \"bs-chevron\", \"bs-chevron-up\"], [4, \"ngIf\"], [1, \"form-group\", \"mb-3\"], [\"type\", \"text\", \"maxlength\", \"2\", 1, \"form-control\", \"text-center\", \"bs-timepicker-field\", 3, \"placeholder\", \"readonly\", \"disabled\", \"value\", \"wheel\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"change\"], [\"class\", \"form-group mb-3\", 3, \"has-error\", 4, \"ngIf\"], [1, \"bs-chevron\", \"bs-chevron-down\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"text-center\", 3, \"disabled\", \"click\"]],\n    template: function TimepickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\")(1, \"tbody\")(2, \"tr\", 0)(3, \"td\")(4, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_4_listener() {\n          return ctx.changeHours(ctx.hourStep);\n        });\n        i0.ɵɵelement(5, \"span\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, TimepickerComponent_td_6_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(7, TimepickerComponent_td_7_Template, 3, 2, \"td\", 3);\n        i0.ɵɵtemplate(8, TimepickerComponent_td_8_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(9, TimepickerComponent_td_9_Template, 3, 2, \"td\", 3);\n        i0.ɵɵtemplate(10, TimepickerComponent_td_10_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(11, TimepickerComponent_td_11_Template, 1, 0, \"td\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"tr\")(13, \"td\", 4)(14, \"input\", 5);\n        i0.ɵɵlistener(\"wheel\", function TimepickerComponent_Template_input_wheel_14_listener($event) {\n          ctx.prevDef($event);\n          return ctx.changeHours(ctx.hourStep * ctx.wheelSign($event), \"wheel\");\n        })(\"keydown.ArrowUp\", function TimepickerComponent_Template_input_keydown_ArrowUp_14_listener() {\n          return ctx.changeHours(ctx.hourStep, \"key\");\n        })(\"keydown.ArrowDown\", function TimepickerComponent_Template_input_keydown_ArrowDown_14_listener() {\n          return ctx.changeHours(-ctx.hourStep, \"key\");\n        })(\"change\", function TimepickerComponent_Template_input_change_14_listener($event) {\n          return ctx.updateHours($event.target);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, TimepickerComponent_td_15_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(16, TimepickerComponent_td_16_Template, 2, 9, \"td\", 6);\n        i0.ɵɵtemplate(17, TimepickerComponent_td_17_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(18, TimepickerComponent_td_18_Template, 2, 9, \"td\", 6);\n        i0.ɵɵtemplate(19, TimepickerComponent_td_19_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(20, TimepickerComponent_td_20_Template, 3, 4, \"td\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"tr\", 0)(22, \"td\")(23, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_23_listener() {\n          return ctx.changeHours(-ctx.hourStep);\n        });\n        i0.ɵɵelement(24, \"span\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(25, TimepickerComponent_td_25_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(26, TimepickerComponent_td_26_Template, 3, 2, \"td\", 3);\n        i0.ɵɵtemplate(27, TimepickerComponent_td_27_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(28, TimepickerComponent_td_28_Template, 3, 2, \"td\", 3);\n        i0.ɵɵtemplate(29, TimepickerComponent_td_29_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(30, TimepickerComponent_td_30_Template, 1, 0, \"td\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"disabled\", !ctx.canIncrementHours || !ctx.isEditable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"has-error\", ctx.invalidHours);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.invalidHours);\n        i0.ɵɵproperty(\"placeholder\", ctx.hoursPlaceholder)(\"readonly\", ctx.readonlyInput)(\"disabled\", ctx.disabled)(\"value\", ctx.hours);\n        i0.ɵɵattribute(\"aria-label\", ctx.labelHours);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"disabled\", !ctx.canDecrementHours || !ctx.isEditable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      }\n    },\n    dependencies: [i4.NgIf],\n    styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'timepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n      encapsulation: ViewEncapsulation.None,\n      template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\",\n      styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"]\n    }]\n  }], () => [{\n    type: TimepickerConfig\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: TimepickerStore\n  }, {\n    type: TimepickerActions\n  }], {\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondsStep: [{\n      type: Input\n    }],\n    readonlyInput: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    mousewheel: [{\n      type: Input\n    }],\n    arrowkeys: [{\n      type: Input\n    }],\n    showSpinners: [{\n      type: Input\n    }],\n    showMeridian: [{\n      type: Input\n    }],\n    showMinutes: [{\n      type: Input\n    }],\n    showSeconds: [{\n      type: Input\n    }],\n    meridians: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    hoursPlaceholder: [{\n      type: Input\n    }],\n    minutesPlaceholder: [{\n      type: Input\n    }],\n    secondsPlaceholder: [{\n      type: Input\n    }],\n    isValid: [{\n      type: Output\n    }],\n    meridianChange: [{\n      type: Output\n    }]\n  });\n})();\nclass TimepickerModule {\n  static forRoot() {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerActions, TimepickerStore]\n    };\n  }\n  static #_ = this.ɵfac = function TimepickerModule_Factory(t) {\n    return new (t || TimepickerModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TimepickerModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [TimepickerStore],\n    imports: [CommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TimepickerComponent],\n      exports: [TimepickerComponent],\n      providers: [TimepickerStore]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore };","map":{"version":3,"names":["i0","Injectable","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","NG_VALUE_ACCESSOR","BehaviorSubject","MiniStore","MiniState","i4","CommonModule","TimepickerComponent_td_6_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","TimepickerComponent_td_7_Template","_r19","ɵɵgetCurrentView","ɵɵlistener","TimepickerComponent_td_7_Template_a_click_1_listener","ɵɵrestoreView","ctx_r18","ɵɵnextContext","ɵɵresetView","changeMinutes","minuteStep","ɵɵelement","ctx_r1","ɵɵadvance","ɵɵclassProp","canIncrementMinutes","isEditable","TimepickerComponent_td_8_Template","TimepickerComponent_td_9_Template","_r21","TimepickerComponent_td_9_Template_a_click_1_listener","ctx_r20","changeSeconds","secondsStep","ctx_r3","canIncrementSeconds","TimepickerComponent_td_10_Template","TimepickerComponent_td_11_Template","TimepickerComponent_td_15_Template","TimepickerComponent_td_16_Template","_r23","TimepickerComponent_td_16_Template_input_wheel_1_listener","$event","ctx_r22","prevDef","wheelSign","TimepickerComponent_td_16_Template_input_keydown_ArrowUp_1_listener","ctx_r24","TimepickerComponent_td_16_Template_input_keydown_ArrowDown_1_listener","ctx_r25","TimepickerComponent_td_16_Template_input_change_1_listener","ctx_r26","updateMinutes","target","ctx_r7","invalidMinutes","ɵɵproperty","minutesPlaceholder","readonlyInput","disabled","minutes","ɵɵattribute","labelMinutes","TimepickerComponent_td_17_Template","TimepickerComponent_td_18_Template","_r28","TimepickerComponent_td_18_Template_input_wheel_1_listener","ctx_r27","TimepickerComponent_td_18_Template_input_keydown_ArrowUp_1_listener","ctx_r29","TimepickerComponent_td_18_Template_input_keydown_ArrowDown_1_listener","ctx_r30","TimepickerComponent_td_18_Template_input_change_1_listener","ctx_r31","updateSeconds","ctx_r9","invalidSeconds","secondsPlaceholder","seconds","labelSeconds","TimepickerComponent_td_19_Template","TimepickerComponent_td_20_Template","_r33","TimepickerComponent_td_20_Template_button_click_1_listener","ctx_r32","toggleMeridian","ctx_r11","canToggleMeridian","ɵɵtextInterpolate1","meridian","TimepickerComponent_td_25_Template","TimepickerComponent_td_26_Template","_r35","TimepickerComponent_td_26_Template_a_click_1_listener","ctx_r34","ctx_r13","canDecrementMinutes","TimepickerComponent_td_27_Template","TimepickerComponent_td_28_Template","_r37","TimepickerComponent_td_28_Template_a_click_1_listener","ctx_r36","ctx_r15","canDecrementSeconds","TimepickerComponent_td_29_Template","TimepickerComponent_td_30_Template","TimepickerActions","_","WRITE_VALUE","_2","CHANGE_HOURS","_3","CHANGE_MINUTES","_4","CHANGE_SECONDS","_5","SET_TIME_UNIT","_6","UPDATE_CONTROLS","writeValue","value","type","payload","changeHours","event","setTime","updateControls","_7","ɵfac","TimepickerActions_Factory","t","_8","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","args","dex","hoursPerDay","hoursPerDayHalf","minutesPerHour","secondsPerMinute","isValidDate","Date","isNaN","getHours","isValidLimit","controls","newDate","min","max","toNumber","NaN","parseInt","isNumber","parseHours","isPM","hour","parseMinutes","minute","parseSeconds","parseTime","changeTime","diff","createDate","getMinutes","getSeconds","opts","hours","newValue","getFullYear","getMonth","getDate","getMilliseconds","setFullYear","setMonth","setDate","padNumber","_value","toString","length","isHourInputValid","isMinuteInputValid","isSecondInputValid","isInputLimitValid","isOneOfDatesEmpty","isInputValid","canChangeValue","state","source","mousewheel","arrowkeys","canChangeHours","step","canIncrementHours","canDecrementHours","canChangeMinutes","canChangeSeconds","getControlsValue","hourStep","showSpinners","showMeridian","showSeconds","meridians","timepickerControls","res","_newHour","_newMinutes","_newSeconds","TimepickerConfig","constructor","allowEmptyTime","showMinutes","hoursPlaceholder","ariaLabelHours","ariaLabelMinutes","ariaLabelSeconds","TimepickerConfig_Factory","initialState","config","timepickerReducer","action","Object","assign","_newTime","_newControlsState","_newState","TimepickerStore","_dispatcher","TimepickerStore_Factory","TIMEPICKER_CONTROL_VALUE_ACCESSOR","provide","useExisting","TimepickerComponent","multi","_config","_cd","_store","_timepickerActions","isValid","meridianChange","invalidHours","labelHours","onChange","Function","prototype","onTouched","timepickerSub","select","subscribe","_renderTime","dispatch","controlsState","isTimepickerInputValid","isOneOfDatesIsEmpty","emit","markForCheck","isSpinnersVisible","resetValidation","preventDefault","Math","sign","deltaY","ngOnChanges","updateHours","_updateTime","_seconds","_minutes","_hoursPerDayHalf","obj","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ngOnDestroy","unsubscribe","_hours","getUTCSeconds","TimepickerComponent_Factory","ɵɵdirectiveInject","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","features","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","decls","vars","consts","template","TimepickerComponent_Template","TimepickerComponent_Template_a_click_4_listener","ɵɵtemplate","TimepickerComponent_Template_input_wheel_14_listener","TimepickerComponent_Template_input_keydown_ArrowUp_14_listener","TimepickerComponent_Template_input_keydown_ArrowDown_14_listener","TimepickerComponent_Template_input_change_14_listener","TimepickerComponent_Template_a_click_23_listener","dependencies","NgIf","styles","encapsulation","changeDetection","selector","OnPush","providers","None","TimepickerModule","forRoot","ngModule","TimepickerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["/home/laispa/financas-pessoais-frontend/node_modules/ngx-bootstrap/timepicker/fesm2022/ngx-bootstrap-timepicker.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass TimepickerActions {\n    static { this.WRITE_VALUE = '[timepicker] write value from ng model'; }\n    static { this.CHANGE_HOURS = '[timepicker] change hours'; }\n    static { this.CHANGE_MINUTES = '[timepicker] change minutes'; }\n    static { this.CHANGE_SECONDS = '[timepicker] change seconds'; }\n    static { this.SET_TIME_UNIT = '[timepicker] set time unit'; }\n    static { this.UPDATE_CONTROLS = '[timepicker] update controls'; }\n    writeValue(value) {\n        return {\n            type: TimepickerActions.WRITE_VALUE,\n            payload: value\n        };\n    }\n    changeHours(event) {\n        return {\n            type: TimepickerActions.CHANGE_HOURS,\n            payload: event\n        };\n    }\n    changeMinutes(event) {\n        return {\n            type: TimepickerActions.CHANGE_MINUTES,\n            payload: event\n        };\n    }\n    changeSeconds(event) {\n        return {\n            type: TimepickerActions.CHANGE_SECONDS,\n            payload: event\n        };\n    }\n    setTime(value) {\n        return {\n            type: TimepickerActions.SET_TIME_UNIT,\n            payload: value\n        };\n    }\n    updateControls(value) {\n        return {\n            type: TimepickerActions.UPDATE_CONTROLS,\n            payload: value\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerActions, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerActions, providedIn: 'platform' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerActions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }] });\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\nfunction isValidDate(value) {\n    if (!value) {\n        return false;\n    }\n    if (value instanceof Date && isNaN(value.getHours())) {\n        return false;\n    }\n    if (typeof value === 'string') {\n        return isValidDate(new Date(value));\n    }\n    return true;\n}\nfunction isValidLimit(controls, newDate) {\n    if (controls.min && newDate < controls.min) {\n        return false;\n    }\n    if (controls.max && newDate > controls.max) {\n        return false;\n    }\n    return true;\n}\nfunction toNumber(value) {\n    if (typeof value === 'undefined') {\n        return NaN;\n    }\n    if (typeof value === 'number') {\n        return value;\n    }\n    return parseInt(value, dex);\n}\nfunction isNumber(value) {\n    return !isNaN(toNumber(value));\n}\nfunction parseHours(value, isPM = false) {\n    const hour = toNumber(value);\n    if (isNaN(hour) ||\n        hour < 0 ||\n        hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n        return NaN;\n    }\n    return hour;\n}\nfunction parseMinutes(value) {\n    const minute = toNumber(value);\n    if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n        return NaN;\n    }\n    return minute;\n}\nfunction parseSeconds(value) {\n    const seconds = toNumber(value);\n    if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n        return NaN;\n    }\n    return seconds;\n}\nfunction parseTime(value) {\n    if (typeof value === 'string') {\n        return new Date(value);\n    }\n    return value;\n}\nfunction changeTime(value, diff) {\n    if (!value) {\n        return changeTime(createDate(new Date(), 0, 0, 0), diff);\n    }\n    if (!diff) {\n        return value;\n    }\n    let hour = value.getHours();\n    let minutes = value.getMinutes();\n    let seconds = value.getSeconds();\n    if (diff.hour) {\n        hour = hour + toNumber(diff.hour);\n    }\n    if (diff.minute) {\n        minutes = minutes + toNumber(diff.minute);\n    }\n    if (diff.seconds) {\n        seconds = seconds + toNumber(diff.seconds);\n    }\n    return createDate(value, hour, minutes, seconds);\n}\nfunction setTime(value, opts) {\n    let hour = parseHours(opts.hour);\n    const minute = parseMinutes(opts.minute);\n    const seconds = parseSeconds(opts.seconds) || 0;\n    if (opts.isPM && hour !== 12) {\n        hour += hoursPerDayHalf;\n    }\n    if (!value) {\n        if (!isNaN(hour) && !isNaN(minute)) {\n            return createDate(new Date(), hour, minute, seconds);\n        }\n        return value;\n    }\n    if (isNaN(hour) || isNaN(minute)) {\n        return value;\n    }\n    return createDate(value, hour, minute, seconds);\n}\nfunction createDate(value, hours, minutes, seconds) {\n    const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n    // #3139 ensure date part remains unchanged\n    newValue.setFullYear(value.getFullYear());\n    newValue.setMonth(value.getMonth());\n    newValue.setDate(value.getDate());\n    return newValue;\n}\nfunction padNumber(value) {\n    const _value = value.toString();\n    if (_value.length > 1) {\n        return _value;\n    }\n    return `0${_value}`;\n}\nfunction isHourInputValid(hours, isPM) {\n    return !isNaN(parseHours(hours, isPM));\n}\nfunction isMinuteInputValid(minutes) {\n    return !isNaN(parseMinutes(minutes));\n}\nfunction isSecondInputValid(seconds) {\n    return !isNaN(parseSeconds(seconds));\n}\nfunction isInputLimitValid(diff, max, min) {\n    const newDate = setTime(new Date(), diff);\n    if (!newDate) {\n        return false;\n    }\n    if (max && newDate > max) {\n        return false;\n    }\n    if (min && newDate < min) {\n        return false;\n    }\n    return true;\n}\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n    return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n    return isHourInputValid(hours, isPM)\n        && isMinuteInputValid(minutes)\n        && isSecondInputValid(seconds);\n}\n\nfunction canChangeValue(state, event) {\n    if (state.readonlyInput || state.disabled) {\n        return false;\n    }\n    if (event) {\n        if (event.source === 'wheel' && !state.mousewheel) {\n            return false;\n        }\n        if (event.source === 'key' && !state.arrowkeys) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction canChangeHours(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementHours) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementHours) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeMinutes(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementMinutes) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementMinutes) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeSeconds(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementSeconds) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementSeconds) {\n        return false;\n    }\n    return true;\n}\nfunction getControlsValue(state) {\n    const { hourStep, minuteStep, secondsStep, readonlyInput, disabled, mousewheel, arrowkeys, showSpinners, showMeridian, showSeconds, meridians, min, max } = state;\n    return {\n        hourStep,\n        minuteStep,\n        secondsStep,\n        readonlyInput,\n        disabled,\n        mousewheel,\n        arrowkeys,\n        showSpinners,\n        showMeridian,\n        showSeconds,\n        meridians,\n        min,\n        max\n    };\n}\nfunction timepickerControls(value, state) {\n    const hoursPerDay = 24;\n    const hoursPerDayHalf = 12;\n    const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n    const res = {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    };\n    if (!value) {\n        return res;\n    }\n    // compare dates\n    if (max) {\n        const _newHour = changeTime(value, { hour: hourStep });\n        res.canIncrementHours = max > _newHour && (value.getHours() + hourStep) < hoursPerDay;\n        if (!res.canIncrementHours) {\n            const _newMinutes = changeTime(value, { minute: minuteStep });\n            res.canIncrementMinutes = showSeconds\n                ? max > _newMinutes\n                : max >= _newMinutes;\n        }\n        if (!res.canIncrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: secondsStep });\n            res.canIncrementSeconds = max >= _newSeconds;\n        }\n        if (value.getHours() < hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n        }\n    }\n    if (min) {\n        const _newHour = changeTime(value, { hour: -hourStep });\n        res.canDecrementHours = min < _newHour;\n        if (!res.canDecrementHours) {\n            const _newMinutes = changeTime(value, { minute: -minuteStep });\n            res.canDecrementMinutes = showSeconds\n                ? min < _newMinutes\n                : min <= _newMinutes;\n        }\n        if (!res.canDecrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: -secondsStep });\n            res.canDecrementSeconds = min <= _newSeconds;\n        }\n        if (value.getHours() >= hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n        }\n    }\n    return res;\n}\n\n/** Provides default configuration values for timepicker */\nclass TimepickerConfig {\n    constructor() {\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds changes step */\n        this.secondsStep = 10;\n        /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n        this.showMeridian = true;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true emptyTime is not marked as invalid */\n        this.allowEmptyTime = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** hours aria label */\n        this.ariaLabelHours = 'hours';\n        /** minutes aria label */\n        this.ariaLabelMinutes = 'minutes';\n        /** seconds aria label */\n        this.ariaLabelSeconds = 'seconds';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nconst initialState = {\n    value: void 0,\n    config: new TimepickerConfig(),\n    controls: {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    }\n};\nfunction timepickerReducer(state = initialState, action) {\n    switch (action.type) {\n        case TimepickerActions.WRITE_VALUE: {\n            return Object.assign({}, state, { value: action.payload });\n        }\n        case TimepickerActions.CHANGE_HOURS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeHours(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { hour: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_MINUTES: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeMinutes(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { minute: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_SECONDS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeSeconds(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, {\n                seconds: action.payload.step\n            });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.SET_TIME_UNIT: {\n            if (!canChangeValue(state.config)) {\n                return state;\n            }\n            const _newTime = setTime(state.value, action.payload);\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.UPDATE_CONTROLS: {\n            const _newControlsState = timepickerControls(state.value, action.payload);\n            const _newState = {\n                value: state.value,\n                config: action.payload,\n                controls: _newControlsState\n            };\n            if (state.config.showMeridian !== _newState.config.showMeridian) {\n                if (state.value) {\n                    _newState.value = new Date(state.value);\n                }\n            }\n            return Object.assign({}, state, _newState);\n        }\n        default:\n            return state;\n    }\n}\n\nclass TimepickerStore extends MiniStore {\n    constructor() {\n        const _dispatcher = new BehaviorSubject({\n            type: '[mini-ngrx] dispatcher init'\n        });\n        const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n        super(_dispatcher, timepickerReducer, state);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerStore, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerStore, providedIn: 'platform' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerStore, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }], ctorParameters: () => [] });\n\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimepickerComponent),\n    multi: true\n};\nclass TimepickerComponent {\n    constructor(_config, _cd, _store, _timepickerActions) {\n        this._cd = _cd;\n        this._store = _store;\n        this._timepickerActions = _timepickerActions;\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds change step */\n        this.secondsStep = 10;\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** if true meridian button will be shown */\n        this.showMeridian = true;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** emits true if value is a valid date */\n        this.isValid = new EventEmitter();\n        /** emits value of meridian*/\n        this.meridianChange = new EventEmitter();\n        // ui variables\n        this.hours = '';\n        this.minutes = '';\n        this.seconds = '';\n        this.meridian = '';\n        // min\\max validation for input fields\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n        // aria-label variables\n        this.labelHours = 'hours';\n        this.labelMinutes = 'minutes';\n        this.labelSeconds = 'seconds';\n        // time picker controls state\n        this.canIncrementHours = true;\n        this.canIncrementMinutes = true;\n        this.canIncrementSeconds = true;\n        this.canDecrementHours = true;\n        this.canDecrementMinutes = true;\n        this.canDecrementSeconds = true;\n        this.canToggleMeridian = true;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onChange = Function.prototype;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onTouched = Function.prototype;\n        this.config = _config;\n        Object.assign(this, this.config);\n        this.timepickerSub = _store.select(state => state.value)\n            .subscribe((value) => {\n            // update UI values if date changed\n            this._renderTime(value);\n            this.onChange(value);\n            this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n        });\n        _store.select(state => state.controls)\n            .subscribe((controlsState) => {\n            const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n            const isValid = this.config.allowEmptyTime ?\n                this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n                : isTimepickerInputValid;\n            this.isValid.emit(isValid);\n            Object.assign(this, controlsState);\n            _cd.markForCheck();\n        });\n    }\n    /** @deprecated - please use `isEditable` instead */\n    get isSpinnersVisible() {\n        return this.showSpinners && !this.readonlyInput;\n    }\n    get isEditable() {\n        return !(this.readonlyInput || this.disabled);\n    }\n    resetValidation() {\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n    }\n    isPM() {\n        return this.showMeridian && this.meridian === this.meridians[1];\n    }\n    prevDef($event) {\n        $event.preventDefault();\n    }\n    wheelSign($event) {\n        return Math.sign($event.deltaY || 0) * -1;\n    }\n    ngOnChanges() {\n        this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    }\n    changeHours(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n    }\n    changeMinutes(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeMinutes({ step, source }));\n    }\n    changeSeconds(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeSeconds({ step, source }));\n    }\n    updateHours(target) {\n        this.resetValidation();\n        this.hours = target.value;\n        const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidHours = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateMinutes(target) {\n        this.resetValidation();\n        this.minutes = target.value;\n        const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidMinutes = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateSeconds(target) {\n        this.resetValidation();\n        this.seconds = target.value;\n        const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidSeconds = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    isValidLimit() {\n        return isInputLimitValid({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }, this.max, this.min);\n    }\n    isOneOfDatesIsEmpty() {\n        return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n    }\n    _updateTime() {\n        const _seconds = this.showSeconds ? this.seconds : void 0;\n        const _minutes = this.showMinutes ? this.minutes : void 0;\n        const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._store.dispatch(this._timepickerActions.setTime({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }));\n    }\n    toggleMeridian() {\n        if (!this.showMeridian || !this.isEditable) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        this._store.dispatch(this._timepickerActions.changeHours({\n            step: _hoursPerDayHalf,\n            source: ''\n        }));\n    }\n    /**\n     * Write a new value to the element.\n     */\n    writeValue(obj) {\n        if (isValidDate(obj)) {\n            this.resetValidation();\n            this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n        }\n        else if (obj == null) {\n            this._store.dispatch(this._timepickerActions.writeValue());\n        }\n    }\n    /**\n     * Set the function to be called when the control receives a change event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Set the function to be called when the control receives a touch event.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * This function is called when the control status changes to or from \"disabled\".\n     * Depending on the value, it will enable or disable the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._cd.markForCheck();\n    }\n    ngOnDestroy() {\n        this.timepickerSub?.unsubscribe();\n    }\n    _renderTime(value) {\n        if (!value || !isValidDate(value)) {\n            this.hours = '';\n            this.minutes = '';\n            this.seconds = '';\n            this.meridian = this.meridians[0];\n            this.meridianChange.emit(this.meridian);\n            return;\n        }\n        const _value = parseTime(value);\n        if (!_value) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        let _hours = _value.getHours();\n        if (this.showMeridian) {\n            this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n            this.meridianChange.emit(this.meridian);\n            _hours = _hours % _hoursPerDayHalf;\n            // should be 12 PM, not 00 PM\n            if (_hours === 0) {\n                _hours = _hoursPerDayHalf;\n            }\n        }\n        this.hours = padNumber(_hours);\n        this.minutes = padNumber(_value.getMinutes());\n        this.seconds = padNumber(_value.getUTCSeconds());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerComponent, deps: [{ token: TimepickerConfig }, { token: i0.ChangeDetectorRef }, { token: TimepickerStore }, { token: TimepickerActions }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: TimepickerComponent, selector: \"timepicker\", inputs: { hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondsStep: \"secondsStep\", readonlyInput: \"readonlyInput\", disabled: \"disabled\", mousewheel: \"mousewheel\", arrowkeys: \"arrowkeys\", showSpinners: \"showSpinners\", showMeridian: \"showMeridian\", showMinutes: \"showMinutes\", showSeconds: \"showSeconds\", meridians: \"meridians\", min: \"min\", max: \"max\", hoursPlaceholder: \"hoursPlaceholder\", minutesPlaceholder: \"minutesPlaceholder\", secondsPlaceholder: \"secondsPlaceholder\" }, outputs: { isValid: \"isValid\", meridianChange: \"meridianChange\" }, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], usesOnChanges: true, ngImport: i0, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"], dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'timepicker', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], encapsulation: ViewEncapsulation.None, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"] }]\n        }], ctorParameters: () => [{ type: TimepickerConfig }, { type: i0.ChangeDetectorRef }, { type: TimepickerStore }, { type: TimepickerActions }], propDecorators: { hourStep: [{\n                type: Input\n            }], minuteStep: [{\n                type: Input\n            }], secondsStep: [{\n                type: Input\n            }], readonlyInput: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], mousewheel: [{\n                type: Input\n            }], arrowkeys: [{\n                type: Input\n            }], showSpinners: [{\n                type: Input\n            }], showMeridian: [{\n                type: Input\n            }], showMinutes: [{\n                type: Input\n            }], showSeconds: [{\n                type: Input\n            }], meridians: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], hoursPlaceholder: [{\n                type: Input\n            }], minutesPlaceholder: [{\n                type: Input\n            }], secondsPlaceholder: [{\n                type: Input\n            }], isValid: [{\n                type: Output\n            }], meridianChange: [{\n                type: Output\n            }] } });\n\nclass TimepickerModule {\n    static forRoot() {\n        return {\n            ngModule: TimepickerModule,\n            providers: [TimepickerActions, TimepickerStore]\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerModule, declarations: [TimepickerComponent], imports: [CommonModule], exports: [TimepickerComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerModule, providers: [TimepickerStore], imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TimepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TimepickerComponent],\n                    exports: [TimepickerComponent],\n                    providers: [TimepickerStore]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}